class t{constructor(t){void 0===t&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){void 0===t&&(t=new s);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){void 0===e&&(e=new s);const i=this.elements,o=t.x,n=t.y,r=t.z;return e.x=i[0]*o+i[1]*n+i[2]*r,e.y=i[3]*o+i[4]*n+i[5]*r,e.z=i[6]*o+i[7]*n+i[8]*r,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(e,s){void 0===s&&(s=new t);const i=this.elements,o=e.elements,n=s.elements,r=i[0],a=i[1],l=i[2],h=i[3],c=i[4],u=i[5],d=i[6],p=i[7],y=i[8],v=o[0],m=o[1],w=o[2],f=o[3],g=o[4],b=o[5],x=o[6],E=o[7],z=o[8];return n[0]=r*v+a*f+l*x,n[1]=r*m+a*g+l*E,n[2]=r*w+a*b+l*z,n[3]=h*v+c*f+u*x,n[4]=h*m+c*g+u*E,n[5]=h*w+c*b+u*z,n[6]=d*v+p*f+y*x,n[7]=d*m+p*g+y*E,n[8]=d*w+p*b+y*z,s}scale(e,s){void 0===s&&(s=new t);const i=this.elements,o=s.elements;for(let t=0;3!==t;t++)o[3*t+0]=e.x*i[3*t+0],o[3*t+1]=e.y*i[3*t+1],o[3*t+2]=e.z*i[3*t+2];return s}solve(t,e){void 0===e&&(e=new s);const i=[];let o,n;for(o=0;o<12;o++)i.push(0);for(o=0;o<3;o++)for(n=0;n<3;n++)i[o+4*n]=this.elements[o+3*n];i[3]=t.x,i[7]=t.y,i[11]=t.z;let r=3;const a=r;let l;let h;do{if(o=a-r,0===i[o+4*o])for(n=o+1;n<a;n++)if(0!==i[o+4*n]){l=4;do{h=4-l,i[h+4*o]+=i[h+4*n]}while(--l);break}if(0!==i[o+4*o])for(n=o+1;n<a;n++){const t=i[o+4*n]/i[o+4*o];l=4;do{h=4-l,i[h+4*n]=h<=o?0:i[h+4*n]-i[h+4*o]*t}while(--l)}}while(--r);if(e.z=i[11]/i[10],e.y=(i[7]-i[6]*e.z)/i[5],e.x=(i[3]-i[2]*e.z-i[1]*e.y)/i[0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,s){if(void 0===s)return this.elements[e+3*t];this.elements[e+3*t]=s}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";for(let e=0;e<9;e++)t+=this.elements[e]+",";return t}reverse(s){void 0===s&&(s=new t);const i=e;let o,n;for(o=0;o<3;o++)for(n=0;n<3;n++)i[o+6*n]=this.elements[o+3*n];i[3]=1,i[9]=0,i[15]=0,i[4]=0,i[10]=1,i[16]=0,i[5]=0,i[11]=0,i[17]=1;let r=3;const a=r;let l;let h;do{if(o=a-r,0===i[o+6*o])for(n=o+1;n<a;n++)if(0!==i[o+6*n]){l=6;do{h=6-l,i[h+6*o]+=i[h+6*n]}while(--l);break}if(0!==i[o+6*o])for(n=o+1;n<a;n++){const t=i[o+6*n]/i[o+6*o];l=6;do{h=6-l,i[h+6*n]=h<=o?0:i[h+6*n]-i[h+6*o]*t}while(--l)}}while(--r);o=2;do{n=o-1;do{const t=i[o+6*n]/i[o+6*o];l=6;do{h=6-l,i[h+6*n]=i[h+6*n]-i[h+6*o]*t}while(--l)}while(n--)}while(--o);o=2;do{const t=1/i[o+6*o];l=6;do{h=6-l,i[h+6*o]=i[h+6*o]*t}while(--l)}while(o--);o=2;do{n=2;do{if(h=i[3+n+6*o],isNaN(h)||h===1/0)throw`Could not reverse! A=[${this.toString()}]`;s.e(o,n,h)}while(n--)}while(o--);return s}setRotationFromQuaternion(t){const e=t.x,s=t.y,i=t.z,o=t.w,n=e+e,r=s+s,a=i+i,l=e*n,h=e*r,c=e*a,u=s*r,d=s*a,p=i*a,y=o*n,v=o*r,m=o*a,w=this.elements;return w[0]=1-(u+p),w[1]=h-m,w[2]=c+v,w[3]=h+m,w[4]=1-(l+p),w[5]=d-y,w[6]=c-v,w[7]=d+y,w[8]=1-(l+u),this}transpose(e){void 0===e&&(e=new t);const s=this.elements,i=e.elements;let o;return i[0]=s[0],i[4]=s[4],i[8]=s[8],o=s[1],i[1]=s[3],i[3]=o,o=s[2],i[2]=s[6],i[6]=o,o=s[5],i[5]=s[7],i[7]=o,e}}const e=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class s{constructor(t,e,s){void 0===t&&(t=0),void 0===e&&(e=0),void 0===s&&(s=0),this.x=t,this.y=e,this.z=s}cross(t,e){void 0===e&&(e=new s);const i=t.x,o=t.y,n=t.z,r=this.x,a=this.y,l=this.z;return e.x=a*n-l*o,e.y=l*i-r*n,e.z=r*o-a*i,e}set(t,e,s){return this.x=t,this.y=e,this.z=s,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(!e)return new s(this.x+t.x,this.y+t.y,this.z+t.z);e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z}vsub(t,e){if(!e)return new s(this.x-t.x,this.y-t.y,this.z-t.z);e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z}crossmat(){return new t([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,s=this.z,i=Math.sqrt(t*t+e*e+s*s);if(i>0){const t=1/i;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return i}unit(t){void 0===t&&(t=new s);const e=this.x,i=this.y,o=this.z;let n=Math.sqrt(e*e+i*i+o*o);return n>0?(n=1/n,t.x=e*n,t.y=i*n,t.z=o*n):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,s=this.z;return Math.sqrt(t*t+e*e+s*s)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,s=this.y,i=this.z,o=t.x,n=t.y,r=t.z;return Math.sqrt((o-e)*(o-e)+(n-s)*(n-s)+(r-i)*(r-i))}distanceSquared(t){const e=this.x,s=this.y,i=this.z,o=t.x,n=t.y,r=t.z;return(o-e)*(o-e)+(n-s)*(n-s)+(r-i)*(r-i)}scale(t,e){void 0===e&&(e=new s);const i=this.x,o=this.y,n=this.z;return e.x=t*i,e.y=t*o,e.z=t*n,e}vmul(t,e){return void 0===e&&(e=new s),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,i){return void 0===i&&(i=new s),i.x=this.x+t*e.x,i.y=this.y+t*e.y,i.z=this.z+t*e.z,i}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return 0===this.x&&0===this.y&&0===this.z}negate(t){return void 0===t&&(t=new s),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const s=this.length();if(s>0){const n=i,r=1/s;n.set(this.x*r,this.y*r,this.z*r);const a=o;Math.abs(n.x)<.9?(a.set(1,0,0),n.cross(a,t)):(a.set(0,1,0),n.cross(a,t)),n.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,s){const i=this.x,o=this.y,n=this.z;s.x=i+(t.x-i)*e,s.y=o+(t.y-o)*e,s.z=n+(t.z-n)*e}almostEquals(t,e){return void 0===e&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return void 0===t&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(n),n.almostEquals(t,e)}clone(){return new s(this.x,this.y,this.z)}}s.ZERO=new s(0,0,0),s.UNIT_X=new s(1,0,0),s.UNIT_Y=new s(0,1,0),s.UNIT_Z=new s(0,0,1);const i=new s,o=new s,n=new s;class r{constructor(t){void 0===t&&(t={}),this.lowerBound=new s,this.upperBound=new s,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,s,i){const o=this.lowerBound,n=this.upperBound,r=s;o.copy(t[0]),r&&r.vmult(o,o),n.copy(o);for(let e=1;e<t.length;e++){let s=t[e];r&&(r.vmult(s,a),s=a),s.x>n.x&&(n.x=s.x),s.x<o.x&&(o.x=s.x),s.y>n.y&&(n.y=s.y),s.y<o.y&&(o.y=s.y),s.z>n.z&&(n.z=s.z),s.z<o.z&&(o.z=s.z)}return e&&(e.vadd(o,o),e.vadd(n,n)),i&&(o.x-=i,o.y-=i,o.z-=i,n.x+=i,n.y+=i,n.z+=i),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return(new r).copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,s=this.upperBound,i=t.lowerBound,o=t.upperBound,n=i.x<=s.x&&s.x<=o.x||e.x<=o.x&&o.x<=s.x,r=i.y<=s.y&&s.y<=o.y||e.y<=o.y&&o.y<=s.y,a=i.z<=s.z&&s.z<=o.z||e.z<=o.z&&o.z<=s.z;return n&&r&&a}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,s=this.upperBound,i=t.lowerBound,o=t.upperBound;return e.x<=i.x&&s.x>=o.x&&e.y<=i.y&&s.y>=o.y&&e.z<=i.z&&s.z>=o.z}getCorners(t,e,s,i,o,n,r,a){const l=this.lowerBound,h=this.upperBound;t.copy(l),e.set(h.x,l.y,l.z),s.set(h.x,h.y,l.z),i.set(l.x,h.y,h.z),o.set(h.x,l.y,h.z),n.set(l.x,h.y,l.z),r.set(l.x,l.y,h.z),a.copy(h)}toLocalFrame(t,e){const s=l,i=s[0],o=s[1],n=s[2],r=s[3],a=s[4],h=s[5],c=s[6],u=s[7];this.getCorners(i,o,n,r,a,h,c,u);for(let e=0;8!==e;e++){const i=s[e];t.pointToLocal(i,i)}return e.setFromPoints(s)}toWorldFrame(t,e){const s=l,i=s[0],o=s[1],n=s[2],r=s[3],a=s[4],h=s[5],c=s[6],u=s[7];this.getCorners(i,o,n,r,a,h,c,u);for(let e=0;8!==e;e++){const i=s[e];t.pointToWorld(i,i)}return e.setFromPoints(s)}overlapsRay(t){const{direction:e,from:s}=t,i=1/e.x,o=1/e.y,n=1/e.z,r=(this.lowerBound.x-s.x)*i,a=(this.upperBound.x-s.x)*i,l=(this.lowerBound.y-s.y)*o,h=(this.upperBound.y-s.y)*o,c=(this.lowerBound.z-s.z)*n,u=(this.upperBound.z-s.z)*n,d=Math.max(Math.max(Math.min(r,a),Math.min(l,h)),Math.min(c,u)),p=Math.min(Math.min(Math.max(r,a),Math.max(l,h)),Math.max(c,u));return!(p<0)&&!(d>p)}}const a=new s,l=[new s,new s,new s,new s,new s,new s,new s,new s];class h{constructor(){this.matrix=[]}get(t,e){let{index:s}=t,{index:i}=e;if(i>s){const t=i;i=s,s=t}return this.matrix[(s*(s+1)>>1)+i-1]}set(t,e,s){let{index:i}=t,{index:o}=e;if(o>i){const t=o;o=i,i=t}this.matrix[(i*(i+1)>>1)+o-1]=s?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class c{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const s=this._listeners;return void 0===s[t]&&(s[t]=[]),s[t].includes(e)||s[t].push(e),this}hasEventListener(t,e){if(void 0===this._listeners)return!1;const s=this._listeners;return!(void 0===s[t]||!s[t].includes(e))}hasAnyEventListener(t){if(void 0===this._listeners)return!1;return void 0!==this._listeners[t]}removeEventListener(t,e){if(void 0===this._listeners)return this;const s=this._listeners;if(void 0===s[t])return this;const i=s[t].indexOf(e);return-1!==i&&s[t].splice(i,1),this}dispatchEvent(t){if(void 0===this._listeners)return this;const e=this._listeners[t.type];if(void 0!==e){t.target=this;for(let s=0,i=e.length;s<i;s++)e[s].call(this,t)}return this}}class u{constructor(t,e,s,i){void 0===t&&(t=0),void 0===e&&(e=0),void 0===s&&(s=0),void 0===i&&(i=1),this.x=t,this.y=e,this.z=s,this.w=i}set(t,e,s,i){return this.x=t,this.y=e,this.z=s,this.w=i,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const s=Math.sin(.5*e);return this.x=t.x*s,this.y=t.y*s,this.z=t.z*s,this.w=Math.cos(.5*e),this}toAxisAngle(t){void 0===t&&(t=new s),this.normalize();const e=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/i,t.y=this.y/i,t.z=this.z/i),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const e=d,s=p;t.tangents(e,s),this.setFromAxisAngle(e,Math.PI)}else{const s=t.cross(e);this.x=s.x,this.y=s.y,this.z=s.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){void 0===e&&(e=new u);const s=this.x,i=this.y,o=this.z,n=this.w,r=t.x,a=t.y,l=t.z,h=t.w;return e.x=s*h+n*r+i*l-o*a,e.y=i*h+n*a+o*r-s*l,e.z=o*h+n*l+s*a-i*r,e.w=n*h-s*r-i*a-o*l,e}inverse(t){void 0===t&&(t=new u);const e=this.x,s=this.y,i=this.z,o=this.w;this.conjugate(t);const n=1/(e*e+s*s+i*i+o*o);return t.x*=n,t.y*=n,t.z*=n,t.w*=n,t}conjugate(t){return void 0===t&&(t=new u),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){void 0===e&&(e=new s);const i=t.x,o=t.y,n=t.z,r=this.x,a=this.y,l=this.z,h=this.w,c=h*i+a*n-l*o,u=h*o+l*i-r*n,d=h*n+r*o-a*i,p=-r*i-a*o-l*n;return e.x=c*h+p*-r+u*-l-d*-a,e.y=u*h+p*-a+d*-r-c*-l,e.z=d*h+p*-l+c*-a-u*-r,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){let s,i,o;void 0===e&&(e="YZX");const n=this.x,r=this.y,a=this.z,l=this.w;switch(e){case"YZX":const t=n*r+a*l;if(t>.499&&(s=2*Math.atan2(n,l),i=Math.PI/2,o=0),t<-.499&&(s=-2*Math.atan2(n,l),i=-Math.PI/2,o=0),void 0===s){const e=n*n,h=r*r,c=a*a;s=Math.atan2(2*r*l-2*n*a,1-2*h-2*c),i=Math.asin(2*t),o=Math.atan2(2*n*l-2*r*a,1-2*e-2*c)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=s,t.z=i,t.x=o}setFromEuler(t,e,s,i){void 0===i&&(i="XYZ");const o=Math.cos(t/2),n=Math.cos(e/2),r=Math.cos(s/2),a=Math.sin(t/2),l=Math.sin(e/2),h=Math.sin(s/2);return"XYZ"===i?(this.x=a*n*r+o*l*h,this.y=o*l*r-a*n*h,this.z=o*n*h+a*l*r,this.w=o*n*r-a*l*h):"YXZ"===i?(this.x=a*n*r+o*l*h,this.y=o*l*r-a*n*h,this.z=o*n*h-a*l*r,this.w=o*n*r+a*l*h):"ZXY"===i?(this.x=a*n*r-o*l*h,this.y=o*l*r+a*n*h,this.z=o*n*h+a*l*r,this.w=o*n*r-a*l*h):"ZYX"===i?(this.x=a*n*r-o*l*h,this.y=o*l*r+a*n*h,this.z=o*n*h-a*l*r,this.w=o*n*r+a*l*h):"YZX"===i?(this.x=a*n*r+o*l*h,this.y=o*l*r+a*n*h,this.z=o*n*h-a*l*r,this.w=o*n*r-a*l*h):"XZY"===i&&(this.x=a*n*r-o*l*h,this.y=o*l*r-a*n*h,this.z=o*n*h+a*l*r,this.w=o*n*r+a*l*h),this}clone(){return new u(this.x,this.y,this.z,this.w)}slerp(t,e,s){void 0===s&&(s=new u);const i=this.x,o=this.y,n=this.z,r=this.w;let a,l,h,c,d,p=t.x,y=t.y,v=t.z,m=t.w;return l=i*p+o*y+n*v+r*m,l<0&&(l=-l,p=-p,y=-y,v=-v,m=-m),1-l>1e-6?(a=Math.acos(l),h=Math.sin(a),c=Math.sin((1-e)*a)/h,d=Math.sin(e*a)/h):(c=1-e,d=e),s.x=c*i+d*p,s.y=c*o+d*y,s.z=c*n+d*v,s.w=c*r+d*m,s}integrate(t,e,s,i){void 0===i&&(i=new u);const o=t.x*s.x,n=t.y*s.y,r=t.z*s.z,a=this.x,l=this.y,h=this.z,c=this.w,d=.5*e;return i.x+=d*(o*c+n*h-r*l),i.y+=d*(n*c+r*a-o*h),i.z+=d*(r*c+o*l-n*a),i.w+=d*(-o*a-n*l-r*h),i}}const d=new s,p=new s;class y{constructor(t){void 0===t&&(t={}),this.id=y.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=!t.collisionResponse||t.collisionResponse,this.collisionFilterGroup=void 0!==t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask=void 0!==t.collisionFilterMask?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,s,i){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}y.idCounter=0,y.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class v{constructor(t){void 0===t&&(t={}),this.position=new s,this.quaternion=new u,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return v.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return v.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return void 0===e&&(e=new s),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,i,o){return void 0===o&&(o=new s),i.vsub(t,o),e.conjugate(m),m.vmult(o,o),o}static pointToWorldFrame(t,e,i,o){return void 0===o&&(o=new s),e.vmult(i,o),o.vadd(t,o),o}static vectorToWorldFrame(t,e,i){return void 0===i&&(i=new s),t.vmult(e,i),i}static vectorToLocalFrame(t,e,i,o){return void 0===o&&(o=new s),e.w*=-1,e.vmult(i,o),e.w*=-1,o}}const m=new u;class w extends y{constructor(t){void 0===t&&(t={});const{vertices:e=[],faces:s=[],normals:i=[],axes:o,boundingSphereRadius:n}=t;super({type:y.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=s,this.faceNormals=i,0===this.faceNormals.length&&this.computeNormals(),n?this.boundingSphereRadius=n:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=o?o.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,i=this.uniqueEdges;i.length=0;const o=new s;for(let s=0;s!==t.length;s++){const n=t[s],r=n.length;for(let t=0;t!==r;t++){const s=(t+1)%r;e[n[t]].vsub(e[n[s]],o),o.normalize();let a=!1;for(let t=0;t!==i.length;t++)if(i[t].almostEquals(o)||i[t].almostEquals(o)){a=!0;break}a||i.push(o.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let e=0;e<this.faces[t].length;e++)if(!this.vertices[this.faces[t][e]])throw new Error(`Vertex ${this.faces[t][e]} not found!`);const e=this.faceNormals[t]||new s;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const i=this.vertices[this.faces[t][0]];if(e.dot(i)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let e=0;e<this.faces[t].length;e++)console.warn(`.vertices[${this.faces[t][e]}] = Vec3(${this.vertices[this.faces[t][e]].toString()})`)}}}getFaceNormal(t,e){const s=this.faces[t],i=this.vertices[s[0]],o=this.vertices[s[1]],n=this.vertices[s[2]];w.computeNormal(i,o,n,e)}static computeNormal(t,e,i,o){const n=new s,r=new s;e.vsub(t,r),i.vsub(e,n),n.cross(r,o),o.isZero()||o.normalize()}clipAgainstHull(t,e,i,o,n,r,a,l,h){const c=new s;let u=-1,d=-Number.MAX_VALUE;for(let t=0;t<i.faces.length;t++){c.copy(i.faceNormals[t]),n.vmult(c,c);const e=c.dot(r);e>d&&(d=e,u=t)}const p=[];for(let t=0;t<i.faces[u].length;t++){const e=i.vertices[i.faces[u][t]],r=new s;r.copy(e),n.vmult(r,r),o.vadd(r,r),p.push(r)}u>=0&&this.clipFaceAgainstHull(r,t,e,p,a,l,h)}findSeparatingAxis(t,e,i,o,n,r,a,l){const h=new s,c=new s,u=new s,d=new s,p=new s,y=new s;let v=Number.MAX_VALUE;const m=this;if(m.uniqueAxes)for(let s=0;s!==m.uniqueAxes.length;s++){i.vmult(m.uniqueAxes[s],h);const a=m.testSepAxis(h,t,e,i,o,n);if(!1===a)return!1;a<v&&(v=a,r.copy(h))}else{const s=a?a.length:m.faces.length;for(let l=0;l<s;l++){const s=a?a[l]:l;h.copy(m.faceNormals[s]),i.vmult(h,h);const c=m.testSepAxis(h,t,e,i,o,n);if(!1===c)return!1;c<v&&(v=c,r.copy(h))}}if(t.uniqueAxes)for(let s=0;s!==t.uniqueAxes.length;s++){n.vmult(t.uniqueAxes[s],c);const a=m.testSepAxis(c,t,e,i,o,n);if(!1===a)return!1;a<v&&(v=a,r.copy(c))}else{const s=l?l.length:t.faces.length;for(let a=0;a<s;a++){const s=l?l[a]:a;c.copy(t.faceNormals[s]),n.vmult(c,c);const h=m.testSepAxis(c,t,e,i,o,n);if(!1===h)return!1;h<v&&(v=h,r.copy(c))}}for(let s=0;s!==m.uniqueEdges.length;s++){i.vmult(m.uniqueEdges[s],d);for(let s=0;s!==t.uniqueEdges.length;s++)if(n.vmult(t.uniqueEdges[s],p),d.cross(p,y),!y.almostZero()){y.normalize();const s=m.testSepAxis(y,t,e,i,o,n);if(!1===s)return!1;s<v&&(v=s,r.copy(y))}}return o.vsub(e,u),u.dot(r)>0&&r.negate(r),!0}testSepAxis(t,e,s,i,o,n){w.project(this,t,s,i,f),w.project(e,t,o,n,g);const r=f[0],a=f[1],l=g[0],h=g[1];if(r<h||l<a)return!1;const c=r-h,u=l-a;return c<u?c:u}calculateLocalInertia(t,e){const i=new s,o=new s;this.computeLocalAABB(o,i);const n=i.x-o.x,r=i.y-o.y,a=i.z-o.z;e.x=1/12*t*(2*r*2*r+2*a*2*a),e.y=1/12*t*(2*n*2*n+2*a*2*a),e.z=1/12*t*(2*r*2*r+2*n*2*n)}getPlaneConstantOfFace(t){const e=this.faces[t],s=this.faceNormals[t],i=this.vertices[e[0]];return-s.dot(i)}clipFaceAgainstHull(t,e,i,o,n,r,a){const l=new s,h=new s,c=new s,u=new s,d=new s,p=new s,y=new s,v=new s,m=this,w=o,f=[];let g=-1,b=Number.MAX_VALUE;for(let e=0;e<m.faces.length;e++){l.copy(m.faceNormals[e]),i.vmult(l,l);const s=l.dot(t);s<b&&(b=s,g=e)}if(g<0)return;const x=m.faces[g];x.connectedFaces=[];for(let t=0;t<m.faces.length;t++)for(let e=0;e<m.faces[t].length;e++)-1!==x.indexOf(m.faces[t][e])&&t!==g&&-1===x.connectedFaces.indexOf(t)&&x.connectedFaces.push(t);const E=x.length;for(let t=0;t<E;t++){const s=m.vertices[x[t]],o=m.vertices[x[(t+1)%E]];s.vsub(o,h),c.copy(h),i.vmult(c,c),e.vadd(c,c),u.copy(this.faceNormals[g]),i.vmult(u,u),e.vadd(u,u),c.cross(u,d),d.negate(d),p.copy(s),i.vmult(p,p),e.vadd(p,p);const n=x.connectedFaces[t];y.copy(this.faceNormals[n]);const r=this.getPlaneConstantOfFace(n);v.copy(y),i.vmult(v,v);const a=r-v.dot(e);for(this.clipFaceAgainstPlane(w,f,v,a);w.length;)w.shift();for(;f.length;)w.push(f.shift())}y.copy(this.faceNormals[g]);const z=this.getPlaneConstantOfFace(g);v.copy(y),i.vmult(v,v);const A=z-v.dot(e);for(let t=0;t<w.length;t++){let e=v.dot(w[t])+A;if(e<=n&&(console.log(`clamped: depth=${e} to minDist=${n}`),e=n),e<=r){const s=w[t];if(e<=1e-6){const t={point:s,normal:v,depth:e};a.push(t)}}}}clipFaceAgainstPlane(t,e,i,o){let n,r;const a=t.length;if(a<2)return e;let l=t[t.length-1],h=t[0];n=i.dot(l)+o;for(let c=0;c<a;c++){if(h=t[c],r=i.dot(h)+o,n<0)if(r<0){const t=new s;t.copy(h),e.push(t)}else{const t=new s;l.lerp(h,n/(n-r),t),e.push(t)}else if(r<0){const t=new s;l.lerp(h,n/(n-r),t),e.push(t),e.push(h)}l=h,n=r}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new s);const i=this.vertices,o=this.worldVertices;for(let s=0;s!==this.vertices.length;s++)e.vmult(i[s],o[s]),t.vadd(o[s],o[s]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const s=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){const o=s[i];o.x<t.x?t.x=o.x:o.x>e.x&&(e.x=o.x),o.y<t.y?t.y=o.y:o.y>e.y&&(e.y=o.y),o.z<t.z?t.z=o.z:o.z>e.z&&(e.z=o.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new s);const i=this.faceNormals,o=this.worldFaceNormals;for(let s=0;s!==e;s++)t.vmult(i[s],o[s]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let s=0;s!==e.length;s++){const i=e[s].lengthSquared();i>t&&(t=i)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,i,o){const n=this.vertices;let r,a,l,h,c,u,d=new s;for(let s=0;s<n.length;s++){d.copy(n[s]),e.vmult(d,d),t.vadd(d,d);const i=d;(void 0===r||i.x<r)&&(r=i.x),(void 0===h||i.x>h)&&(h=i.x),(void 0===a||i.y<a)&&(a=i.y),(void 0===c||i.y>c)&&(c=i.y),(void 0===l||i.z<l)&&(l=i.z),(void 0===u||i.z>u)&&(u=i.z)}i.set(r,a,l),o.set(h,c,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){void 0===t&&(t=new s);const e=this.vertices;for(let s=0;s<e.length;s++)t.vadd(e[s],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const s=this.vertices.length,i=this.vertices;if(e){for(let t=0;t<s;t++){const s=i[t];e.vmult(s,s)}for(let t=0;t<this.faceNormals.length;t++){const s=this.faceNormals[t];e.vmult(s,s)}}if(t)for(let e=0;e<s;e++){const s=i[e];s.vadd(t,s)}}pointIsInside(t){const e=this.vertices,i=this.faces,o=this.faceNormals,n=new s;this.getAveragePointLocal(n);for(let r=0;r<this.faces.length;r++){let a=o[r];const l=e[i[r][0]],h=new s;t.vsub(l,h);const c=a.dot(h),u=new s;n.vsub(l,u);const d=a.dot(u);if(c<0&&d>0||c>0&&d<0)return!1}return-1}static project(t,e,s,i,o){const n=t.vertices.length,r=b;let a=0,l=0;const h=x,c=t.vertices;h.setZero(),v.vectorToLocalFrame(s,i,e,r),v.pointToLocalFrame(s,i,h,h);const u=h.dot(r);l=a=c[0].dot(r);for(let t=1;t<n;t++){const e=c[t].dot(r);e>a&&(a=e),e<l&&(l=e)}if(l-=u,a-=u,l>a){const t=l;l=a,a=t}o[0]=a,o[1]=l}}const f=[],g=[];new s;const b=new s,x=new s;class E extends y{constructor(t){super({type:y.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,i=this.halfExtents.z,o=s,n=[new o(-t,-e,-i),new o(t,-e,-i),new o(t,e,-i),new o(-t,e,-i),new o(-t,-e,i),new o(t,-e,i),new o(t,e,i),new o(-t,e,i)],r=[new o(0,0,1),new o(0,1,0),new o(1,0,0)],a=new w({vertices:n,faces:[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],axes:r});this.convexPolyhedronRepresentation=a,a.material=this.material}calculateLocalInertia(t,e){return void 0===e&&(e=new s),E.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,s){const i=t;s.x=1/12*e*(2*i.y*2*i.y+2*i.z*2*i.z),s.y=1/12*e*(2*i.x*2*i.x+2*i.z*2*i.z),s.z=1/12*e*(2*i.y*2*i.y+2*i.x*2*i.x)}getSideNormals(t,e){const s=t,i=this.halfExtents;if(s[0].set(i.x,0,0),s[1].set(0,i.y,0),s[2].set(0,0,i.z),s[3].set(-i.x,0,0),s[4].set(0,-i.y,0),s[5].set(0,0,-i.z),void 0!==e)for(let t=0;t!==s.length;t++)e.vmult(s[t],s[t]);return s}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,s){const i=this.halfExtents,o=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let i=0;i<o.length;i++)z.set(o[i][0],o[i][1],o[i][2]),e.vmult(z,z),t.vadd(z,z),s(z.x,z.y,z.z)}calculateWorldAABB(t,e,s,i){const o=this.halfExtents;A[0].set(o.x,o.y,o.z),A[1].set(-o.x,o.y,o.z),A[2].set(-o.x,-o.y,o.z),A[3].set(-o.x,-o.y,-o.z),A[4].set(o.x,-o.y,-o.z),A[5].set(o.x,o.y,-o.z),A[6].set(-o.x,o.y,-o.z),A[7].set(o.x,-o.y,o.z);const n=A[0];e.vmult(n,n),t.vadd(n,n),i.copy(n),s.copy(n);for(let o=1;o<8;o++){const n=A[o];e.vmult(n,n),t.vadd(n,n);const r=n.x,a=n.y,l=n.z;r>i.x&&(i.x=r),a>i.y&&(i.y=a),l>i.z&&(i.z=l),r<s.x&&(s.x=r),a<s.y&&(s.y=a),l<s.z&&(s.z=l)}}}const z=new s,A=[new s,new s,new s,new s,new s,new s,new s,new s],B=1,S=2,M=4,F=0,C=1,q=2;class N extends c{constructor(e){void 0===e&&(e={}),super(),this.id=N.idCounter++,this.index=-1,this.world=null,this.vlambda=new s,this.collisionFilterGroup="number"==typeof e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionResponse="boolean"!=typeof e.collisionResponse||e.collisionResponse,this.position=new s,this.previousPosition=new s,this.interpolatedPosition=new s,this.initPosition=new s,e.position&&(this.position.copy(e.position),this.previousPosition.copy(e.position),this.interpolatedPosition.copy(e.position),this.initPosition.copy(e.position)),this.velocity=new s,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new s,this.force=new s;const i="number"==typeof e.mass?e.mass:0;this.mass=i,this.invMass=i>0?1/i:0,this.material=e.material||null,this.linearDamping="number"==typeof e.linearDamping?e.linearDamping:.01,this.type=i<=0?N.STATIC:N.DYNAMIC,typeof e.type==typeof N.STATIC&&(this.type=e.type),this.allowSleep=void 0===e.allowSleep||e.allowSleep,this.sleepState=N.AWAKE,this.sleepSpeedLimit=void 0!==e.sleepSpeedLimit?e.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==e.sleepTimeLimit?e.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new s,this.quaternion=new u,this.initQuaternion=new u,this.previousQuaternion=new u,this.interpolatedQuaternion=new u,e.quaternion&&(this.quaternion.copy(e.quaternion),this.initQuaternion.copy(e.quaternion),this.previousQuaternion.copy(e.quaternion),this.interpolatedQuaternion.copy(e.quaternion)),this.angularVelocity=new s,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new s,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new s,this.invInertia=new s,this.invInertiaWorld=new t,this.invMassSolve=0,this.invInertiaSolve=new s,this.invInertiaWorldSolve=new t,this.fixedRotation=void 0!==e.fixedRotation&&e.fixedRotation,this.angularDamping=void 0!==e.angularDamping?e.angularDamping:.01,this.linearFactor=new s(1,1,1),e.linearFactor&&this.linearFactor.copy(e.linearFactor),this.angularFactor=new s(1,1,1),e.angularFactor&&this.angularFactor.copy(e.angularFactor),this.aabb=new r,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new s,this.isTrigger=Boolean(e.isTrigger),e.shape&&this.addShape(e.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=N.AWAKE,this.wakeUpAfterNarrowphase=!1,t===N.SLEEPING&&this.dispatchEvent(N.wakeupEvent)}sleep(){this.sleepState=N.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,s=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;e===N.AWAKE&&s<i?(this.sleepState=N.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(N.sleepyEvent)):e===N.SLEEPY&&s>i?this.wakeUp():e===N.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(N.sleepEvent))}}updateSolveMassProperties(){this.sleepState===N.SLEEPING||this.type===N.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return void 0===e&&(e=new s),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return void 0===e&&(e=new s),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return void 0===e&&(e=new s),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return void 0===e&&(e=new s),this.quaternion.vmult(t,e),e}addShape(t,e,i){const o=new s,n=new u;return e&&o.copy(e),i&&n.copy(i),this.shapes.push(t),this.shapeOffsets.push(o),this.shapeOrientations.push(n),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return-1===e?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,s=t.length;let i=0;for(let o=0;o!==s;o++){const s=t[o];s.updateBoundingSphereRadius();const n=e[o].length(),r=s.boundingSphereRadius;n+r>i&&(i=n+r)}this.boundingRadius=i}updateAABB(){const t=this.shapes,e=this.shapeOffsets,s=this.shapeOrientations,i=t.length,o=R,n=P,r=this.quaternion,a=this.aabb,l=I;for(let h=0;h!==i;h++){const i=t[h];r.vmult(e[h],o),o.vadd(this.position,o),r.mult(s[h],n),i.calculateWorldAABB(o,n,l.lowerBound,l.upperBound),0===h?a.copy(l):a.extend(l)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(e.x!==e.y||e.y!==e.z||t){const t=T,s=j;t.setRotationFromQuaternion(this.quaternion),t.transpose(s),t.scale(e,t),t.mmult(s,this.invInertiaWorld)}else;}applyForce(t,e){if(void 0===e&&(e=new s),this.type!==N.DYNAMIC)return;this.sleepState===N.SLEEPING&&this.wakeUp();const i=L;e.cross(t,i),this.force.vadd(t,this.force),this.torque.vadd(i,this.torque)}applyLocalForce(t,e){if(void 0===e&&(e=new s),this.type!==N.DYNAMIC)return;const i=k,o=V;this.vectorToWorldFrame(t,i),this.vectorToWorldFrame(e,o),this.applyForce(i,o)}applyTorque(t){this.type===N.DYNAMIC&&(this.sleepState===N.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(void 0===e&&(e=new s),this.type!==N.DYNAMIC)return;this.sleepState===N.SLEEPING&&this.wakeUp();const i=e,o=O;o.copy(t),o.scale(this.invMass,o),this.velocity.vadd(o,this.velocity);const n=W;i.cross(t,n),this.invInertiaWorld.vmult(n,n),this.angularVelocity.vadd(n,this.angularVelocity)}applyLocalImpulse(t,e){if(void 0===e&&(e=new s),this.type!==N.DYNAMIC)return;const i=D,o=H;this.vectorToWorldFrame(t,i),this.vectorToWorldFrame(e,o),this.applyImpulse(i,o)}updateMassProperties(){const t=U;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,s=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),E.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!s?1/e.x:0,e.y>0&&!s?1/e.y:0,e.z>0&&!s?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const i=new s;return t.vsub(this.position,i),this.angularVelocity.cross(i,e),this.velocity.vadd(e,e),e}integrate(t,e,s){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),this.type!==N.DYNAMIC&&this.type!==N.KINEMATIC||this.sleepState===N.SLEEPING)return;const i=this.velocity,o=this.angularVelocity,n=this.position,r=this.force,a=this.torque,l=this.quaternion,h=this.invMass,c=this.invInertiaWorld,u=this.linearFactor,d=h*t;i.x+=r.x*d*u.x,i.y+=r.y*d*u.y,i.z+=r.z*d*u.z;const p=c.elements,y=this.angularFactor,v=a.x*y.x,m=a.y*y.y,w=a.z*y.z;o.x+=t*(p[0]*v+p[1]*m+p[2]*w),o.y+=t*(p[3]*v+p[4]*m+p[5]*w),o.z+=t*(p[6]*v+p[7]*m+p[8]*w),n.x+=i.x*t,n.y+=i.y*t,n.z+=i.z*t,l.integrate(this.angularVelocity,t,this.angularFactor,l),e&&(s?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}N.idCounter=0,N.COLLIDE_EVENT_NAME="collide",N.DYNAMIC=B,N.STATIC=S,N.KINEMATIC=M,N.AWAKE=F,N.SLEEPY=C,N.SLEEPING=q,N.wakeupEvent={type:"wakeup"},N.sleepyEvent={type:"sleepy"},N.sleepEvent={type:"sleep"};const R=new s,P=new u,I=new r,T=new t,j=new t;new t;const L=new s,k=new s,V=new s,O=new s,W=new s,D=new s,H=new s,U=new s;const G=new s;new s,new u,new s;const _={keys:[]},Y=[],X=[];new s,new s,new s;class $ extends class{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,s){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return 0!=(t.collisionFilterGroup&e.collisionFilterMask)&&0!=(e.collisionFilterGroup&t.collisionFilterMask)&&(0==(t.type&N.STATIC)&&t.sleepState!==N.SLEEPING||0==(e.type&N.STATIC)&&e.sleepState!==N.SLEEPING)}intersectionTest(t,e,s,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,s,i):this.doBoundingSphereBroadphase(t,e,s,i)}doBoundingSphereBroadphase(t,e,s,i){const o=G;e.position.vsub(t.position,o);const n=(t.boundingRadius+e.boundingRadius)**2;o.lengthSquared()<n&&(s.push(t),i.push(e))}doBoundingBoxBroadphase(t,e,s,i){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(s.push(t),i.push(e))}makePairsUnique(t,e){const s=_,i=Y,o=X,n=t.length;for(let s=0;s!==n;s++)i[s]=t[s],o[s]=e[s];t.length=0,e.length=0;for(let t=0;t!==n;t++){const e=i[t].id,n=o[t].id,r=e<n?`${e},${n}`:`${n},${e}`;s[r]=t,s.keys.push(r)}for(let n=0;n!==s.keys.length;n++){const n=s.keys.pop(),r=s[n];t.push(i[r]),e.push(o[r]),delete s[n]}}setWorld(t){}static boundingSphereCheck(t,e){const i=new s;t.position.vsub(e.position,i);const o=t.shapes[0],n=e.shapes[0];return Math.pow(o.boundingSphereRadius+n.boundingSphereRadius,2)>i.lengthSquared()}aabbQuery(t,e,s){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}{constructor(){super()}collisionPairs(t,e,s){const i=t.bodies,o=i.length;let n,r;for(let t=0;t!==o;t++)for(let o=0;o!==t;o++)n=i[t],r=i[o],this.needBroadphaseCollision(n,r)&&this.intersectionTest(n,r,e,s)}aabbQuery(t,e,s){void 0===s&&(s=[]);for(let i=0;i<t.bodies.length;i++){const o=t.bodies[i];o.aabbNeedsUpdate&&o.updateAABB(),o.aabb.overlaps(e)&&s.push(o)}return s}}class Q{constructor(){this.rayFromWorld=new s,this.rayToWorld=new s,this.hitNormalWorld=new s,this.hitPointWorld=new s,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,s,i,o,n,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(s),this.hitPointWorld.copy(i),this.shape=o,this.body=n,this.distance=r}}let Z,K,J,tt,et,st,it;const ot=1,nt=2,rt=4;Z=y.types.SPHERE,K=y.types.PLANE,J=y.types.BOX,tt=y.types.CYLINDER,et=y.types.CONVEXPOLYHEDRON,st=y.types.HEIGHTFIELD,it=y.types.TRIMESH;class at{get[Z](){return this._intersectSphere}get[K](){return this._intersectPlane}get[J](){return this._intersectBox}get[tt](){return this._intersectConvex}get[et](){return this._intersectConvex}get[st](){return this._intersectHeightfield}get[it](){return this._intersectTrimesh}constructor(t,e){void 0===t&&(t=new s),void 0===e&&(e=new s),this.from=t.clone(),this.to=e.clone(),this.direction=new s,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=at.ANY,this.result=new Q,this.hasHit=!1,this.callback=t=>{}}intersectWorld(t,e){return this.mode=e.mode||at.ANY,this.result=e.result||new Q,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:-1,this.checkCollisionResponse=void 0===e.checkCollisionResponse||e.checkCollisionResponse,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(lt),ht.length=0,t.broadphase.aabbQuery(t,lt,ht),this.intersectBodies(ht),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const s=this.checkCollisionResponse;if(s&&!t.collisionResponse)return;if(0==(this.collisionFilterGroup&t.collisionFilterMask)||0==(t.collisionFilterGroup&this.collisionFilterMask))return;const i=dt,o=pt;for(let e=0,n=t.shapes.length;e<n;e++){const n=t.shapes[e];if((!s||n.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[e],o),t.quaternion.vmult(t.shapeOffsets[e],i),i.vadd(t.position,i),this.intersectShape(n,o,i,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let e=0,s=t.length;!this.result.shouldStop&&e<s;e++)this.intersectBody(t[e])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,s,i){if(function(t,e,s){s.vsub(t,It);const i=It.dot(e);e.scale(i,Tt),Tt.vadd(t,Tt);return s.distanceTo(Tt)}(this.from,this.direction,s)>t.boundingSphereRadius)return;const o=this[t.type];o&&o.call(this,t,e,s,i,t)}_intersectBox(t,e,s,i,o){return this._intersectConvex(t.convexPolyhedronRepresentation,e,s,i,o)}_intersectPlane(t,e,i,o,n){const r=this.from,a=this.to,l=this.direction,h=new s(0,0,1);e.vmult(h,h);const c=new s;r.vsub(i,c);const u=c.dot(h);a.vsub(i,c);if(u*c.dot(h)>0)return;if(r.distanceTo(a)<u)return;const d=h.dot(l);if(Math.abs(d)<this.precision)return;const p=new s,y=new s,v=new s;r.vsub(i,p);const m=-h.dot(p)/d;l.scale(m,y),r.vadd(y,v),this.reportIntersection(h,v,n,o,-1)}getAABB(t){const{lowerBound:e,upperBound:s}=t,i=this.to,o=this.from;e.x=Math.min(i.x,o.x),e.y=Math.min(i.y,o.y),e.z=Math.min(i.z,o.z),s.x=Math.max(i.x,o.x),s.y=Math.max(i.y,o.y),s.z=Math.max(i.z,o.z)}_intersectHeightfield(t,e,s,i,o){t.data,t.elementSize;const n=bt;n.from.copy(this.from),n.to.copy(this.to),v.pointToLocalFrame(s,e,n.from,n.from),v.pointToLocalFrame(s,e,n.to,n.to),n.updateDirection();const a=xt;let l,h,c,u;l=h=0,c=u=t.data.length-1;const d=new r;n.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,a,!0),l=Math.max(l,a[0]),h=Math.max(h,a[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,a,!0),c=Math.min(c,a[0]+1),u=Math.min(u,a[1]+1);for(let r=l;r<c;r++)for(let a=h;a<u;a++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(r,a,d),d.overlapsRay(n)){if(t.getConvexTrianglePillar(r,a,!1),v.pointToWorldFrame(s,e,t.pillarOffset,gt),this._intersectConvex(t.pillarConvex,e,gt,i,o,ft),this.result.shouldStop)return;t.getConvexTrianglePillar(r,a,!0),v.pointToWorldFrame(s,e,t.pillarOffset,gt),this._intersectConvex(t.pillarConvex,e,gt,i,o,ft)}}}_intersectSphere(t,e,s,i,o){const n=this.from,r=this.to,a=t.radius,l=(r.x-n.x)**2+(r.y-n.y)**2+(r.z-n.z)**2,h=2*((r.x-n.x)*(n.x-s.x)+(r.y-n.y)*(n.y-s.y)+(r.z-n.z)*(n.z-s.z)),c=h**2-4*l*((n.x-s.x)**2+(n.y-s.y)**2+(n.z-s.z)**2-a**2),u=Et,d=zt;if(!(c<0))if(0===c)n.lerp(r,c,u),u.vsub(s,d),d.normalize(),this.reportIntersection(d,u,o,i,-1);else{const t=(-h-Math.sqrt(c))/(2*l),e=(-h+Math.sqrt(c))/(2*l);if(t>=0&&t<=1&&(n.lerp(r,t,u),u.vsub(s,d),d.normalize(),this.reportIntersection(d,u,o,i,-1)),this.result.shouldStop)return;e>=0&&e<=1&&(n.lerp(r,e,u),u.vsub(s,d),d.normalize(),this.reportIntersection(d,u,o,i,-1))}}_intersectConvex(t,e,s,i,o,n){const r=At,a=Bt,l=n&&n.faceList||null,h=t.faces,c=t.vertices,u=t.faceNormals,d=this.direction,p=this.from,y=this.to,v=p.distanceTo(y),m=l?l.length:h.length,w=this.result;for(let t=0;!w.shouldStop&&t<m;t++){const n=l?l[t]:t,y=h[n],m=u[n],f=e,g=s;a.copy(c[y[0]]),f.vmult(a,a),a.vadd(g,a),a.vsub(p,a),f.vmult(m,r);const b=d.dot(r);if(Math.abs(b)<this.precision)continue;const x=r.dot(a)/b;if(!(x<0)){d.scale(x,yt),yt.vadd(p,yt),vt.copy(c[y[0]]),f.vmult(vt,vt),g.vadd(vt,vt);for(let t=1;!w.shouldStop&&t<y.length-1;t++){mt.copy(c[y[t]]),wt.copy(c[y[t+1]]),f.vmult(mt,mt),f.vmult(wt,wt),g.vadd(mt,mt),g.vadd(wt,wt);const e=yt.distanceTo(p);!at.pointInTriangle(yt,vt,mt,wt)&&!at.pointInTriangle(yt,mt,vt,wt)||e>v||this.reportIntersection(r,yt,o,i,n)}}}}_intersectTrimesh(t,e,s,i,o,n){const r=St,a=Rt,l=Pt,h=Bt,c=Mt,u=Ft,d=Ct,p=Nt,y=qt,m=t.indices;t.vertices;const w=this.from,f=this.to,g=this.direction;l.position.copy(s),l.quaternion.copy(e),v.vectorToLocalFrame(s,e,g,c),v.pointToLocalFrame(s,e,w,u),v.pointToLocalFrame(s,e,f,d),d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,u.x*=t.scale.x,u.y*=t.scale.y,u.z*=t.scale.z,d.vsub(u,c),c.normalize();const b=u.distanceSquared(d);t.tree.rayQuery(this,l,a);for(let n=0,l=a.length;!this.result.shouldStop&&n!==l;n++){const l=a[n];t.getNormal(l,r),t.getVertex(m[3*l],vt),vt.vsub(u,h);const d=c.dot(r),w=r.dot(h)/d;if(w<0)continue;c.scale(w,yt),yt.vadd(u,yt),t.getVertex(m[3*l+1],mt),t.getVertex(m[3*l+2],wt);const f=yt.distanceSquared(u);!at.pointInTriangle(yt,mt,vt,wt)&&!at.pointInTriangle(yt,vt,mt,wt)||f>b||(v.vectorToWorldFrame(e,r,y),v.pointToWorldFrame(s,e,yt,p),this.reportIntersection(y,p,o,i,l))}a.length=0}reportIntersection(t,e,s,i,o){const n=this.from,r=this.to,a=n.distanceTo(e),l=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(l.hitFaceIndex=void 0!==o?o:-1,this.mode){case at.ALL:this.hasHit=!0,l.set(n,r,t,e,s,i,a),l.hasHit=!0,this.callback(l);break;case at.CLOSEST:(a<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(n,r,t,e,s,i,a));break;case at.ANY:this.hasHit=!0,l.hasHit=!0,l.set(n,r,t,e,s,i,a),l.shouldStop=!0}}static pointInTriangle(t,e,s,i){i.vsub(e,It),s.vsub(e,ct),t.vsub(e,ut);const o=It.dot(It),n=It.dot(ct),r=It.dot(ut),a=ct.dot(ct),l=ct.dot(ut);let h,c;return(h=a*r-n*l)>=0&&(c=o*l-n*r)>=0&&h+c<o*a-n*n}}at.CLOSEST=ot,at.ANY=nt,at.ALL=rt;const lt=new r,ht=[],ct=new s,ut=new s,dt=new s,pt=new u,yt=new s,vt=new s,mt=new s,wt=new s;new s,new Q;const ft={faceList:[0]},gt=new s,bt=new at,xt=[],Et=new s,zt=new s,At=new s;new s,new s;const Bt=new s,St=new s,Mt=new s,Ft=new s,Ct=new s,qt=new s,Nt=new s;new r;const Rt=[],Pt=new v,It=new s,Tt=new s;class jt{static defaults(t,e){void 0===t&&(t={});for(let s in e)s in t||(t[s]=e[s]);return t}}class Lt{constructor(t,e,s){void 0===s&&(s={}),s=jt.defaults(s,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Lt.idCounter++,this.collideConnected=s.collideConnected,s.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Lt.idCounter=0;class kt{constructor(){this.spatial=new s,this.rotational=new s}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Vt{constructor(t,e,s,i){void 0===s&&(s=-1e6),void 0===i&&(i=1e6),this.id=Vt.idCounter++,this.minForce=s,this.maxForce=i,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new kt,this.jacobianElementB=new kt,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,s){const i=e,o=t,n=s;this.a=4/(n*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(n*n*o*(1+4*i))}computeB(t,e,s){const i=this.computeGW();return-this.computeGq()*t-i*e-this.computeGiMf()*s}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,i=this.bj,o=s.position,n=i.position;return t.spatial.dot(o)+e.spatial.dot(n)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,i=this.bj,o=s.velocity,n=i.velocity,r=s.angularVelocity,a=i.angularVelocity;return t.multiplyVectors(o,r)+e.multiplyVectors(n,a)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,i=this.bj,o=s.vlambda,n=i.vlambda,r=s.wlambda,a=i.wlambda;return t.multiplyVectors(o,r)+e.multiplyVectors(n,a)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,i=this.bj,o=s.force,n=s.torque,r=i.force,a=i.torque,l=s.invMassSolve,h=i.invMassSolve;return o.scale(l,Ot),r.scale(h,Wt),s.invInertiaWorldSolve.vmult(n,Dt),i.invInertiaWorldSolve.vmult(a,Ht),t.multiplyVectors(Ot,Dt)+e.multiplyVectors(Wt,Ht)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,i=this.bj,o=s.invMassSolve,n=i.invMassSolve,r=s.invInertiaWorldSolve,a=i.invInertiaWorldSolve;let l=o+n;return r.vmult(t.rotational,Ut),l+=Ut.dot(t.rotational),a.vmult(e.rotational,Ut),l+=Ut.dot(e.rotational),l}addToWlambda(t){const e=this.jacobianElementA,s=this.jacobianElementB,i=this.bi,o=this.bj,n=Gt;i.vlambda.addScaledVector(i.invMassSolve*t,e.spatial,i.vlambda),o.vlambda.addScaledVector(o.invMassSolve*t,s.spatial,o.vlambda),i.invInertiaWorldSolve.vmult(e.rotational,n),i.wlambda.addScaledVector(t,n,i.wlambda),o.invInertiaWorldSolve.vmult(s.rotational,n),o.wlambda.addScaledVector(t,n,o.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Vt.idCounter=0;const Ot=new s,Wt=new s,Dt=new s,Ht=new s,Ut=new s,Gt=new s;class _t extends Vt{constructor(t,e,i){void 0===i&&(i=1e6),super(t,e,0,i),this.restitution=0,this.ri=new s,this.rj=new s,this.ni=new s}computeB(t){const e=this.a,s=this.b,i=this.bi,o=this.bj,n=this.ri,r=this.rj,a=Yt,l=Xt,h=i.velocity,c=i.angularVelocity;i.force,i.torque;const u=o.velocity,d=o.angularVelocity;o.force,o.torque;const p=$t,y=this.jacobianElementA,v=this.jacobianElementB,m=this.ni;n.cross(m,a),r.cross(m,l),m.negate(y.spatial),a.negate(y.rotational),v.spatial.copy(m),v.rotational.copy(l),p.copy(o.position),p.vadd(r,p),p.vsub(i.position,p),p.vsub(n,p);const w=m.dot(p),f=this.restitution+1;return-w*e-(f*u.dot(m)-f*h.dot(m)+d.dot(l)-c.dot(a))*s-t*this.computeGiMf()}getImpactVelocityAlongNormal(){const t=Qt,e=Zt,s=Kt,i=Jt,o=te;return this.bi.position.vadd(this.ri,s),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(s,t),this.bj.getVelocityAtWorldPoint(i,e),t.vsub(e,o),this.ni.dot(o)}}const Yt=new s,Xt=new s,$t=new s,Qt=new s,Zt=new s,Kt=new s,Jt=new s,te=new s;class ee extends Lt{constructor(t,e,i,o,n){void 0===e&&(e=new s),void 0===o&&(o=new s),void 0===n&&(n=1e6),super(t,i),this.pivotA=e.clone(),this.pivotB=o.clone();const r=this.equationX=new _t(t,i),a=this.equationY=new _t(t,i),l=this.equationZ=new _t(t,i);this.equations.push(r,a,l),r.minForce=a.minForce=l.minForce=-n,r.maxForce=a.maxForce=l.maxForce=n,r.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,s=this.equationX,i=this.equationY,o=this.equationZ;t.quaternion.vmult(this.pivotA,s.ri),e.quaternion.vmult(this.pivotB,s.rj),i.ri.copy(s.ri),i.rj.copy(s.rj),o.ri.copy(s.ri),o.rj.copy(s.rj)}}new s,new s,new s,new s,new s,new s;class se extends Lt{constructor(t,e,s,i){void 0===i&&(i=1e6),super(t,e),void 0===s&&(s=t.position.distanceTo(e.position)),this.distance=s;const o=this.distanceEquation=new _t(t,e);this.equations.push(o),o.minForce=-i,o.maxForce=i}update(){const t=this.bodyA,e=this.bodyB,s=this.distanceEquation,i=.5*this.distance,o=s.ni;e.position.vsub(t.position,o),o.normalize(),o.scale(i,s.ri),o.scale(-i,s.rj)}}new s,new s,new s,new s;class ie extends Vt{constructor(t,e,i){super(t,e,-i,i),this.ri=new s,this.rj=new s,this.t=new s}computeB(t){this.a;const e=this.b;this.bi,this.bj;const s=this.ri,i=this.rj,o=oe,n=ne,r=this.t;s.cross(r,o),i.cross(r,n);const a=this.jacobianElementA,l=this.jacobianElementB;r.negate(a.spatial),o.negate(a.rotational),l.spatial.copy(r),l.rotational.copy(n);return-this.computeGW()*e-t*this.computeGiMf()}}const oe=new s,ne=new s;class re{constructor(t,e,s){s=jt.defaults(s,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=re.idCounter++,this.materials=[t,e],this.friction=s.friction,this.restitution=s.restitution,this.contactEquationStiffness=s.contactEquationStiffness,this.contactEquationRelaxation=s.contactEquationRelaxation,this.frictionEquationStiffness=s.frictionEquationStiffness,this.frictionEquationRelaxation=s.frictionEquationRelaxation}}re.idCounter=0;class ae{constructor(t){void 0===t&&(t={});let e="";"string"==typeof t&&(e=t,t={}),this.name=e,this.id=ae.idCounter++,this.friction=void 0!==t.friction?t.friction:-1,this.restitution=void 0!==t.restitution?t.restitution:-1}}ae.idCounter=0,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new at,new s,new s,new s,new s(1,0,0),new s(0,1,0),new s(0,0,1),new s,new s,new s,new s,new s,new s,new s,new s,new s,new s,new s;class le extends y{constructor(t){if(super({type:y.types.SPHERE}),this.radius=void 0!==t?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){void 0===e&&(e=new s);const i=2*t*this.radius*this.radius/5;return e.x=i,e.y=i,e.z=i,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,s,i){const o=this.radius,n=["x","y","z"];for(let e=0;e<n.length;e++){const r=n[e];s[r]=t[r]-o,i[r]=t[r]+o}}}new s,new s,new s,new s,new s,new s,new s,new s,new s;class he extends w{constructor(t,e,i,o){if(void 0===t&&(t=1),void 0===e&&(e=1),void 0===i&&(i=1),void 0===o&&(o=8),t<0)throw new Error("The cylinder radiusTop cannot be negative.");if(e<0)throw new Error("The cylinder radiusBottom cannot be negative.");const n=o,r=[],a=[],l=[],h=[],c=[],u=Math.cos,d=Math.sin;r.push(new s(-e*d(0),.5*-i,e*u(0))),h.push(0),r.push(new s(-t*d(0),.5*i,t*u(0))),c.push(1);for(let o=0;o<n;o++){const p=2*Math.PI/n*(o+1),y=2*Math.PI/n*(o+.5);o<n-1?(r.push(new s(-e*d(p),.5*-i,e*u(p))),h.push(2*o+2),r.push(new s(-t*d(p),.5*i,t*u(p))),c.push(2*o+3),l.push([2*o,2*o+1,2*o+3,2*o+2])):l.push([2*o,2*o+1,1,0]),(n%2==1||o<n/2)&&a.push(new s(-d(y),0,u(y)))}l.push(h),a.push(new s(0,1,0));const p=[];for(let t=0;t<c.length;t++)p.push(c[c.length-t-1]);l.push(p),super({vertices:r,faces:l,axes:a}),this.type=y.types.CYLINDER,this.radiusTop=t,this.radiusBottom=e,this.height=i,this.numSegments=o}}class ce extends y{constructor(){super({type:y.types.PARTICLE})}calculateLocalInertia(t,e){return void 0===e&&(e=new s),e.set(0,0,0),e}volume(){return 0}updateBoundingSphereRadius(){this.boundingSphereRadius=0}calculateWorldAABB(t,e,s,i){s.copy(t),i.copy(t)}}class ue extends y{constructor(){super({type:y.types.PLANE}),this.worldNormal=new s,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return void 0===e&&(e=new s),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,s,i){de.set(0,0,1),e.vmult(de,de);const o=Number.MAX_VALUE;s.set(-o,-o,-o),i.set(o,o,o),1===de.x?i.x=t.x:-1===de.x&&(s.x=t.x),1===de.y?i.y=t.y:-1===de.y&&(s.y=t.y),1===de.z?i.z=t.z:-1===de.z&&(s.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const de=new s;new s,new s,new s,new s,new s,new s,new s,new s,new s;class pe{constructor(t){void 0===t&&(t={}),this.root=t.root||null,this.aabb=t.aabb?t.aabb.clone():new r,this.data=[],this.children=[]}reset(){this.children.length=this.data.length=0}insert(t,e,s){void 0===s&&(s=0);const i=this.data;if(!this.aabb.contains(t))return!1;const o=this.children;if(s<(this.maxDepth||this.root.maxDepth)){let i=!1;o.length||(this.subdivide(),i=!0);for(let i=0;8!==i;i++)if(o[i].insert(t,e,s+1))return!0;i&&(o.length=0)}return i.push(e),!0}subdivide(){const t=this.aabb,e=t.lowerBound,i=t.upperBound,o=this.children;o.push(new pe({aabb:new r({lowerBound:new s(0,0,0)})}),new pe({aabb:new r({lowerBound:new s(1,0,0)})}),new pe({aabb:new r({lowerBound:new s(1,1,0)})}),new pe({aabb:new r({lowerBound:new s(1,1,1)})}),new pe({aabb:new r({lowerBound:new s(0,1,1)})}),new pe({aabb:new r({lowerBound:new s(0,0,1)})}),new pe({aabb:new r({lowerBound:new s(1,0,1)})}),new pe({aabb:new r({lowerBound:new s(0,1,0)})})),i.vsub(e,ve),ve.scale(.5,ve);const n=this.root||this;for(let t=0;8!==t;t++){const s=o[t];s.root=n;const i=s.aabb.lowerBound;i.x*=ve.x,i.y*=ve.y,i.z*=ve.z,i.vadd(e,i),i.vadd(ve,s.aabb.upperBound)}}aabbQuery(t,e){this.data,this.children;const s=[this];for(;s.length;){const i=s.pop();i.aabb.overlaps(t)&&Array.prototype.push.apply(e,i.data),Array.prototype.push.apply(s,i.children)}return e}rayQuery(t,e,s){return t.getAABB(me),me.toLocalFrame(e,me),this.aabbQuery(me,s),s}removeEmptyNodes(){for(let t=this.children.length-1;t>=0;t--)this.children[t].removeEmptyNodes(),this.children[t].children.length||this.children[t].data.length||this.children.splice(t,1)}}class ye extends pe{constructor(t,e){void 0===e&&(e={}),super({root:null,aabb:t}),this.maxDepth=void 0!==e.maxDepth?e.maxDepth:8}}const ve=new s,me=new r;class we extends y{constructor(t,e){super({type:y.types.TRIMESH}),this.vertices=new Float32Array(t),this.indices=new Int16Array(e),this.normals=new Float32Array(e.length),this.aabb=new r,this.edges=null,this.scale=new s(1,1,1),this.tree=new ye,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}updateTree(){const t=this.tree;t.reset(),t.aabb.copy(this.aabb);const e=this.scale;t.aabb.lowerBound.x*=1/e.x,t.aabb.lowerBound.y*=1/e.y,t.aabb.lowerBound.z*=1/e.z,t.aabb.upperBound.x*=1/e.x,t.aabb.upperBound.y*=1/e.y,t.aabb.upperBound.z*=1/e.z;const i=new r,o=new s,n=new s,a=new s,l=[o,n,a];for(let e=0;e<this.indices.length/3;e++){const s=3*e;this._getUnscaledVertex(this.indices[s],o),this._getUnscaledVertex(this.indices[s+1],n),this._getUnscaledVertex(this.indices[s+2],a),i.setFromPoints(l),t.insert(i,e)}t.removeEmptyNodes()}getTrianglesInAABB(t,e){ge.copy(t);const s=this.scale,i=s.x,o=s.y,n=s.z,r=ge.lowerBound,a=ge.upperBound;return r.x/=i,r.y/=o,r.z/=n,a.x/=i,a.y/=o,a.z/=n,this.tree.aabbQuery(ge,e)}setScale(t){const e=this.scale.x===this.scale.y&&this.scale.y===this.scale.z,s=t.x===t.y&&t.y===t.z;e&&s||this.updateNormals(),this.scale.copy(t),this.updateAABB(),this.updateBoundingSphereRadius()}updateNormals(){const t=fe,e=this.normals;for(let s=0;s<this.indices.length/3;s++){const i=3*s,o=this.indices[i],n=this.indices[i+1],r=this.indices[i+2];this.getVertex(o,Ae),this.getVertex(n,Be),this.getVertex(r,Se),we.computeNormal(Be,Ae,Se,t),e[i]=t.x,e[i+1]=t.y,e[i+2]=t.z}}updateEdges(){const t={},e=(e,s)=>{t[e<s?`${e}_${s}`:`${s}_${e}`]=!0};for(let t=0;t<this.indices.length/3;t++){const s=3*t,i=this.indices[s],o=this.indices[s+1],n=this.indices[s+2];e(i,o),e(o,n),e(n,i)}const s=Object.keys(t);this.edges=new Int16Array(2*s.length);for(let t=0;t<s.length;t++){const e=s[t].split("_");this.edges[2*t]=parseInt(e[0],10),this.edges[2*t+1]=parseInt(e[1],10)}}getEdgeVertex(t,e,s){const i=this.edges[2*t+(e?1:0)];this.getVertex(i,s)}getEdgeVector(t,e){const s=be,i=xe;this.getEdgeVertex(t,0,s),this.getEdgeVertex(t,1,i),i.vsub(s,e)}static computeNormal(t,e,s,i){e.vsub(t,ze),s.vsub(e,Ee),Ee.cross(ze,i),i.isZero()||i.normalize()}getVertex(t,e){const s=this.scale;return this._getUnscaledVertex(t,e),e.x*=s.x,e.y*=s.y,e.z*=s.z,e}_getUnscaledVertex(t,e){const s=3*t,i=this.vertices;return e.set(i[s],i[s+1],i[s+2])}getWorldVertex(t,e,s,i){return this.getVertex(t,i),v.pointToWorldFrame(e,s,i,i),i}getTriangleVertices(t,e,s,i){const o=3*t;this.getVertex(this.indices[o],e),this.getVertex(this.indices[o+1],s),this.getVertex(this.indices[o+2],i)}getNormal(t,e){const s=3*t;return e.set(this.normals[s],this.normals[s+1],this.normals[s+2])}calculateLocalInertia(t,e){this.computeLocalAABB(Me);const s=Me.upperBound.x-Me.lowerBound.x,i=Me.upperBound.y-Me.lowerBound.y,o=Me.upperBound.z-Me.lowerBound.z;return e.set(1/12*t*(2*i*2*i+2*o*2*o),1/12*t*(2*s*2*s+2*o*2*o),1/12*t*(2*i*2*i+2*s*2*s))}computeLocalAABB(t){const e=t.lowerBound,s=t.upperBound,i=this.vertices.length;this.vertices;const o=Fe;this.getVertex(0,o),e.copy(o),s.copy(o);for(let t=0;t!==i;t++)this.getVertex(t,o),o.x<e.x?e.x=o.x:o.x>s.x&&(s.x=o.x),o.y<e.y?e.y=o.y:o.y>s.y&&(s.y=o.y),o.z<e.z?e.z=o.z:o.z>s.z&&(s.z=o.z)}updateAABB(){this.computeLocalAABB(this.aabb)}updateBoundingSphereRadius(){let t=0;const e=this.vertices,i=new s;for(let s=0,o=e.length/3;s!==o;s++){this.getVertex(s,i);const e=i.lengthSquared();e>t&&(t=e)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,s,i){const o=Ce,n=qe;o.position=t,o.quaternion=e,this.aabb.toWorldFrame(o,n),s.copy(n.lowerBound),i.copy(n.upperBound)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}static createTorus(t,e,s,i,o){void 0===t&&(t=1),void 0===e&&(e=.5),void 0===s&&(s=8),void 0===i&&(i=6),void 0===o&&(o=2*Math.PI);const n=[],r=[];for(let r=0;r<=s;r++)for(let a=0;a<=i;a++){const l=a/i*o,h=r/s*Math.PI*2,c=(t+e*Math.cos(h))*Math.cos(l),u=(t+e*Math.cos(h))*Math.sin(l),d=e*Math.sin(h);n.push(c,u,d)}for(let t=1;t<=s;t++)for(let e=1;e<=i;e++){const s=(i+1)*t+e-1,o=(i+1)*(t-1)+e-1,n=(i+1)*(t-1)+e,a=(i+1)*t+e;r.push(s,o,a),r.push(o,n,a)}return new we(n,r)}}const fe=new s,ge=new r,be=new s,xe=new s,Ee=new s,ze=new s,Ae=new s,Be=new s,Se=new s,Me=new r,Fe=new s,Ce=new v,qe=new r;class Ne extends class{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){!t.enabled||t.bi.isTrigger||t.bj.isTrigger||this.equations.push(t)}removeEquation(t){const e=this.equations,s=e.indexOf(t);-1!==s&&e.splice(s,1)}removeAllEquations(){this.equations.length=0}}{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let s=0;const i=this.iterations,o=this.tolerance*this.tolerance,n=this.equations,r=n.length,a=e.bodies,l=a.length,h=t;let c,u,d,p,y,v;if(0!==r)for(let t=0;t!==l;t++)a[t].updateSolveMassProperties();const m=Pe,w=Ie,f=Re;m.length=r,w.length=r,f.length=r;for(let t=0;t!==r;t++){const e=n[t];f[t]=0,w[t]=e.computeB(h),m[t]=1/e.computeC()}if(0!==r){for(let t=0;t!==l;t++){const e=a[t],s=e.vlambda,i=e.wlambda;s.set(0,0,0),i.set(0,0,0)}for(s=0;s!==i;s++){p=0;for(let t=0;t!==r;t++){const e=n[t];c=w[t],u=m[t],v=f[t],y=e.computeGWlambda(),d=u*(c-y-e.eps*v),v+d<e.minForce?d=e.minForce-v:v+d>e.maxForce&&(d=e.maxForce-v),f[t]+=d,p+=d>0?d:-d,e.addToWlambda(d)}if(p*p<o)break}for(let t=0;t!==l;t++){const e=a[t],s=e.velocity,i=e.angularVelocity;e.vlambda.vmul(e.linearFactor,e.vlambda),s.vadd(e.vlambda,s),e.wlambda.vmul(e.angularFactor,e.wlambda),i.vadd(e.wlambda,i)}let t=n.length;const e=1/h;for(;t--;)n[t].multiplier=f[t]*e}return s}}const Re=[],Pe=[],Ie=[];class Te extends class{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return 0===this.objects.length?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}{constructor(){super(...arguments),this.type=s}constructObject(){return new s}}const je=y.types.SPHERE,Le=y.types.SPHERE|y.types.PLANE,ke=y.types.BOX|y.types.BOX,Ve=y.types.SPHERE|y.types.BOX,Oe=y.types.PLANE|y.types.BOX,We=y.types.CONVEXPOLYHEDRON,De=y.types.SPHERE|y.types.CONVEXPOLYHEDRON,He=y.types.PLANE|y.types.CONVEXPOLYHEDRON,Ue=y.types.BOX|y.types.CONVEXPOLYHEDRON,Ge=y.types.SPHERE|y.types.HEIGHTFIELD,_e=y.types.BOX|y.types.HEIGHTFIELD,Ye=y.types.CONVEXPOLYHEDRON|y.types.HEIGHTFIELD,Xe=y.types.PARTICLE|y.types.SPHERE,$e=y.types.PLANE|y.types.PARTICLE,Qe=y.types.BOX|y.types.PARTICLE,Ze=y.types.PARTICLE|y.types.CONVEXPOLYHEDRON,Ke=y.types.CYLINDER,Je=y.types.SPHERE|y.types.CYLINDER,ts=y.types.PLANE|y.types.CYLINDER,es=y.types.BOX|y.types.CYLINDER,ss=y.types.CONVEXPOLYHEDRON|y.types.CYLINDER,is=y.types.HEIGHTFIELD|y.types.CYLINDER,os=y.types.PARTICLE|y.types.CYLINDER,ns=y.types.SPHERE|y.types.TRIMESH,rs=y.types.PLANE|y.types.TRIMESH;class as{get[je](){return this.sphereSphere}get[Le](){return this.spherePlane}get[ke](){return this.boxBox}get[Ve](){return this.sphereBox}get[Oe](){return this.planeBox}get[We](){return this.convexConvex}get[De](){return this.sphereConvex}get[He](){return this.planeConvex}get[Ue](){return this.boxConvex}get[Ge](){return this.sphereHeightfield}get[_e](){return this.boxHeightfield}get[Ye](){return this.convexHeightfield}get[Xe](){return this.sphereParticle}get[$e](){return this.planeParticle}get[Qe](){return this.boxParticle}get[Ze](){return this.convexParticle}get[Ke](){return this.convexConvex}get[Je](){return this.sphereConvex}get[ts](){return this.planeConvex}get[es](){return this.boxConvex}get[ss](){return this.convexConvex}get[is](){return this.heightfieldCylinder}get[os](){return this.particleCylinder}get[ns](){return this.sphereTrimesh}get[rs](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new Te,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,s,i,o,n){let r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new _t(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&s.collisionResponse&&i.collisionResponse;const a=this.currentContactMaterial;r.restitution=a.restitution,r.setSpookParams(a.contactEquationStiffness,a.contactEquationRelaxation,this.world.dt);const l=s.material||t.material,h=i.material||e.material;return l&&h&&l.restitution>=0&&h.restitution>=0&&(r.restitution=l.restitution*h.restitution),r.si=o||s,r.sj=n||i,r}createFrictionEquationsFromContact(t,e){const s=t.bi,i=t.bj,o=t.si,n=t.sj,r=this.world,a=this.currentContactMaterial;let l=a.friction;const h=o.material||s.material,c=n.material||i.material;if(h&&c&&h.friction>=0&&c.friction>=0&&(l=h.friction*c.friction),l>0){const o=l*(r.frictionGravity||r.gravity).length();let n=s.invMass+i.invMass;n>0&&(n=1/n);const h=this.frictionEquationPool,c=h.length?h.pop():new ie(s,i,o*n),u=h.length?h.pop():new ie(s,i,o*n);return c.bi=u.bi=s,c.bj=u.bj=i,c.minForce=u.minForce=-o*n,c.maxForce=u.maxForce=o*n,c.ri.copy(t.ri),c.rj.copy(t.rj),u.ri.copy(t.ri),u.rj.copy(t.rj),t.ni.tangents(c.t,u.t),c.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),u.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),c.enabled=u.enabled=t.enabled,e.push(c,u),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||1===t)return;const s=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];ls.setZero(),hs.setZero(),cs.setZero();const o=e.bi;e.bj;for(let s=0;s!==t;s++)e=this.result[this.result.length-1-s],e.bi!==o?(ls.vadd(e.ni,ls),hs.vadd(e.ri,hs),cs.vadd(e.rj,cs)):(ls.vsub(e.ni,ls),hs.vadd(e.rj,hs),cs.vadd(e.ri,cs));const n=1/t;hs.scale(n,s.ri),cs.scale(n,s.rj),i.ri.copy(s.ri),i.rj.copy(s.rj),ls.normalize(),ls.tangents(s.t,i.t)}getContacts(t,e,s,i,o,n,r){this.contactPointPool=o,this.frictionEquationPool=r,this.result=i,this.frictionResult=n;const a=ps,l=ys,h=us,c=ds;for(let i=0,o=t.length;i!==o;i++){const o=t[i],n=e[i];let r=null;o.material&&n.material&&(r=s.getContactMaterial(o.material,n.material)||null);const u=o.type&N.KINEMATIC&&n.type&N.STATIC||o.type&N.STATIC&&n.type&N.KINEMATIC||o.type&N.KINEMATIC&&n.type&N.KINEMATIC;for(let t=0;t<o.shapes.length;t++){o.quaternion.mult(o.shapeOrientations[t],a),o.quaternion.vmult(o.shapeOffsets[t],h),h.vadd(o.position,h);const e=o.shapes[t];for(let t=0;t<n.shapes.length;t++){n.quaternion.mult(n.shapeOrientations[t],l),n.quaternion.vmult(n.shapeOffsets[t],c),c.vadd(n.position,c);const i=n.shapes[t];if(!(e.collisionFilterMask&i.collisionFilterGroup&&i.collisionFilterMask&e.collisionFilterGroup))continue;if(h.distanceTo(c)>e.boundingSphereRadius+i.boundingSphereRadius)continue;let d=null;e.material&&i.material&&(d=s.getContactMaterial(e.material,i.material)||null),this.currentContactMaterial=d||r||s.defaultContactMaterial;const p=this[e.type|i.type];if(p){let t=!1;t=e.type<i.type?p.call(this,e,i,h,c,a,l,o,n,e,i,u):p.call(this,i,e,c,h,l,a,n,o,e,i,u),t&&u&&(s.shapeOverlapKeeper.set(e.id,i.id),s.bodyOverlapKeeper.set(o.id,n.id))}}}}}sphereSphere(t,e,s,i,o,n,r,a,l,h,c){if(c)return s.distanceSquared(i)<(t.radius+e.radius)**2;const u=this.createContactEquation(r,a,t,e,l,h);i.vsub(s,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.scale(t.radius,u.ri),u.rj.scale(-e.radius,u.rj),u.ri.vadd(s,u.ri),u.ri.vsub(r.position,u.ri),u.rj.vadd(i,u.rj),u.rj.vsub(a.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}spherePlane(t,e,s,i,o,n,r,a,l,h,c){const u=this.createContactEquation(r,a,t,e,l,h);if(u.ni.set(0,0,1),n.vmult(u.ni,u.ni),u.ni.negate(u.ni),u.ni.normalize(),u.ni.scale(t.radius,u.ri),s.vsub(i,Ps),u.ni.scale(u.ni.dot(Ps),Is),Ps.vsub(Is,u.rj),-Ps.dot(u.ni)<=t.radius){if(c)return!0;const t=u.ri,e=u.rj;t.vadd(s,t),t.vsub(r.position,t),e.vadd(i,e),e.vsub(a.position,e),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}}boxBox(t,e,s,i,o,n,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,s,i,o,n,r,a,t,e,c)}sphereBox(t,e,s,i,o,n,r,a,l,h,c){const u=this.v3pool,d=Hs;s.vsub(i,Vs),e.getSideNormals(d,n);const p=t.radius;let y=!1;const v=Gs,m=_s,w=Ys;let f=null,g=0,b=0,x=0,E=null;for(let t=0,e=d.length;t!==e&&!1===y;t++){const e=Os;e.copy(d[t]);const s=e.length();e.normalize();const i=Vs.dot(e);if(i<s+p&&i>0){const o=Ws,n=Ds;o.copy(d[(t+1)%3]),n.copy(d[(t+2)%3]);const r=o.length(),a=n.length();o.normalize(),n.normalize();const l=Vs.dot(o),h=Vs.dot(n);if(l<r&&l>-r&&h<a&&h>-a){const t=Math.abs(i-s-p);if((null===E||t<E)&&(E=t,b=l,x=h,f=s,v.copy(e),m.copy(o),w.copy(n),g++,c))return!0}}}if(g){y=!0;const o=this.createContactEquation(r,a,t,e,l,h);v.scale(-p,o.ri),o.ni.copy(v),o.ni.negate(o.ni),v.scale(f,v),m.scale(b,m),v.vadd(m,v),w.scale(x,w),v.vadd(w,o.rj),o.ri.vadd(s,o.ri),o.ri.vsub(r.position,o.ri),o.rj.vadd(i,o.rj),o.rj.vsub(a.position,o.rj),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}let z=u.get();const A=Us;for(let o=0;2!==o&&!y;o++)for(let n=0;2!==n&&!y;n++)for(let u=0;2!==u&&!y;u++)if(z.set(0,0,0),o?z.vadd(d[0],z):z.vsub(d[0],z),n?z.vadd(d[1],z):z.vsub(d[1],z),u?z.vadd(d[2],z):z.vsub(d[2],z),i.vadd(z,A),A.vsub(s,A),A.lengthSquared()<p*p){if(c)return!0;y=!0;const o=this.createContactEquation(r,a,t,e,l,h);o.ri.copy(A),o.ri.normalize(),o.ni.copy(o.ri),o.ri.scale(p,o.ri),o.rj.copy(z),o.ri.vadd(s,o.ri),o.ri.vsub(r.position,o.ri),o.rj.vadd(i,o.rj),o.rj.vsub(a.position,o.rj),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}u.release(z),z=null;const B=u.get(),S=u.get(),M=u.get(),F=u.get(),C=u.get(),q=d.length;for(let o=0;o!==q&&!y;o++)for(let n=0;n!==q&&!y;n++)if(o%3!=n%3){d[n].cross(d[o],B),B.normalize(),d[o].vadd(d[n],S),M.copy(s),M.vsub(S,M),M.vsub(i,M);const u=M.dot(B);B.scale(u,F);let v=0;for(;v===o%3||v===n%3;)v++;C.copy(s),C.vsub(F,C),C.vsub(S,C),C.vsub(i,C);const m=Math.abs(u),w=C.length();if(m<d[v].length()&&w<p){if(c)return!0;y=!0;const o=this.createContactEquation(r,a,t,e,l,h);S.vadd(F,o.rj),o.rj.copy(o.rj),C.negate(o.ni),o.ni.normalize(),o.ri.copy(o.rj),o.ri.vadd(i,o.ri),o.ri.vsub(s,o.ri),o.ri.normalize(),o.ri.scale(p,o.ri),o.ri.vadd(s,o.ri),o.ri.vsub(r.position,o.ri),o.rj.vadd(i,o.rj),o.rj.vsub(a.position,o.rj),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}}u.release(B,S,M,F,C)}planeBox(t,e,s,i,o,n,r,a,l,h,c){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,s,i,o,n,r,a,t,e,c)}convexConvex(t,e,s,i,o,n,r,a,l,h,c,u,d){const p=li;if(!(s.distanceTo(i)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,s,o,i,n,p,u,d)){const u=[],d=hi;t.clipAgainstHull(s,o,e,i,n,p,-100,100,u);let y=0;for(let o=0;o!==u.length;o++){if(c)return!0;const n=this.createContactEquation(r,a,t,e,l,h),v=n.ri,m=n.rj;p.negate(n.ni),u[o].normal.negate(d),d.scale(u[o].depth,d),u[o].point.vadd(d,v),m.copy(u[o].point),v.vsub(s,v),m.vsub(i,m),v.vadd(s,v),v.vsub(r.position,v),m.vadd(i,m),m.vsub(a.position,m),this.result.push(n),y++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(n,this.frictionResult)}this.enableFrictionReduction&&y&&this.createFrictionFromAverage(y)}}sphereConvex(t,e,s,i,o,n,r,a,l,h,c){const u=this.v3pool;s.vsub(i,Xs);const d=e.faceNormals,p=e.faces,y=e.vertices,v=t.radius;let m=!1;for(let o=0;o!==y.length;o++){const u=y[o],d=Ks;n.vmult(u,d),i.vadd(d,d);const p=Zs;if(d.vsub(s,p),p.lengthSquared()<v*v){if(c)return!0;m=!0;const o=this.createContactEquation(r,a,t,e,l,h);return o.ri.copy(p),o.ri.normalize(),o.ni.copy(o.ri),o.ri.scale(v,o.ri),d.vsub(i,o.rj),o.ri.vadd(s,o.ri),o.ri.vsub(r.position,o.ri),o.rj.vadd(i,o.rj),o.rj.vsub(a.position,o.rj),this.result.push(o),void this.createFrictionEquationsFromContact(o,this.frictionResult)}}for(let o=0,w=p.length;o!==w&&!1===m;o++){const w=d[o],f=p[o],g=Js;n.vmult(w,g);const b=ti;n.vmult(y[f[0]],b),b.vadd(i,b);const x=ei;g.scale(-v,x),s.vadd(x,x);const E=si;x.vsub(b,E);const z=E.dot(g),A=ii;if(s.vsub(b,A),z<0&&A.dot(g)>0){const o=[];for(let t=0,e=f.length;t!==e;t++){const e=u.get();n.vmult(y[f[t]],e),i.vadd(e,e),o.push(e)}if(ks(o,g,s)){if(c)return!0;m=!0;const n=this.createContactEquation(r,a,t,e,l,h);g.scale(-v,n.ri),g.negate(n.ni);const d=u.get();g.scale(-z,d);const p=u.get();g.scale(-v,p),s.vsub(i,n.rj),n.rj.vadd(p,n.rj),n.rj.vadd(d,n.rj),n.rj.vadd(i,n.rj),n.rj.vsub(a.position,n.rj),n.ri.vadd(s,n.ri),n.ri.vsub(r.position,n.ri),u.release(d),u.release(p),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult);for(let t=0,e=o.length;t!==e;t++)u.release(o[t]);return}for(let d=0;d!==f.length;d++){const p=u.get(),m=u.get();n.vmult(y[f[(d+1)%f.length]],p),n.vmult(y[f[(d+2)%f.length]],m),i.vadd(p,p),i.vadd(m,m);const w=$s;m.vsub(p,w);const g=Qs;w.unit(g);const b=u.get(),x=u.get();s.vsub(p,x);const E=x.dot(g);g.scale(E,b),b.vadd(p,b);const z=u.get();if(b.vsub(s,z),E>0&&E*E<w.lengthSquared()&&z.lengthSquared()<v*v){if(c)return!0;const n=this.createContactEquation(r,a,t,e,l,h);b.vsub(i,n.rj),b.vsub(s,n.ni),n.ni.normalize(),n.ni.scale(v,n.ri),n.rj.vadd(i,n.rj),n.rj.vsub(a.position,n.rj),n.ri.vadd(s,n.ri),n.ri.vsub(r.position,n.ri),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult);for(let t=0,e=o.length;t!==e;t++)u.release(o[t]);return u.release(p),u.release(m),u.release(b),u.release(z),void u.release(x)}u.release(p),u.release(m),u.release(b),u.release(z),u.release(x)}for(let t=0,e=o.length;t!==e;t++)u.release(o[t])}}}planeConvex(t,e,s,i,o,n,r,a,l,h,c){const u=oi,d=ni;d.set(0,0,1),o.vmult(d,d);let p=0;const y=ri;for(let o=0;o!==e.vertices.length;o++){u.copy(e.vertices[o]),n.vmult(u,u),i.vadd(u,u),u.vsub(s,y);if(d.dot(y)<=0){if(c)return!0;const o=this.createContactEquation(r,a,t,e,l,h),n=ai;d.scale(d.dot(y),n),u.vsub(n,n),n.vsub(s,o.ri),o.ni.copy(d),u.vsub(i,o.rj),o.ri.vadd(s,o.ri),o.ri.vsub(r.position,o.ri),o.rj.vadd(i,o.rj),o.rj.vsub(a.position,o.rj),this.result.push(o),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(o,this.frictionResult)}}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,s,i,o,n,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,s,i,o,n,r,a,t,e,c)}sphereHeightfield(t,e,s,i,o,n,r,a,l,h,c){const u=e.data,d=t.radius,p=e.elementSize,y=zi,m=Ei;v.pointToLocalFrame(i,n,s,m);let w=Math.floor((m.x-d)/p)-1,f=Math.ceil((m.x+d)/p)+1,g=Math.floor((m.y-d)/p)-1,b=Math.ceil((m.y+d)/p)+1;if(f<0||b<0||w>u.length||g>u[0].length)return;w<0&&(w=0),f<0&&(f=0),g<0&&(g=0),b<0&&(b=0),w>=u.length&&(w=u.length-1),f>=u.length&&(f=u.length-1),b>=u[0].length&&(b=u[0].length-1),g>=u[0].length&&(g=u[0].length-1);const x=[];e.getRectMinMax(w,g,f,b,x);const E=x[0],z=x[1];if(m.z-d>z||m.z+d<E)return;const A=this.result;for(let l=w;l<f;l++)for(let h=g;h<b;h++){const u=A.length;let d=!1;if(e.getConvexTrianglePillar(l,h,!1),v.pointToWorldFrame(i,n,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(d=this.sphereConvex(t,e.pillarConvex,s,y,o,n,r,a,t,e,c)),c&&d)return!0;if(e.getConvexTrianglePillar(l,h,!0),v.pointToWorldFrame(i,n,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(d=this.sphereConvex(t,e.pillarConvex,s,y,o,n,r,a,t,e,c)),c&&d)return!0;if(A.length-u>2)return}}boxHeightfield(t,e,s,i,o,n,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,s,i,o,n,r,a,t,e,c)}convexHeightfield(t,e,s,i,o,n,r,a,l,h,c){const u=e.data,d=e.elementSize,p=t.boundingSphereRadius,y=bi,m=xi,w=gi;v.pointToLocalFrame(i,n,s,w);let f=Math.floor((w.x-p)/d)-1,g=Math.ceil((w.x+p)/d)+1,b=Math.floor((w.y-p)/d)-1,x=Math.ceil((w.y+p)/d)+1;if(g<0||x<0||f>u.length||b>u[0].length)return;f<0&&(f=0),g<0&&(g=0),b<0&&(b=0),x<0&&(x=0),f>=u.length&&(f=u.length-1),g>=u.length&&(g=u.length-1),x>=u[0].length&&(x=u[0].length-1),b>=u[0].length&&(b=u[0].length-1);const E=[];e.getRectMinMax(f,b,g,x,E);const z=E[0],A=E[1];if(!(w.z-p>A||w.z+p<z))for(let l=f;l<g;l++)for(let h=b;h<x;h++){let u=!1;if(e.getConvexTrianglePillar(l,h,!1),v.pointToWorldFrame(i,n,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(u=this.convexConvex(t,e.pillarConvex,s,y,o,n,r,a,null,null,c,m,null)),c&&u)return!0;if(e.getConvexTrianglePillar(l,h,!0),v.pointToWorldFrame(i,n,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(u=this.convexConvex(t,e.pillarConvex,s,y,o,n,r,a,null,null,c,m,null)),c&&u)return!0}}sphereParticle(t,e,s,i,o,n,r,a,l,h,c){const u=pi;u.set(0,0,1),i.vsub(s,u);if(u.lengthSquared()<=t.radius*t.radius){if(c)return!0;const s=this.createContactEquation(a,r,e,t,l,h);u.normalize(),s.rj.copy(u),s.rj.scale(t.radius,s.rj),s.ni.copy(u),s.ni.negate(s.ni),s.ri.set(0,0,0),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}}planeParticle(t,e,s,i,o,n,r,a,l,h,c){const u=ci;u.set(0,0,1),r.quaternion.vmult(u,u);const d=ui;i.vsub(r.position,d);if(u.dot(d)<=0){if(c)return!0;const s=this.createContactEquation(a,r,e,t,l,h);s.ni.copy(u),s.ni.negate(s.ni),s.ri.set(0,0,0);const o=di;u.scale(u.dot(i),o),i.vsub(o,o),s.rj.copy(o),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}}boxParticle(t,e,s,i,o,n,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,s,i,o,n,r,a,t,e,c)}convexParticle(t,e,s,i,o,n,r,a,l,h,c){let u=-1;const d=mi,p=fi;let y=null;const v=vi;if(v.copy(i),v.vsub(s,v),o.conjugate(yi),yi.vmult(v,v),t.pointIsInside(v)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(s,o),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(o);for(let e=0,s=t.faces.length;e!==s;e++){const s=[t.worldVertices[t.faces[e][0]]],o=t.worldFaceNormals[e];i.vsub(s[0],wi);const n=-o.dot(wi);if(null===y||Math.abs(n)<Math.abs(y)){if(c)return!0;y=n,u=e,d.copy(o)}}if(-1!==u){const o=this.createContactEquation(a,r,e,t,l,h);d.scale(y,p),p.vadd(i,p),p.vsub(s,p),o.rj.copy(p),d.negate(o.ni),o.ri.set(0,0,0);const n=o.ri,c=o.rj;n.vadd(i,n),n.vsub(a.position,n),c.vadd(s,c),c.vsub(r.position,c),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,s,i,o,n,r,a,l,h,c){return this.convexHeightfield(e,t,i,s,n,o,a,r,l,h,c)}particleCylinder(t,e,s,i,o,n,r,a,l,h,c){return this.convexParticle(e,t,i,s,n,o,a,r,l,h,c)}sphereTrimesh(t,e,s,i,o,n,r,a,l,h,c){const u=Es,d=zs,p=As,y=Bs,m=Ss,w=Ms,f=Ns,g=xs,b=gs,x=Rs;v.pointToLocalFrame(i,n,s,m);const E=t.radius;f.lowerBound.set(m.x-E,m.y-E,m.z-E),f.upperBound.set(m.x+E,m.y+E,m.z+E),e.getTrianglesInAABB(f,x);const z=bs,A=t.radius*t.radius;for(let o=0;o<x.length;o++)for(let u=0;u<3;u++)if(e.getVertex(e.indices[3*x[o]+u],z),z.vsub(m,b),b.lengthSquared()<=A){if(g.copy(z),v.pointToWorldFrame(i,n,g,z),z.vsub(s,b),c)return!0;let o=this.createContactEquation(r,a,t,e,l,h);o.ni.copy(b),o.ni.normalize(),o.ri.copy(o.ni),o.ri.scale(t.radius,o.ri),o.ri.vadd(s,o.ri),o.ri.vsub(r.position,o.ri),o.rj.copy(z),o.rj.vsub(a.position,o.rj),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}for(let o=0;o<x.length;o++)for(let f=0;f<3;f++){e.getVertex(e.indices[3*x[o]+f],u),e.getVertex(e.indices[3*x[o]+(f+1)%3],d),d.vsub(u,p),m.vsub(d,w);const g=w.dot(p);m.vsub(u,w);let b=w.dot(p);if(b>0&&g<0){m.vsub(u,w),y.copy(p),y.normalize(),b=w.dot(y),y.scale(b,w),w.vadd(u,w);if(w.distanceTo(m)<t.radius){if(c)return!0;const o=this.createContactEquation(r,a,t,e,l,h);w.vsub(m,o.ni),o.ni.normalize(),o.ni.scale(t.radius,o.ri),o.ri.vadd(s,o.ri),o.ri.vsub(r.position,o.ri),v.pointToWorldFrame(i,n,w,w),w.vsub(a.position,o.rj),v.vectorToWorldFrame(n,o.ni,o.ni),v.vectorToWorldFrame(n,o.ri,o.ri),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}}}const B=Fs,S=Cs,M=qs,F=fs;for(let o=0,u=x.length;o!==u;o++){e.getTriangleVertices(x[o],B,S,M),e.getNormal(x[o],F),m.vsub(B,w);let u=w.dot(F);if(F.scale(u,w),m.vsub(w,w),u=w.distanceTo(m),at.pointInTriangle(w,B,S,M)&&u<t.radius){if(c)return!0;let o=this.createContactEquation(r,a,t,e,l,h);w.vsub(m,o.ni),o.ni.normalize(),o.ni.scale(t.radius,o.ri),o.ri.vadd(s,o.ri),o.ri.vsub(r.position,o.ri),v.pointToWorldFrame(i,n,w,w),w.vsub(a.position,o.rj),v.vectorToWorldFrame(n,o.ni,o.ni),v.vectorToWorldFrame(n,o.ri,o.ri),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}}x.length=0}planeTrimesh(t,e,i,o,n,r,a,l,h,c,u){const d=new s,p=vs;p.set(0,0,1),n.vmult(p,p);for(let n=0;n<e.vertices.length/3;n++){e.getVertex(n,d);const y=new s;y.copy(d),v.pointToWorldFrame(o,r,y,d);const m=ms;d.vsub(i,m);if(p.dot(m)<=0){if(u)return!0;const s=this.createContactEquation(a,l,t,e,h,c);s.ni.copy(p);const i=ws;p.scale(m.dot(p),i),d.vsub(i,i),s.ri.copy(i),s.ri.vsub(a.position,s.ri),s.rj.copy(d),s.rj.vsub(l.position,s.rj),this.result.push(s),this.createFrictionEquationsFromContact(s,this.frictionResult)}}}}const ls=new s,hs=new s,cs=new s,us=new s,ds=new s,ps=new u,ys=new u,vs=new s,ms=new s,ws=new s,fs=new s,gs=new s;new s;const bs=new s,xs=new s,Es=new s,zs=new s,As=new s,Bs=new s,Ss=new s,Ms=new s,Fs=new s,Cs=new s,qs=new s,Ns=new r,Rs=[],Ps=new s,Is=new s,Ts=new s,js=new s,Ls=new s;function ks(t,e,s){let i=null;const o=t.length;for(let n=0;n!==o;n++){const r=t[n],a=Ts;t[(n+1)%o].vsub(r,a);const l=js;a.cross(e,l);const h=Ls;s.vsub(r,h);const c=l.dot(h);if(!(null===i||c>0&&!0===i||c<=0&&!1===i))return!1;null===i&&(i=c>0)}return!0}const Vs=new s,Os=new s,Ws=new s,Ds=new s,Hs=[new s,new s,new s,new s,new s,new s],Us=new s,Gs=new s,_s=new s,Ys=new s,Xs=new s,$s=new s,Qs=new s,Zs=new s,Ks=new s,Js=new s,ti=new s,ei=new s,si=new s,ii=new s;new s,new s;const oi=new s,ni=new s,ri=new s,ai=new s,li=new s,hi=new s,ci=new s,ui=new s,di=new s,pi=new s,yi=new u,vi=new s;new s;const mi=new s,wi=new s,fi=new s,gi=new s,bi=new s,xi=[0],Ei=new s,zi=new s;class Ai{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const s=e;e=t,t=s}return t<<16|e}set(t,e){const s=this.getKey(t,e),i=this.current;let o=0;for(;s>i[o];)o++;if(s!==i[o]){for(let t=i.length-1;t>=o;t--)i[t+1]=i[t];i[o]=s}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const s=this.current,i=this.previous,o=s.length,n=i.length;let r=0;for(let e=0;e<o;e++){let o=!1;const n=s[e];for(;n>i[r];)r++;o=n===i[r],o||Bi(t,n)}r=0;for(let t=0;t<n;t++){let o=!1;const n=i[t];for(;n>s[r];)r++;o=s[r]===n,o||Bi(e,n)}}}function Bi(t,e){t.push((4294901760&e)>>16,65535&e)}const Si=(t,e)=>t<e?`${t}-${e}`:`${e}-${t}`;class Mi{constructor(){this.data={keys:[]}}get(t,e){const s=Si(t,e);return this.data[s]}set(t,e,s){const i=Si(t,e);this.get(t,e)||this.data.keys.push(i),this.data[i]=s}delete(t,e){const s=Si(t,e),i=this.data.keys.indexOf(s);-1!==i&&this.data.keys.splice(i,1),delete this.data[s]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){delete t[e.pop()]}}}class Fi extends c{constructor(t){void 0===t&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=void 0!==t.quatNormalizeSkip?t.quatNormalizeSkip:0,this.quatNormalizeFast=void 0!==t.quatNormalizeFast&&t.quatNormalizeFast,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new s,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new s,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=void 0!==t.broadphase?t.broadphase:new $,this.bodies=[],this.hasActiveBodies=!1,this.solver=void 0!==t.solver?t.solver:new Ne,this.constraints=[],this.narrowphase=new as(this),this.collisionMatrix=new h,this.collisionMatrixPrevious=new h,this.bodyOverlapKeeper=new Ai,this.shapeOverlapKeeper=new Ai,this.contactmaterials=[],this.contactMaterialTable=new Mi,this.defaultMaterial=new ae("default"),this.defaultContactMaterial=new re(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);-1!==e&&this.constraints.splice(e,1)}rayTest(t,e,s){s instanceof Q?this.raycastClosest(t,e,{skipBackfaces:!0},s):this.raycastAll(t,e,{skipBackfaces:!0},s)}raycastAll(t,e,s,i){return void 0===s&&(s={}),s.mode=at.ALL,s.from=t,s.to=e,s.callback=i,Ci.intersectWorld(this,s)}raycastAny(t,e,s,i){return void 0===s&&(s={}),s.mode=at.ANY,s.from=t,s.to=e,s.result=i,Ci.intersectWorld(this,s)}raycastClosest(t,e,s,i){return void 0===s&&(s={}),s.mode=at.CLOSEST,s.from=t,s.to=e,s.result=i,Ci.intersectWorld(this,s)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof N&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,s=this.bodies,i=s.indexOf(t);if(-1!==i){s.splice(i,1);for(let t=0;t!==s.length;t++)s[t].index=t;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let s=0;s<e.length;s++){const i=e[s].shapes;for(let e=0;e<i.length;e++){const s=i[e];if(s.id===t)return s}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);-1!==e&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){void 0===t&&(t=1/60),void 0===e&&(e=10);const s=qi.now()/1e3;if(this.lastCallTime){const i=s-this.lastCallTime;this.step(t,i,e)}else this.step(t,void 0,e);this.lastCallTime=s}step(t,e,s){if(void 0===s&&(s=10),void 0===e)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const i=qi.now();let o=0;for(;this.accumulator>=t&&o<s&&(this.internalStep(t),this.accumulator-=t,o++,!(qi.now()-i>1e3*t)););this.accumulator=this.accumulator%t;const n=this.accumulator/t;for(let t=0;t!==this.bodies.length;t++){const e=this.bodies[t];e.previousPosition.lerp(e.position,n,e.interpolatedPosition),e.previousQuaternion.slerp(e.quaternion,n,e.interpolatedQuaternion),e.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,s=ji,i=Li,o=this.bodies.length,n=this.bodies,r=this.solver,a=this.gravity,l=this.doProfiling,h=this.profile,c=N.DYNAMIC;let u=-1/0;const d=this.constraints,p=Ti;a.length();const y=a.x,v=a.y,m=a.z;let w=0;for(l&&(u=qi.now()),w=0;w!==o;w++){const t=n[w];if(t.type===c){const e=t.force,s=t.mass;e.x+=s*y,e.y+=s*v,e.z+=s*m}}for(let t=0,e=this.subsystems.length;t!==e;t++)this.subsystems[t].update();l&&(u=qi.now()),s.length=0,i.length=0,this.broadphase.collisionPairs(this,s,i),l&&(h.broadphase=qi.now()-u);let f=d.length;for(w=0;w!==f;w++){const t=d[w];if(!t.collideConnected)for(let e=s.length-1;e>=0;e-=1)(t.bodyA===s[e]&&t.bodyB===i[e]||t.bodyB===s[e]&&t.bodyA===i[e])&&(s.splice(e,1),i.splice(e,1))}this.collisionMatrixTick(),l&&(u=qi.now());const g=Ii,b=e.length;for(w=0;w!==b;w++)g.push(e[w]);e.length=0;const x=this.frictionEquations.length;for(w=0;w!==x;w++)p.push(this.frictionEquations[w]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(s,i,this,e,g,this.frictionEquations,p),l&&(h.narrowphase=qi.now()-u),l&&(u=qi.now()),w=0;w<this.frictionEquations.length;w++)r.addEquation(this.frictionEquations[w]);const E=e.length;for(let t=0;t!==E;t++){const s=e[t],i=s.bi,o=s.bj,n=s.si,a=s.sj;let l;if(l=i.material&&o.material&&this.getContactMaterial(i.material,o.material)||this.defaultContactMaterial,l.friction,i.material&&o.material&&(i.material.friction>=0&&o.material.friction>=0&&(i.material.friction,o.material.friction),i.material.restitution>=0&&o.material.restitution>=0&&(s.restitution=i.material.restitution*o.material.restitution)),r.addEquation(s),i.allowSleep&&i.type===N.DYNAMIC&&i.sleepState===N.SLEEPING&&o.sleepState===N.AWAKE&&o.type!==N.STATIC){o.velocity.lengthSquared()+o.angularVelocity.lengthSquared()>=2*o.sleepSpeedLimit**2&&(i.wakeUpAfterNarrowphase=!0)}if(o.allowSleep&&o.type===N.DYNAMIC&&o.sleepState===N.SLEEPING&&i.sleepState===N.AWAKE&&i.type!==N.STATIC){i.velocity.lengthSquared()+i.angularVelocity.lengthSquared()>=2*i.sleepSpeedLimit**2&&(o.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(i,o,!0),this.collisionMatrixPrevious.get(i,o)||(Pi.body=o,Pi.contact=s,i.dispatchEvent(Pi),Pi.body=i,o.dispatchEvent(Pi)),this.bodyOverlapKeeper.set(i.id,o.id),this.shapeOverlapKeeper.set(n.id,a.id)}for(this.emitContactEvents(),l&&(h.makeContactConstraints=qi.now()-u,u=qi.now()),w=0;w!==o;w++){const t=n[w];t.wakeUpAfterNarrowphase&&(t.wakeUp(),t.wakeUpAfterNarrowphase=!1)}for(f=d.length,w=0;w!==f;w++){const t=d[w];t.update();for(let e=0,s=t.equations.length;e!==s;e++){const s=t.equations[e];r.addEquation(s)}}r.solve(t,this),l&&(h.solve=qi.now()-u),r.removeAllEquations();const z=Math.pow;for(w=0;w!==o;w++){const e=n[w];if(e.type&c){const s=z(1-e.linearDamping,t),i=e.velocity;i.scale(s,i);const o=e.angularVelocity;if(o){const s=z(1-e.angularDamping,t);o.scale(s,o)}}}this.dispatchEvent(Ri),l&&(u=qi.now());const A=this.stepnumber%(this.quatNormalizeSkip+1)==0,B=this.quatNormalizeFast;for(w=0;w!==o;w++)n[w].integrate(t,A,B);this.clearForces(),this.broadphase.dirty=!0,l&&(h.integrate=qi.now()-u),this.stepnumber+=1,this.dispatchEvent(Ni);let S=!0;if(this.allowSleep)for(S=!1,w=0;w!==o;w++){const t=n[w];t.sleepTick(this.time),t.sleepState!==N.SLEEPING&&(S=!0)}this.hasActiveBodies=S}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(ki,Vi),t){for(let t=0,e=ki.length;t<e;t+=2)Oi.bodyA=this.getBodyById(ki[t]),Oi.bodyB=this.getBodyById(ki[t+1]),this.dispatchEvent(Oi);Oi.bodyA=Oi.bodyB=null}if(e){for(let t=0,e=Vi.length;t<e;t+=2)Wi.bodyA=this.getBodyById(Vi[t]),Wi.bodyB=this.getBodyById(Vi[t+1]),this.dispatchEvent(Wi);Wi.bodyA=Wi.bodyB=null}ki.length=Vi.length=0;const s=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((s||i)&&this.shapeOverlapKeeper.getDiff(ki,Vi),s){for(let t=0,e=ki.length;t<e;t+=2){const e=this.getShapeById(ki[t]),s=this.getShapeById(ki[t+1]);Di.shapeA=e,Di.shapeB=s,e&&(Di.bodyA=e.body),s&&(Di.bodyB=s.body),this.dispatchEvent(Di)}Di.bodyA=Di.bodyB=Di.shapeA=Di.shapeB=null}if(i){for(let t=0,e=Vi.length;t<e;t+=2){const e=this.getShapeById(Vi[t]),s=this.getShapeById(Vi[t+1]);Hi.shapeA=e,Hi.shapeB=s,e&&(Hi.bodyA=e.body),s&&(Hi.bodyB=s.body),this.dispatchEvent(Hi)}Hi.bodyA=Hi.bodyB=Hi.shapeA=Hi.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let s=0;s!==e;s++){const e=t[s];e.force,e.torque,e.force.set(0,0,0),e.torque.set(0,0,0)}}}new r;const Ci=new at,qi=globalThis.performance||{};if(!qi.now){let t=Date.now();qi.timing&&qi.timing.navigationStart&&(t=qi.timing.navigationStart),qi.now=()=>Date.now()-t}new s;const Ni={type:"postStep"},Ri={type:"preStep"},Pi={type:N.COLLIDE_EVENT_NAME,body:null,contact:null},Ii=[],Ti=[],ji=[],Li=[],ki=[],Vi=[],Oi={type:"beginContact",bodyA:null,bodyB:null},Wi={type:"endContact",bodyA:null,bodyB:null},Di={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Hi={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Ui=new Map,Gi={world:null,delta:0,flow:{tmp:[],key:[]},reflow:{ray:[],stat:{fps:0,delta:0}}},_i={clear:()=>{Ui.clear()},byName:t=>Ui.has(t)?Ui.get(t):null,add:t=>{if("ray"!==t.types&&"contact"!==t.types)switch(t.types){case"joint":Gi.world.addConstraint(t);break;default:Gi.world.addBody(t)}Ui.set(t.name,t)},remove:t=>{if("ray"!==t.types&&"contact"!==t.types)switch(t.types){case"joint":Gi.world.removeConstraint(t);break;default:Gi.world.removeBody(t)}Ui.delete(t.name)},getVolume:(t,e,s)=>{let i=1;switch(t){case"sphere":i=4*Math.PI*e[0]*e[0]*e[0]/3;break;case"cone":i=Math.PI*e[0]*(.5*e[1])*2;break;case"box":i=.5*e[0]*8*(.5*e[1])*(.5*e[2]);break;case"cylinder":i=Math.PI*e[0]*e[0]*(.5*e[1])*2;break;case"capsule":i=4*Math.PI*e[0]*e[0]*e[0]/3+Math.PI*e[0]*e[0]*(.5*e[1])*2;break;case"convex":case"mesh":i=_i.getConvexVolume(s)}return i},getConvexVolume:t=>{let e,s=t.length/3,i=[t[0],t[1],t[2]],o=[t[0],t[1],t[2]];for(;s--;)e=3*s,t[e]<i[0]?i[0]=t[e]:t[e]>o[0]&&(o[0]=t[e]),t[e+1]<i[1]?i[1]=t[e+1]:t[e+1]>o[1]&&(o[1]=t[e+1]),t[e+2]<i[2]?i[2]=t[e+2]:t[e+2]>o[2]&&(o[2]=t[e+2]);return(o[0]-i[0])*(o[1]-i[1])*(o[2]-i[2])}},Yi=s,Xi=u;Yi.prototype.toArray=function(t,e){let s=void 0!==t;if(s||(t=[]),t[e=e||0]=this.x,t[e+1]=this.y,t[e+2]=this.z,!s)return t},Yi.prototype.fromArray=function(t,e){return e=e||0,this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},Yi.prototype.fromArray=function(t,e){return e=e||0,this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},Xi.prototype.toArray=function(t,e){let s=void 0!==t;if(s||(t=[]),t[e=e||0]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,!s)return t},Xi.prototype.fromArray=function(t,e){return e=e||0,this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this};const $i=2e3,Qi=100,Zi=50,Ki=100,Ji=50,to=50,eo=20,so={bodyFull:14,body:8,joint:16,contact:8,ray:11,character:16,vehicle:72,solver:128};class io{constructor(){this.id=0,this.list=[],this.type="item",this.Utils=null}reset(){let t=this.list.length;for(;t--;)this.dispose(this.list[t]);this.id=0,this.list=[]}byName(t){return this.Utils.byName(t)}setName(t={}){let e=void 0!==t.name?t.name:this.type+this.id++;return t.id=this.remove(e,!0),t.name=e,e}addToWorld(t,e=-1){this.Utils.add(t),-1!==e?this.list[e]=t:this.list.push(t)}remove(t,e){let s=this.byName(t);return s?this.clear(s,e):-1}clear(t,e){let s=this.list.indexOf(t);return-1===s||e?this.list[s]=null:this.list.splice(s,1),this.dispose(t),s}dispose(t){null!==t&&this.Utils.remove(t)}vecZero(t,e,s){for(;s--;)t[e+s]=0}fillArray(t,e,s,i){for(s=s||0,i=i??t.length;i--;)e[s+i]=t[i]}arLength(t){let e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return e<.001&&(e=0),e}multiplyScalar(t,e,s){for(s=s??t.length;s--;)t[s]*=e}divideScalar(t,e,s){this.multiplyScalar(t,1/e,s)}add(t={}){}set(t={}){}step(t,e){}}class oo extends io{constructor(){super(),this.Utils=_i,this.type="body",this.num=so[this.type],this.full=!1,this.p=new Yi,this.v=new Yi,this.q=new Xi}setFull(t){this.num=so[t?"bodyFull":"body"],this.full=t}step(t,e){let s,i,o=this.list.length;for(;o--;)s=this.list[o],i=e+o*this.num,s?(t[i]=2===s.sleepState?0:1,s.position.toArray(t,i+1),s.quaternion.toArray(t,i+4),this.full&&(this.v.copy(s.velocity),this.v.toArray(t,i+8),t[i]=s.isSleeping()?0:9.8*this.v.length())):t[i]=t[i+1]=t[i+2]=t[i+3]=t[i+4]=t[i+5]=t[i+6]=t[i+7]=0}shape(t={}){let e,s,i,o,n,r=t.type||"box",a=t.size||[1,1,1];switch(r){case"plane":e=new ue,t.quat=[-.7071067811865475,0,0,.7071067811865476];break;case"particle":e=new ce;break;case"box":e=new E(this.v.set(.5*a[0],.5*a[1],.5*a[2]));break;case"sphere":e=new le(a[0]);break;case"cone":e=new he(.001,a[0],a[1]);break;case"cylinder":e=new he(a[0],a[0],a[1]);break;case"capsule":e=new le(a[0]);break;case"convex":for(i=Math.floor(t.v.length/3),n=0,s=[];i--;)o=3*n,s.push(this.v.fromArray(t.v,o).clone()),n++;let r=[];for(i=t.index.length/3,n=0;i--;)o=3*n,r.push([t.index[o],t.index[o+1],t.index[o+2]]),n++;e=new w({vertices:s,faces:r});break;case"mesh":e=new we(t.v,t.index)}let l=!1;if(void 0!==t.friction&&.5!==t.friction&&(l=!0),void 0!==t.restitution&&0!==t.restitution&&(l=!0),l){const s=new ae;s.friction=t.friction||.5,s.restitution=t.restitution||0,e.material=s}return e.volumes=e.volume(),e}add(t={}){let e,s=this.setName(t),i=0;const o=[];switch(t.type){case"null":e=new ce,e.localPos=(new Yi).fromArray(t.localPos||[0,0,0]),e.localQuat=(new Xi).fromArray(t.localQuat||[0,0,0,1]),o.push(e);break;case"compound":let s;for(var n=0;n<t.shapes.length;n++)s=t.shapes[n],void 0!==t.density&&(s.density=t.density),void 0!==t.friction&&(s.friction=t.friction),void 0!==t.restitution&&(s.restitution=t.restitution),void 0!==t.mask&&(s.collisionMask=t.mask),void 0!==t.group&&(s.collisionGroup=t.group),void 0!==t.margin&&(s.margin=t.margin),e=this.shape(s),e.localPos=(new Yi).fromArray(s.pos||[0,0,0]),e.localQuat=(new Xi).fromArray(s.quat||[0,0,0,1]),i+=e.volumes,o.push(e);break;case"capsule":e=this.shape(t),e.localPos=(new Yi).fromArray(t.localPos||[0,0,0]),e.localPos.y+=.5*t.size[1],e.localQuat=(new Xi).fromArray(t.localQuat||[0,0,0,1]),o.push(e),e=this.shape(t),e.localPos=(new Yi).fromArray(t.localPos||[0,0,0]),e.localPos.y-=.5*t.size[1],e.localQuat=(new Xi).fromArray(t.localQuat||[0,0,0,1]),o.push(e),i+=e.volumes;break;default:e=this.shape(t),e.localPos=(new Yi).fromArray(t.localPos||[0,0,0]),e.localQuat=(new Xi).fromArray(t.localQuat||[0,0,0,1]),i+=e.volumes,o.push(e)}let r={mass:(t.density||0)*i},a=new N(r);for(let t in o)a.addShape(o[t],o[t].localPos,o[t].localQuat);a.name=s,a.types=this.type,a.first=!0,this.set(t,a),this.addToWorld(a,t.id)}set(t={},e=null){null===e&&(e=this.byName(t.name)),null!==e&&(t.pos&&e.position.fromArray(t.pos),t.quat&&e.quaternion.fromArray(t.quat),t.sleep&&e.sleep(),(t.activate||t.wake)&&e.wakeUp(),void 0!==t.neverSleep&&(e.allowSleep=!t.neverSleep,t.neverSleep&&e.wakeUp()),t.worldForce&&e.applyForce(this.v.fromArray(t.worldForce),this.v.fromArray(t.worldForce,3)),t.force&&e.applyLocalForce(this.v.fromArray(t.force)),t.torque&&e.applyTorque(this.v.fromArray(t.torque)),t.impulse&&e.applyImpulse(this.v.fromArray(t.impulse),this.v.fromArray(t.impulse,3)),t.localImpulse&&e.applyLocalImpulse(this.v.fromArray(t.localImpulse),this.v.fromArray(t.localImpulse,3)),t.angularFactor&&e.angularFactor.fromArray(t.angularFactor),t.linearFactor&&e.linearFactor.fromArray(t.linearFactor),t.linearVelocity&&e.velocity.fromArray(t.linearVelocity),t.angularVelocity&&e.angularVelocity.fromArray(t.angularVelocity),t.damping&&(e.linearDamping=t.damping[0],e.angularDamping=t.damping[1]),t.reset&&(e.velocity.set(0,0,0),e.angularVelocity.set(0,0,0)))}}class no extends io{constructor(){super(),this.Utils=_i,this.type="joint",this.v=new Yi,this.q=new Xi,this.v1=new Yi,this.v2=new Yi}step(t,e){}add(t={}){let e,s=this.setName(t),i=this.byName(t.b1),o=this.byName(t.b2),n=t.mode||"revolute";switch(n){case"fixe":e=new ee(i,this.v1,o,this.v2);break;case"hinge":case"revolute":break;case"slider":case"prismatic":case"distance":e=new se(i,o,distance)}e.name=s,e.types=this.type,e.mode=n,e.visible=void 0===t.visible||t.visible,this.set(t,e),this.addToWorld(e)}set(t={},e=null){null===e&&(e=this.byName(t.name))}}self.onmessage=function(t){Po.message(t)};let ro,ao,lo,ho,co,uo,po,yo=!1,vo=!1,mo=!1;const wo="undefined"==typeof performance?Date:performance,fo={tmp:0,n:0,dt:0,fps:0};let go,bo,xo=1/60,Eo=10,zo=!0,Ao=0,Bo=0,So=!0,Mo=null,Fo=null,Co=null,qo=[],No=[],Ro=[];class Po{static test(){}static message(t){let e=t.data;e.Ar&&(ro=e.Ar),e.flow&&(Gi.flow=e.flow),Po[e.m]||console.log(e.m),e.m&&Po[e.m](e.o)}static post(t,e){ho?self.postMessage(t,e):lo({data:t})}static init(t={}){ho=!0,mo=t.isBuffer||!1,void 0!==t.fps&&(xo=1/t.fps),void 0!==t.substep&&(Eo=t.substep),t.message&&(lo=t.message,ho=!1,mo=!1),Po.initItems(),Po.post({m:"ready",o:{}})}static initItems(){co=new oo,uo=new Io,po=new no}static set(t={}){ao=t.ArPos||function(t,e=!1){let s={},i={body:$i*(e?so.bodyFull:so.body),joint:Qi*so.joint,ray:Ki*so.ray,contact:Zi*so.contact,character:Ji*so.character};"PHYSX"!==t&&"AMMO"!==t||(i.vehicle=to*so.vehicle),"PHYSX"===t&&(i.solver=eo*so.solver),"HAVOK"!==t&&"RAPIER"!==t||(so.joint=0);let o=0;for(let t in i)s[t]=o,o+=i[t];return s.total=o,s}("CANNON",t.full),co.setFull(t.full),vo=t.outsideStep||!1,yo=t.isTimeout||!1,xo=1/(t.fps||60),Eo=t.substep||1,t.broadphase,zo=void 0===t.fixe||t.fixe,Co=(new Yi).fromArray(t.gravity||[0,-9.80665,0]),null===Gi.world&&Po.start()}static start(){null===Gi.world&&(ro=new Float32Array(ao.total),Po.initWorld()),So=!1,go=!1,Bo=0,bo=0,vo||(yo?Fo=setTimeout(Po.step,0):Mo=setInterval(Po.step,1e3*xo))}static initWorld(){const t=new Fi;t.gravity=Co,t.allowSleep=!0,t.defaultContactMaterial.friction=.5,t.defaultContactMaterial.restitution=0,t.defaultContactMaterial.contactEquationStiffness=1e7,t.defaultContactMaterial.contactEquationRelaxation=3,Gi.world=t}static add(t={}){switch(t.type||"box"){case"joint":po.add(t);break;default:t.density||t.kinematic?co.add(t):uo.add(t)}}static remove(t={}){let e=this.byName(t.name);if(null!==e)switch(e.types){case"joint":e=po.clear(e);break;case"solid":e=uo.clear(e);break;case"body":e=co.clear(e)}}static change(t={}){let e=this.byName(t.name);if(null!==e)switch(e.types){case"joint":e=po.set(t,e);break;case"solid":e=uo.set(t,e);break;case"body":e=co.set(t,e)}}static dispatch(){for(No=Gi.flow.remove,qo=Gi.flow.add,Ro=Gi.flow.tmp;No.length>0;)this.remove(No.shift());for(;qo.length>0;)this.add(qo.shift());for(;Ro.length>0;)this.change(Ro.shift());Gi.flow={key:[],add:[],remove:[],tmp:[]}}static poststep(){if(!So&&(bo=1,this.dispatch(),!vo&&yo)){let t=1e3*xo-(wo.now()-Ao);t<0&&(t=0),Fo=setTimeout(Po.step,t)}}static step(t){if(go&&Po.endReset(),So||bo>=2)return;bo=2,Ao=t||wo.now(),Gi.delta=.001*(Ao-Bo),Bo=Ao;let e=Eo;for(;e--;)zo?Gi.world.step(xo/Eo):Gi.world.step(Gi.delta/Eo);Po.stepItems(),Ao-1e3>fo.tmp&&(fo.tmp=Ao,Gi.reflow.stat.fps=fo.n,fo.n=0),fo.n++,Gi.reflow.stat.delta=Gi.delta,mo?Po.post({m:"step",reflow:Gi.reflow,Ar:ro},[ro.buffer]):Po.post({m:"step",reflow:Gi.reflow,Ar:ro})}static stepItems(){co.step(ro,ao.body),po.step(ro,ao.joint)}static byName(t){return _i.byName(t)}static reset(){go=!0}static endReset(){Po.stop(),co.reset(),uo.reset(),po.reset(),Gi.world=null,_i.clear(),Po.post({m:"resetCallback",o:{}})}static stop(){So=!0,vo||(Fo&&clearTimeout(Fo),Mo&&clearInterval(Mo),Mo=null,Fo=null)}static pause(t){let e=t.value;e!==So&&(e?this.stop():this.start())}}class Io extends oo{constructor(){super(),this.type="solid"}step(t,e){}}export{Po as engine};
