!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).CANNON3D={})}(this,(function(t){"use strict";var e=function(t){var e,i=Object.prototype,s=i.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},n=o.iterator||"@@iterator",r=o.asyncIterator||"@@asyncIterator",a=o.toStringTag||"@@toStringTag";function l(t,e,i){return Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{l({},"")}catch(t){l=function(t,e,i){return t[e]=i}}function h(t,e,i,s){var o=e&&e.prototype instanceof f?e:f,n=Object.create(o.prototype),r=new M(s||[]);return n._invoke=function(t,e,i){var s=u;return function(o,n){if(s===p)throw new Error("Generator is already running");if(s===y){if("throw"===o)throw n;return N()}for(i.method=o,i.arg=n;;){var r=i.delegate;if(r){var a=B(r,i);if(a){if(a===v)continue;return a}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if(s===u)throw s=y,i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);s=p;var l=c(t,e,i);if("normal"===l.type){if(s=i.done?y:d,l.arg===v)continue;return{value:l.arg,done:i.done}}"throw"===l.type&&(s=y,i.method="throw",i.arg=l.arg)}}}(t,i,r),n}function c(t,e,i){try{return{type:"normal",arg:t.call(e,i)}}catch(t){return{type:"throw",arg:t}}}t.wrap=h;var u="suspendedStart",d="suspendedYield",p="executing",y="completed",v={};function f(){}function m(){}function w(){}var g={};g[n]=function(){return this};var b=Object.getPrototypeOf,x=b&&b(b(C([])));x&&x!==i&&s.call(x,n)&&(g=x);var E=w.prototype=f.prototype=Object.create(g);function z(t){["next","throw","return"].forEach((function(e){l(t,e,(function(t){return this._invoke(e,t)}))}))}function A(t,e){function i(o,n,r,a){var l=c(t[o],t,n);if("throw"!==l.type){var h=l.arg,u=h.value;return u&&"object"==typeof u&&s.call(u,"__await")?e.resolve(u.__await).then((function(t){i("next",t,r,a)}),(function(t){i("throw",t,r,a)})):e.resolve(u).then((function(t){h.value=t,r(h)}),(function(t){return i("throw",t,r,a)}))}a(l.arg)}var o;this._invoke=function(t,s){function n(){return new e((function(e,o){i(t,s,e,o)}))}return o=o?o.then(n,n):n()}}function B(t,i){var s=t.iterator[i.method];if(s===e){if(i.delegate=null,"throw"===i.method){if(t.iterator.return&&(i.method="return",i.arg=e,B(t,i),"throw"===i.method))return v;i.method="throw",i.arg=new TypeError("The iterator does not provide a 'throw' method")}return v}var o=c(s,t.iterator,i.arg);if("throw"===o.type)return i.method="throw",i.arg=o.arg,i.delegate=null,v;var n=o.arg;return n?n.done?(i[t.resultName]=n.value,i.next=t.nextLoc,"return"!==i.method&&(i.method="next",i.arg=e),i.delegate=null,v):n:(i.method="throw",i.arg=new TypeError("iterator result is not an object"),i.delegate=null,v)}function S(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function F(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function M(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(S,this),this.reset(!0)}function C(t){if(t){var i=t[n];if(i)return i.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,r=function i(){for(;++o<t.length;)if(s.call(t,o))return i.value=t[o],i.done=!1,i;return i.value=e,i.done=!0,i};return r.next=r}}return{next:N}}function N(){return{value:e,done:!0}}return m.prototype=E.constructor=w,w.constructor=m,m.displayName=l(w,a,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===m||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,w):(t.__proto__=w,l(t,a,"GeneratorFunction")),t.prototype=Object.create(E),t},t.awrap=function(t){return{__await:t}},z(A.prototype),A.prototype[r]=function(){return this},t.AsyncIterator=A,t.async=function(e,i,s,o,n){void 0===n&&(n=Promise);var r=new A(h(e,i,s,o),n);return t.isGeneratorFunction(i)?r:r.next().then((function(t){return t.done?t.value:r.next()}))},z(E),l(E,a,"Generator"),E[n]=function(){return this},E.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var i in t)e.push(i);return e.reverse(),function i(){for(;e.length;){var s=e.pop();if(s in t)return i.value=s,i.done=!1,i}return i.done=!0,i}},t.values=C,M.prototype={constructor:M,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(F),!t)for(var i in this)"t"===i.charAt(0)&&s.call(this,i)&&!isNaN(+i.slice(1))&&(this[i]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var i=this;function o(s,o){return a.type="throw",a.arg=t,i.next=s,o&&(i.method="next",i.arg=e),!!o}for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n],a=r.completion;if("root"===r.tryLoc)return o("end");if(r.tryLoc<=this.prev){var l=s.call(r,"catchLoc"),h=s.call(r,"finallyLoc");if(l&&h){if(this.prev<r.catchLoc)return o(r.catchLoc,!0);if(this.prev<r.finallyLoc)return o(r.finallyLoc)}else if(l){if(this.prev<r.catchLoc)return o(r.catchLoc,!0)}else{if(!h)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return o(r.finallyLoc)}}}},abrupt:function(t,e){for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i];if(o.tryLoc<=this.prev&&s.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var n=o;break}}n&&("break"===t||"continue"===t)&&n.tryLoc<=e&&e<=n.finallyLoc&&(n=null);var r=n?n.completion:{};return r.type=t,r.arg=e,n?(this.method="next",this.next=n.finallyLoc,v):this.complete(r)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),v},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.finallyLoc===t)return this.complete(i.completion,i.afterLoc),F(i),v}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.tryLoc===t){var s=i.completion;if("throw"===s.type){var o=s.arg;F(i)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,i,s){return this.delegate={iterator:C(t),resultName:i,nextLoc:s},"next"===this.method&&(this.arg=e),v}},t}("object"==typeof module?module.exports:{});try{regeneratorRuntime=e}catch(t){Function("r","regeneratorRuntime = r")(e)}class i{constructor(t){void 0===t&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){void 0===t&&(t=new o);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){void 0===e&&(e=new o);const i=this.elements,s=t.x,n=t.y,r=t.z;return e.x=i[0]*s+i[1]*n+i[2]*r,e.y=i[3]*s+i[4]*n+i[5]*r,e.z=i[6]*s+i[7]*n+i[8]*r,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){void 0===e&&(e=new i);const s=this.elements,o=t.elements,n=e.elements,r=s[0],a=s[1],l=s[2],h=s[3],c=s[4],u=s[5],d=s[6],p=s[7],y=s[8],v=o[0],f=o[1],m=o[2],w=o[3],g=o[4],b=o[5],x=o[6],E=o[7],z=o[8];return n[0]=r*v+a*w+l*x,n[1]=r*f+a*g+l*E,n[2]=r*m+a*b+l*z,n[3]=h*v+c*w+u*x,n[4]=h*f+c*g+u*E,n[5]=h*m+c*b+u*z,n[6]=d*v+p*w+y*x,n[7]=d*f+p*g+y*E,n[8]=d*m+p*b+y*z,e}scale(t,e){void 0===e&&(e=new i);const s=this.elements,o=e.elements;for(let e=0;3!==e;e++)o[3*e+0]=t.x*s[3*e+0],o[3*e+1]=t.y*s[3*e+1],o[3*e+2]=t.z*s[3*e+2];return e}solve(t,e){void 0===e&&(e=new o);const i=[];let s,n;for(s=0;s<12;s++)i.push(0);for(s=0;s<3;s++)for(n=0;n<3;n++)i[s+4*n]=this.elements[s+3*n];i[3]=t.x,i[7]=t.y,i[11]=t.z;let r=3;const a=r;let l;let h;do{if(s=a-r,0===i[s+4*s])for(n=s+1;n<a;n++)if(0!==i[s+4*n]){l=4;do{h=4-l,i[h+4*s]+=i[h+4*n]}while(--l);break}if(0!==i[s+4*s])for(n=s+1;n<a;n++){const t=i[s+4*n]/i[s+4*s];l=4;do{h=4-l,i[h+4*n]=h<=s?0:i[h+4*n]-i[h+4*s]*t}while(--l)}}while(--r);if(e.z=i[11]/i[10],e.y=(i[7]-i[6]*e.z)/i[5],e.x=(i[3]-i[2]*e.z-i[1]*e.y)/i[0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,i){if(void 0===i)return this.elements[e+3*t];this.elements[e+3*t]=i}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";for(let e=0;e<9;e++)t+=this.elements[e]+",";return t}reverse(t){void 0===t&&(t=new i);const e=s;let o,n;for(o=0;o<3;o++)for(n=0;n<3;n++)e[o+6*n]=this.elements[o+3*n];e[3]=1,e[9]=0,e[15]=0,e[4]=0,e[10]=1,e[16]=0,e[5]=0,e[11]=0,e[17]=1;let r=3;const a=r;let l;let h;do{if(o=a-r,0===e[o+6*o])for(n=o+1;n<a;n++)if(0!==e[o+6*n]){l=6;do{h=6-l,e[h+6*o]+=e[h+6*n]}while(--l);break}if(0!==e[o+6*o])for(n=o+1;n<a;n++){const t=e[o+6*n]/e[o+6*o];l=6;do{h=6-l,e[h+6*n]=h<=o?0:e[h+6*n]-e[h+6*o]*t}while(--l)}}while(--r);o=2;do{n=o-1;do{const t=e[o+6*n]/e[o+6*o];l=6;do{h=6-l,e[h+6*n]=e[h+6*n]-e[h+6*o]*t}while(--l)}while(n--)}while(--o);o=2;do{const t=1/e[o+6*o];l=6;do{h=6-l,e[h+6*o]=e[h+6*o]*t}while(--l)}while(o--);o=2;do{n=2;do{if(h=e[3+n+6*o],isNaN(h)||h===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(o,n,h)}while(n--)}while(o--);return t}setRotationFromQuaternion(t){const e=t.x,i=t.y,s=t.z,o=t.w,n=e+e,r=i+i,a=s+s,l=e*n,h=e*r,c=e*a,u=i*r,d=i*a,p=s*a,y=o*n,v=o*r,f=o*a,m=this.elements;return m[0]=1-(u+p),m[1]=h-f,m[2]=c+v,m[3]=h+f,m[4]=1-(l+p),m[5]=d-y,m[6]=c-v,m[7]=d+y,m[8]=1-(l+u),this}transpose(t){void 0===t&&(t=new i);const e=this.elements,s=t.elements;let o;return s[0]=e[0],s[4]=e[4],s[8]=e[8],o=e[1],s[1]=e[3],s[3]=o,o=e[2],s[2]=e[6],s[6]=o,o=e[5],s[5]=e[7],s[7]=o,t}}const s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class o{constructor(t,e,i){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),this.x=t,this.y=e,this.z=i}cross(t,e){void 0===e&&(e=new o);const i=t.x,s=t.y,n=t.z,r=this.x,a=this.y,l=this.z;return e.x=a*n-l*s,e.y=l*i-r*n,e.z=r*s-a*i,e}set(t,e,i){return this.x=t,this.y=e,this.z=i,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(!e)return new o(this.x+t.x,this.y+t.y,this.z+t.z);e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z}vsub(t,e){if(!e)return new o(this.x-t.x,this.y-t.y,this.z-t.z);e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z}crossmat(){return new i([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,i=this.z,s=Math.sqrt(t*t+e*e+i*i);if(s>0){const t=1/s;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return s}unit(t){void 0===t&&(t=new o);const e=this.x,i=this.y,s=this.z;let n=Math.sqrt(e*e+i*i+s*s);return n>0?(n=1/n,t.x=e*n,t.y=i*n,t.z=s*n):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,i=this.z;return Math.sqrt(t*t+e*e+i*i)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,i=this.y,s=this.z,o=t.x,n=t.y,r=t.z;return Math.sqrt((o-e)*(o-e)+(n-i)*(n-i)+(r-s)*(r-s))}distanceSquared(t){const e=this.x,i=this.y,s=this.z,o=t.x,n=t.y,r=t.z;return(o-e)*(o-e)+(n-i)*(n-i)+(r-s)*(r-s)}scale(t,e){void 0===e&&(e=new o);const i=this.x,s=this.y,n=this.z;return e.x=t*i,e.y=t*s,e.z=t*n,e}vmul(t,e){return void 0===e&&(e=new o),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,i){return void 0===i&&(i=new o),i.x=this.x+t*e.x,i.y=this.y+t*e.y,i.z=this.z+t*e.z,i}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return 0===this.x&&0===this.y&&0===this.z}negate(t){return void 0===t&&(t=new o),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const i=this.length();if(i>0){const s=n,o=1/i;s.set(this.x*o,this.y*o,this.z*o);const a=r;Math.abs(s.x)<.9?(a.set(1,0,0),s.cross(a,t)):(a.set(0,1,0),s.cross(a,t)),s.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,i){const s=this.x,o=this.y,n=this.z;i.x=s+(t.x-s)*e,i.y=o+(t.y-o)*e,i.z=n+(t.z-n)*e}almostEquals(t,e){return void 0===e&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return void 0===t&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(a),a.almostEquals(t,e)}clone(){return new o(this.x,this.y,this.z)}}o.ZERO=new o(0,0,0),o.UNIT_X=new o(1,0,0),o.UNIT_Y=new o(0,1,0),o.UNIT_Z=new o(0,0,1);const n=new o,r=new o,a=new o;class l{constructor(t){void 0===t&&(t={}),this.lowerBound=new o,this.upperBound=new o,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,i,s){const o=this.lowerBound,n=this.upperBound,r=i;o.copy(t[0]),r&&r.vmult(o,o),n.copy(o);for(let e=1;e<t.length;e++){let i=t[e];r&&(r.vmult(i,h),i=h),i.x>n.x&&(n.x=i.x),i.x<o.x&&(o.x=i.x),i.y>n.y&&(n.y=i.y),i.y<o.y&&(o.y=i.y),i.z>n.z&&(n.z=i.z),i.z<o.z&&(o.z=i.z)}return e&&(e.vadd(o,o),e.vadd(n,n)),s&&(o.x-=s,o.y-=s,o.z-=s,n.x+=s,n.y+=s,n.z+=s),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return(new l).copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,i=this.upperBound,s=t.lowerBound,o=t.upperBound,n=s.x<=i.x&&i.x<=o.x||e.x<=o.x&&o.x<=i.x,r=s.y<=i.y&&i.y<=o.y||e.y<=o.y&&o.y<=i.y,a=s.z<=i.z&&i.z<=o.z||e.z<=o.z&&o.z<=i.z;return n&&r&&a}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,i=this.upperBound,s=t.lowerBound,o=t.upperBound;return e.x<=s.x&&i.x>=o.x&&e.y<=s.y&&i.y>=o.y&&e.z<=s.z&&i.z>=o.z}getCorners(t,e,i,s,o,n,r,a){const l=this.lowerBound,h=this.upperBound;t.copy(l),e.set(h.x,l.y,l.z),i.set(h.x,h.y,l.z),s.set(l.x,h.y,h.z),o.set(h.x,l.y,h.z),n.set(l.x,h.y,l.z),r.set(l.x,l.y,h.z),a.copy(h)}toLocalFrame(t,e){const i=c,s=i[0],o=i[1],n=i[2],r=i[3],a=i[4],l=i[5],h=i[6],u=i[7];this.getCorners(s,o,n,r,a,l,h,u);for(let e=0;8!==e;e++){const s=i[e];t.pointToLocal(s,s)}return e.setFromPoints(i)}toWorldFrame(t,e){const i=c,s=i[0],o=i[1],n=i[2],r=i[3],a=i[4],l=i[5],h=i[6],u=i[7];this.getCorners(s,o,n,r,a,l,h,u);for(let e=0;8!==e;e++){const s=i[e];t.pointToWorld(s,s)}return e.setFromPoints(i)}overlapsRay(t){const{direction:e,from:i}=t,s=1/e.x,o=1/e.y,n=1/e.z,r=(this.lowerBound.x-i.x)*s,a=(this.upperBound.x-i.x)*s,l=(this.lowerBound.y-i.y)*o,h=(this.upperBound.y-i.y)*o,c=(this.lowerBound.z-i.z)*n,u=(this.upperBound.z-i.z)*n,d=Math.max(Math.max(Math.min(r,a),Math.min(l,h)),Math.min(c,u)),p=Math.min(Math.min(Math.max(r,a),Math.max(l,h)),Math.max(c,u));return!(p<0)&&!(d>p)}}const h=new o,c=[new o,new o,new o,new o,new o,new o,new o,new o];class u{constructor(){this.matrix=[]}get(t,e){let{index:i}=t,{index:s}=e;if(s>i){const t=s;s=i,i=t}return this.matrix[(i*(i+1)>>1)+s-1]}set(t,e,i){let{index:s}=t,{index:o}=e;if(o>s){const t=o;o=s,s=t}this.matrix[(s*(s+1)>>1)+o-1]=i?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class d{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;return void 0===i[t]&&(i[t]=[]),i[t].includes(e)||i[t].push(e),this}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return!(void 0===i[t]||!i[t].includes(e))}hasAnyEventListener(t){if(void 0===this._listeners)return!1;return void 0!==this._listeners[t]}removeEventListener(t,e){if(void 0===this._listeners)return this;const i=this._listeners;if(void 0===i[t])return this;const s=i[t].indexOf(e);return-1!==s&&i[t].splice(s,1),this}dispatchEvent(t){if(void 0===this._listeners)return this;const e=this._listeners[t.type];if(void 0!==e){t.target=this;for(let i=0,s=e.length;i<s;i++)e[i].call(this,t)}return this}}class p{constructor(t,e,i,s){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),void 0===s&&(s=1),this.x=t,this.y=e,this.z=i,this.w=s}set(t,e,i,s){return this.x=t,this.y=e,this.z=i,this.w=s,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const i=Math.sin(.5*e);return this.x=t.x*i,this.y=t.y*i,this.z=t.z*i,this.w=Math.cos(.5*e),this}toAxisAngle(t){void 0===t&&(t=new o),this.normalize();const e=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/i,t.y=this.y/i,t.z=this.z/i),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const e=y,i=v;t.tangents(e,i),this.setFromAxisAngle(e,Math.PI)}else{const i=t.cross(e);this.x=i.x,this.y=i.y,this.z=i.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){void 0===e&&(e=new p);const i=this.x,s=this.y,o=this.z,n=this.w,r=t.x,a=t.y,l=t.z,h=t.w;return e.x=i*h+n*r+s*l-o*a,e.y=s*h+n*a+o*r-i*l,e.z=o*h+n*l+i*a-s*r,e.w=n*h-i*r-s*a-o*l,e}inverse(t){void 0===t&&(t=new p);const e=this.x,i=this.y,s=this.z,o=this.w;this.conjugate(t);const n=1/(e*e+i*i+s*s+o*o);return t.x*=n,t.y*=n,t.z*=n,t.w*=n,t}conjugate(t){return void 0===t&&(t=new p),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){void 0===e&&(e=new o);const i=t.x,s=t.y,n=t.z,r=this.x,a=this.y,l=this.z,h=this.w,c=h*i+a*n-l*s,u=h*s+l*i-r*n,d=h*n+r*s-a*i,p=-r*i-a*s-l*n;return e.x=c*h+p*-r+u*-l-d*-a,e.y=u*h+p*-a+d*-r-c*-l,e.z=d*h+p*-l+c*-a-u*-r,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){let i,s,o;void 0===e&&(e="YZX");const n=this.x,r=this.y,a=this.z,l=this.w;switch(e){case"YZX":const t=n*r+a*l;if(t>.499&&(i=2*Math.atan2(n,l),s=Math.PI/2,o=0),t<-.499&&(i=-2*Math.atan2(n,l),s=-Math.PI/2,o=0),void 0===i){const e=n*n,h=r*r,c=a*a;i=Math.atan2(2*r*l-2*n*a,1-2*h-2*c),s=Math.asin(2*t),o=Math.atan2(2*n*l-2*r*a,1-2*e-2*c)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=i,t.z=s,t.x=o}setFromEuler(t,e,i,s){void 0===s&&(s="XYZ");const o=Math.cos(t/2),n=Math.cos(e/2),r=Math.cos(i/2),a=Math.sin(t/2),l=Math.sin(e/2),h=Math.sin(i/2);return"XYZ"===s?(this.x=a*n*r+o*l*h,this.y=o*l*r-a*n*h,this.z=o*n*h+a*l*r,this.w=o*n*r-a*l*h):"YXZ"===s?(this.x=a*n*r+o*l*h,this.y=o*l*r-a*n*h,this.z=o*n*h-a*l*r,this.w=o*n*r+a*l*h):"ZXY"===s?(this.x=a*n*r-o*l*h,this.y=o*l*r+a*n*h,this.z=o*n*h+a*l*r,this.w=o*n*r-a*l*h):"ZYX"===s?(this.x=a*n*r-o*l*h,this.y=o*l*r+a*n*h,this.z=o*n*h-a*l*r,this.w=o*n*r+a*l*h):"YZX"===s?(this.x=a*n*r+o*l*h,this.y=o*l*r+a*n*h,this.z=o*n*h-a*l*r,this.w=o*n*r-a*l*h):"XZY"===s&&(this.x=a*n*r-o*l*h,this.y=o*l*r-a*n*h,this.z=o*n*h+a*l*r,this.w=o*n*r+a*l*h),this}clone(){return new p(this.x,this.y,this.z,this.w)}slerp(t,e,i){void 0===i&&(i=new p);const s=this.x,o=this.y,n=this.z,r=this.w;let a,l,h,c,u,d=t.x,y=t.y,v=t.z,f=t.w;return l=s*d+o*y+n*v+r*f,l<0&&(l=-l,d=-d,y=-y,v=-v,f=-f),1-l>1e-6?(a=Math.acos(l),h=Math.sin(a),c=Math.sin((1-e)*a)/h,u=Math.sin(e*a)/h):(c=1-e,u=e),i.x=c*s+u*d,i.y=c*o+u*y,i.z=c*n+u*v,i.w=c*r+u*f,i}integrate(t,e,i,s){void 0===s&&(s=new p);const o=t.x*i.x,n=t.y*i.y,r=t.z*i.z,a=this.x,l=this.y,h=this.z,c=this.w,u=.5*e;return s.x+=u*(o*c+n*h-r*l),s.y+=u*(n*c+r*a-o*h),s.z+=u*(r*c+o*l-n*a),s.w+=u*(-o*a-n*l-r*h),s}}const y=new o,v=new o;class f{constructor(t){void 0===t&&(t={}),this.id=f.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=!t.collisionResponse||t.collisionResponse,this.collisionFilterGroup=void 0!==t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask=void 0!==t.collisionFilterMask?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,i,s){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}f.idCounter=0,f.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class m{constructor(t){void 0===t&&(t={}),this.position=new o,this.quaternion=new p,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return m.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return m.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return void 0===e&&(e=new o),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,i,s){return void 0===s&&(s=new o),i.vsub(t,s),e.conjugate(w),w.vmult(s,s),s}static pointToWorldFrame(t,e,i,s){return void 0===s&&(s=new o),e.vmult(i,s),s.vadd(t,s),s}static vectorToWorldFrame(t,e,i){return void 0===i&&(i=new o),t.vmult(e,i),i}static vectorToLocalFrame(t,e,i,s){return void 0===s&&(s=new o),e.w*=-1,e.vmult(i,s),e.w*=-1,s}}const w=new p;class g extends f{constructor(t){void 0===t&&(t={});const{vertices:e=[],faces:i=[],normals:s=[],axes:o,boundingSphereRadius:n}=t;super({type:f.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=i,this.faceNormals=s,0===this.faceNormals.length&&this.computeNormals(),n?this.boundingSphereRadius=n:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=o?o.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,i=this.uniqueEdges;i.length=0;const s=new o;for(let o=0;o!==t.length;o++){const n=t[o],r=n.length;for(let t=0;t!==r;t++){const o=(t+1)%r;e[n[t]].vsub(e[n[o]],s),s.normalize();let a=!1;for(let t=0;t!==i.length;t++)if(i[t].almostEquals(s)||i[t].almostEquals(s)){a=!0;break}a||i.push(s.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let e=0;e<this.faces[t].length;e++)if(!this.vertices[this.faces[t][e]])throw new Error(`Vertex ${this.faces[t][e]} not found!`);const e=this.faceNormals[t]||new o;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const i=this.vertices[this.faces[t][0]];if(e.dot(i)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let e=0;e<this.faces[t].length;e++)console.warn(`.vertices[${this.faces[t][e]}] = Vec3(${this.vertices[this.faces[t][e]].toString()})`)}}}getFaceNormal(t,e){const i=this.faces[t],s=this.vertices[i[0]],o=this.vertices[i[1]],n=this.vertices[i[2]];g.computeNormal(s,o,n,e)}static computeNormal(t,e,i,s){const n=new o,r=new o;e.vsub(t,r),i.vsub(e,n),n.cross(r,s),s.isZero()||s.normalize()}clipAgainstHull(t,e,i,s,n,r,a,l,h){const c=new o;let u=-1,d=-Number.MAX_VALUE;for(let t=0;t<i.faces.length;t++){c.copy(i.faceNormals[t]),n.vmult(c,c);const e=c.dot(r);e>d&&(d=e,u=t)}const p=[];for(let t=0;t<i.faces[u].length;t++){const e=i.vertices[i.faces[u][t]],r=new o;r.copy(e),n.vmult(r,r),s.vadd(r,r),p.push(r)}u>=0&&this.clipFaceAgainstHull(r,t,e,p,a,l,h)}findSeparatingAxis(t,e,i,s,n,r,a,l){const h=new o,c=new o,u=new o,d=new o,p=new o,y=new o;let v=Number.MAX_VALUE;const f=this;if(f.uniqueAxes)for(let o=0;o!==f.uniqueAxes.length;o++){i.vmult(f.uniqueAxes[o],h);const a=f.testSepAxis(h,t,e,i,s,n);if(!1===a)return!1;a<v&&(v=a,r.copy(h))}else{const o=a?a.length:f.faces.length;for(let l=0;l<o;l++){const o=a?a[l]:l;h.copy(f.faceNormals[o]),i.vmult(h,h);const c=f.testSepAxis(h,t,e,i,s,n);if(!1===c)return!1;c<v&&(v=c,r.copy(h))}}if(t.uniqueAxes)for(let o=0;o!==t.uniqueAxes.length;o++){n.vmult(t.uniqueAxes[o],c);const a=f.testSepAxis(c,t,e,i,s,n);if(!1===a)return!1;a<v&&(v=a,r.copy(c))}else{const o=l?l.length:t.faces.length;for(let a=0;a<o;a++){const o=l?l[a]:a;c.copy(t.faceNormals[o]),n.vmult(c,c);const h=f.testSepAxis(c,t,e,i,s,n);if(!1===h)return!1;h<v&&(v=h,r.copy(c))}}for(let o=0;o!==f.uniqueEdges.length;o++){i.vmult(f.uniqueEdges[o],d);for(let o=0;o!==t.uniqueEdges.length;o++)if(n.vmult(t.uniqueEdges[o],p),d.cross(p,y),!y.almostZero()){y.normalize();const o=f.testSepAxis(y,t,e,i,s,n);if(!1===o)return!1;o<v&&(v=o,r.copy(y))}}return s.vsub(e,u),u.dot(r)>0&&r.negate(r),!0}testSepAxis(t,e,i,s,o,n){g.project(this,t,i,s,b),g.project(e,t,o,n,x);const r=b[0],a=b[1],l=x[0],h=x[1];if(r<h||l<a)return!1;const c=r-h,u=l-a;return c<u?c:u}calculateLocalInertia(t,e){const i=new o,s=new o;this.computeLocalAABB(s,i);const n=i.x-s.x,r=i.y-s.y,a=i.z-s.z;e.x=1/12*t*(2*r*2*r+2*a*2*a),e.y=1/12*t*(2*n*2*n+2*a*2*a),e.z=1/12*t*(2*r*2*r+2*n*2*n)}getPlaneConstantOfFace(t){const e=this.faces[t],i=this.faceNormals[t],s=this.vertices[e[0]];return-i.dot(s)}clipFaceAgainstHull(t,e,i,s,n,r,a){const l=new o,h=new o,c=new o,u=new o,d=new o,p=new o,y=new o,v=new o,f=this,m=s,w=[];let g=-1,b=Number.MAX_VALUE;for(let e=0;e<f.faces.length;e++){l.copy(f.faceNormals[e]),i.vmult(l,l);const s=l.dot(t);s<b&&(b=s,g=e)}if(g<0)return;const x=f.faces[g];x.connectedFaces=[];for(let t=0;t<f.faces.length;t++)for(let e=0;e<f.faces[t].length;e++)-1!==x.indexOf(f.faces[t][e])&&t!==g&&-1===x.connectedFaces.indexOf(t)&&x.connectedFaces.push(t);const E=x.length;for(let t=0;t<E;t++){const s=f.vertices[x[t]],o=f.vertices[x[(t+1)%E]];s.vsub(o,h),c.copy(h),i.vmult(c,c),e.vadd(c,c),u.copy(this.faceNormals[g]),i.vmult(u,u),e.vadd(u,u),c.cross(u,d),d.negate(d),p.copy(s),i.vmult(p,p),e.vadd(p,p);const n=x.connectedFaces[t];y.copy(this.faceNormals[n]);const r=this.getPlaneConstantOfFace(n);v.copy(y),i.vmult(v,v);const a=r-v.dot(e);for(this.clipFaceAgainstPlane(m,w,v,a);m.length;)m.shift();for(;w.length;)m.push(w.shift())}y.copy(this.faceNormals[g]);const z=this.getPlaneConstantOfFace(g);v.copy(y),i.vmult(v,v);const A=z-v.dot(e);for(let t=0;t<m.length;t++){let e=v.dot(m[t])+A;if(e<=n&&(console.log(`clamped: depth=${e} to minDist=${n}`),e=n),e<=r){const i=m[t];if(e<=1e-6){const t={point:i,normal:v,depth:e};a.push(t)}}}}clipFaceAgainstPlane(t,e,i,s){let n,r;const a=t.length;if(a<2)return e;let l=t[t.length-1],h=t[0];n=i.dot(l)+s;for(let c=0;c<a;c++){if(h=t[c],r=i.dot(h)+s,n<0)if(r<0){const t=new o;t.copy(h),e.push(t)}else{const t=new o;l.lerp(h,n/(n-r),t),e.push(t)}else if(r<0){const t=new o;l.lerp(h,n/(n-r),t),e.push(t),e.push(h)}l=h,n=r}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new o);const i=this.vertices,s=this.worldVertices;for(let o=0;o!==this.vertices.length;o++)e.vmult(i[o],s[o]),t.vadd(s[o],s[o]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const i=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let s=0;s<this.vertices.length;s++){const o=i[s];o.x<t.x?t.x=o.x:o.x>e.x&&(e.x=o.x),o.y<t.y?t.y=o.y:o.y>e.y&&(e.y=o.y),o.z<t.z?t.z=o.z:o.z>e.z&&(e.z=o.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new o);const i=this.faceNormals,s=this.worldFaceNormals;for(let o=0;o!==e;o++)t.vmult(i[o],s[o]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let i=0;i!==e.length;i++){const s=e[i].lengthSquared();s>t&&(t=s)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,i,s){const n=this.vertices;let r,a,l,h,c,u,d=new o;for(let i=0;i<n.length;i++){d.copy(n[i]),e.vmult(d,d),t.vadd(d,d);const s=d;(void 0===r||s.x<r)&&(r=s.x),(void 0===h||s.x>h)&&(h=s.x),(void 0===a||s.y<a)&&(a=s.y),(void 0===c||s.y>c)&&(c=s.y),(void 0===l||s.z<l)&&(l=s.z),(void 0===u||s.z>u)&&(u=s.z)}i.set(r,a,l),s.set(h,c,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){void 0===t&&(t=new o);const e=this.vertices;for(let i=0;i<e.length;i++)t.vadd(e[i],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const i=this.vertices.length,s=this.vertices;if(e){for(let t=0;t<i;t++){const i=s[t];e.vmult(i,i)}for(let t=0;t<this.faceNormals.length;t++){const i=this.faceNormals[t];e.vmult(i,i)}}if(t)for(let e=0;e<i;e++){const i=s[e];i.vadd(t,i)}}pointIsInside(t){const e=this.vertices,i=this.faces,s=this.faceNormals,n=new o;this.getAveragePointLocal(n);for(let r=0;r<this.faces.length;r++){let a=s[r];const l=e[i[r][0]],h=new o;t.vsub(l,h);const c=a.dot(h),u=new o;n.vsub(l,u);const d=a.dot(u);if(c<0&&d>0||c>0&&d<0)return!1}return-1}static project(t,e,i,s,o){const n=t.vertices.length,r=E;let a=0,l=0;const h=z,c=t.vertices;h.setZero(),m.vectorToLocalFrame(i,s,e,r),m.pointToLocalFrame(i,s,h,h);const u=h.dot(r);l=a=c[0].dot(r);for(let t=1;t<n;t++){const e=c[t].dot(r);e>a&&(a=e),e<l&&(l=e)}if(l-=u,a-=u,l>a){const t=l;l=a,a=t}o[0]=a,o[1]=l}}const b=[],x=[];new o;const E=new o,z=new o;class A extends f{constructor(t){super({type:f.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,i=this.halfExtents.z,s=o,n=[new s(-t,-e,-i),new s(t,-e,-i),new s(t,e,-i),new s(-t,e,-i),new s(-t,-e,i),new s(t,-e,i),new s(t,e,i),new s(-t,e,i)],r=[new s(0,0,1),new s(0,1,0),new s(1,0,0)],a=new g({vertices:n,faces:[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],axes:r});this.convexPolyhedronRepresentation=a,a.material=this.material}calculateLocalInertia(t,e){return void 0===e&&(e=new o),A.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,i){const s=t;i.x=1/12*e*(2*s.y*2*s.y+2*s.z*2*s.z),i.y=1/12*e*(2*s.x*2*s.x+2*s.z*2*s.z),i.z=1/12*e*(2*s.y*2*s.y+2*s.x*2*s.x)}getSideNormals(t,e){const i=t,s=this.halfExtents;if(i[0].set(s.x,0,0),i[1].set(0,s.y,0),i[2].set(0,0,s.z),i[3].set(-s.x,0,0),i[4].set(0,-s.y,0),i[5].set(0,0,-s.z),void 0!==e)for(let t=0;t!==i.length;t++)e.vmult(i[t],i[t]);return i}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,i){const s=this.halfExtents,o=[[s.x,s.y,s.z],[-s.x,s.y,s.z],[-s.x,-s.y,s.z],[-s.x,-s.y,-s.z],[s.x,-s.y,-s.z],[s.x,s.y,-s.z],[-s.x,s.y,-s.z],[s.x,-s.y,s.z]];for(let s=0;s<o.length;s++)B.set(o[s][0],o[s][1],o[s][2]),e.vmult(B,B),t.vadd(B,B),i(B.x,B.y,B.z)}calculateWorldAABB(t,e,i,s){const o=this.halfExtents;S[0].set(o.x,o.y,o.z),S[1].set(-o.x,o.y,o.z),S[2].set(-o.x,-o.y,o.z),S[3].set(-o.x,-o.y,-o.z),S[4].set(o.x,-o.y,-o.z),S[5].set(o.x,o.y,-o.z),S[6].set(-o.x,o.y,-o.z),S[7].set(o.x,-o.y,o.z);const n=S[0];e.vmult(n,n),t.vadd(n,n),s.copy(n),i.copy(n);for(let o=1;o<8;o++){const n=S[o];e.vmult(n,n),t.vadd(n,n);const r=n.x,a=n.y,l=n.z;r>s.x&&(s.x=r),a>s.y&&(s.y=a),l>s.z&&(s.z=l),r<i.x&&(i.x=r),a<i.y&&(i.y=a),l<i.z&&(i.z=l)}}}const B=new o,S=[new o,new o,new o,new o,new o,new o,new o,new o],F=1,M=2,C=4,N=0,q=1,P=2;class R extends d{constructor(t){void 0===t&&(t={}),super(),this.id=R.idCounter++,this.index=-1,this.world=null,this.vlambda=new o,this.collisionFilterGroup="number"==typeof t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof t.collisionFilterMask?t.collisionFilterMask:-1,this.collisionResponse="boolean"!=typeof t.collisionResponse||t.collisionResponse,this.position=new o,this.previousPosition=new o,this.interpolatedPosition=new o,this.initPosition=new o,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new o,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new o,this.force=new o;const e="number"==typeof t.mass?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping="number"==typeof t.linearDamping?t.linearDamping:.01,this.type=e<=0?R.STATIC:R.DYNAMIC,typeof t.type==typeof R.STATIC&&(this.type=t.type),this.allowSleep=void 0===t.allowSleep||t.allowSleep,this.sleepState=R.AWAKE,this.sleepSpeedLimit=void 0!==t.sleepSpeedLimit?t.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==t.sleepTimeLimit?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new o,this.quaternion=new p,this.initQuaternion=new p,this.previousQuaternion=new p,this.interpolatedQuaternion=new p,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new o,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new o,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new o,this.invInertia=new o,this.invInertiaWorld=new i,this.invMassSolve=0,this.invInertiaSolve=new o,this.invInertiaWorldSolve=new i,this.fixedRotation=void 0!==t.fixedRotation&&t.fixedRotation,this.angularDamping=void 0!==t.angularDamping?t.angularDamping:.01,this.linearFactor=new o(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new o(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new l,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new o,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=R.AWAKE,this.wakeUpAfterNarrowphase=!1,t===R.SLEEPING&&this.dispatchEvent(R.wakeupEvent)}sleep(){this.sleepState=R.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,i=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),s=this.sleepSpeedLimit**2;e===R.AWAKE&&i<s?(this.sleepState=R.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(R.sleepyEvent)):e===R.SLEEPY&&i>s?this.wakeUp():e===R.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(R.sleepEvent))}}updateSolveMassProperties(){this.sleepState===R.SLEEPING||this.type===R.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return void 0===e&&(e=new o),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return void 0===e&&(e=new o),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return void 0===e&&(e=new o),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return void 0===e&&(e=new o),this.quaternion.vmult(t,e),e}addShape(t,e,i){const s=new o,n=new p;return e&&s.copy(e),i&&n.copy(i),this.shapes.push(t),this.shapeOffsets.push(s),this.shapeOrientations.push(n),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return-1===e?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,i=t.length;let s=0;for(let o=0;o!==i;o++){const i=t[o];i.updateBoundingSphereRadius();const n=e[o].length(),r=i.boundingSphereRadius;n+r>s&&(s=n+r)}this.boundingRadius=s}updateAABB(){const t=this.shapes,e=this.shapeOffsets,i=this.shapeOrientations,s=t.length,o=I,n=T,r=this.quaternion,a=this.aabb,l=L;for(let h=0;h!==s;h++){const s=t[h];r.vmult(e[h],o),o.vadd(this.position,o),r.mult(i[h],n),s.calculateWorldAABB(o,n,l.lowerBound,l.upperBound),0===h?a.copy(l):a.extend(l)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(e.x!==e.y||e.y!==e.z||t){const t=j,i=k;t.setRotationFromQuaternion(this.quaternion),t.transpose(i),t.scale(e,t),t.mmult(i,this.invInertiaWorld)}else;}applyForce(t,e){if(void 0===e&&(e=new o),this.type!==R.DYNAMIC)return;this.sleepState===R.SLEEPING&&this.wakeUp();const i=O;e.cross(t,i),this.force.vadd(t,this.force),this.torque.vadd(i,this.torque)}applyLocalForce(t,e){if(void 0===e&&(e=new o),this.type!==R.DYNAMIC)return;const i=V,s=W;this.vectorToWorldFrame(t,i),this.vectorToWorldFrame(e,s),this.applyForce(i,s)}applyTorque(t){this.type===R.DYNAMIC&&(this.sleepState===R.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(void 0===e&&(e=new o),this.type!==R.DYNAMIC)return;this.sleepState===R.SLEEPING&&this.wakeUp();const i=e,s=_;s.copy(t),s.scale(this.invMass,s),this.velocity.vadd(s,this.velocity);const n=D;i.cross(t,n),this.invInertiaWorld.vmult(n,n),this.angularVelocity.vadd(n,this.angularVelocity)}applyLocalImpulse(t,e){if(void 0===e&&(e=new o),this.type!==R.DYNAMIC)return;const i=H,s=G;this.vectorToWorldFrame(t,i),this.vectorToWorldFrame(e,s),this.applyImpulse(i,s)}updateMassProperties(){const t=U;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,i=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),A.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!i?1/e.x:0,e.y>0&&!i?1/e.y:0,e.z>0&&!i?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const i=new o;return t.vsub(this.position,i),this.angularVelocity.cross(i,e),this.velocity.vadd(e,e),e}integrate(t,e,i){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),this.type!==R.DYNAMIC&&this.type!==R.KINEMATIC||this.sleepState===R.SLEEPING)return;const s=this.velocity,o=this.angularVelocity,n=this.position,r=this.force,a=this.torque,l=this.quaternion,h=this.invMass,c=this.invInertiaWorld,u=this.linearFactor,d=h*t;s.x+=r.x*d*u.x,s.y+=r.y*d*u.y,s.z+=r.z*d*u.z;const p=c.elements,y=this.angularFactor,v=a.x*y.x,f=a.y*y.y,m=a.z*y.z;o.x+=t*(p[0]*v+p[1]*f+p[2]*m),o.y+=t*(p[3]*v+p[4]*f+p[5]*m),o.z+=t*(p[6]*v+p[7]*f+p[8]*m),n.x+=s.x*t,n.y+=s.y*t,n.z+=s.z*t,l.integrate(this.angularVelocity,t,this.angularFactor,l),e&&(i?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}R.idCounter=0,R.COLLIDE_EVENT_NAME="collide",R.DYNAMIC=F,R.STATIC=M,R.KINEMATIC=C,R.AWAKE=N,R.SLEEPY=q,R.SLEEPING=P,R.wakeupEvent={type:"wakeup"},R.sleepyEvent={type:"sleepy"},R.sleepEvent={type:"sleep"};const I=new o,T=new p,L=new l,j=new i,k=new i;new i;const O=new o,V=new o,W=new o,_=new o,D=new o,H=new o,G=new o,U=new o;const Y=new o;new o,new p,new o;const X={keys:[]},$=[],Q=[];new o,new o,new o;class Z extends class{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,i){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return 0!=(t.collisionFilterGroup&e.collisionFilterMask)&&0!=(e.collisionFilterGroup&t.collisionFilterMask)&&(0==(t.type&R.STATIC)&&t.sleepState!==R.SLEEPING||0==(e.type&R.STATIC)&&e.sleepState!==R.SLEEPING)}intersectionTest(t,e,i,s){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,i,s):this.doBoundingSphereBroadphase(t,e,i,s)}doBoundingSphereBroadphase(t,e,i,s){const o=Y;e.position.vsub(t.position,o);const n=(t.boundingRadius+e.boundingRadius)**2;o.lengthSquared()<n&&(i.push(t),s.push(e))}doBoundingBoxBroadphase(t,e,i,s){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(i.push(t),s.push(e))}makePairsUnique(t,e){const i=X,s=$,o=Q,n=t.length;for(let i=0;i!==n;i++)s[i]=t[i],o[i]=e[i];t.length=0,e.length=0;for(let t=0;t!==n;t++){const e=s[t].id,n=o[t].id,r=e<n?`${e},${n}`:`${n},${e}`;i[r]=t,i.keys.push(r)}for(let n=0;n!==i.keys.length;n++){const n=i.keys.pop(),r=i[n];t.push(s[r]),e.push(o[r]),delete i[n]}}setWorld(t){}static boundingSphereCheck(t,e){const i=new o;t.position.vsub(e.position,i);const s=t.shapes[0],n=e.shapes[0];return Math.pow(s.boundingSphereRadius+n.boundingSphereRadius,2)>i.lengthSquared()}aabbQuery(t,e,i){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}{constructor(){super()}collisionPairs(t,e,i){const s=t.bodies,o=s.length;let n,r;for(let t=0;t!==o;t++)for(let o=0;o!==t;o++)n=s[t],r=s[o],this.needBroadphaseCollision(n,r)&&this.intersectionTest(n,r,e,i)}aabbQuery(t,e,i){void 0===i&&(i=[]);for(let s=0;s<t.bodies.length;s++){const o=t.bodies[s];o.aabbNeedsUpdate&&o.updateAABB(),o.aabb.overlaps(e)&&i.push(o)}return i}}class K{constructor(){this.rayFromWorld=new o,this.rayToWorld=new o,this.hitNormalWorld=new o,this.hitPointWorld=new o,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,i,s,o,n,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(i),this.hitPointWorld.copy(s),this.shape=o,this.body=n,this.distance=r}}let J,tt,et,it,st,ot,nt;const rt=1,at=2,lt=4;J=f.types.SPHERE,tt=f.types.PLANE,et=f.types.BOX,it=f.types.CYLINDER,st=f.types.CONVEXPOLYHEDRON,ot=f.types.HEIGHTFIELD,nt=f.types.TRIMESH;class ht{get[J](){return this._intersectSphere}get[tt](){return this._intersectPlane}get[et](){return this._intersectBox}get[it](){return this._intersectConvex}get[st](){return this._intersectConvex}get[ot](){return this._intersectHeightfield}get[nt](){return this._intersectTrimesh}constructor(t,e){void 0===t&&(t=new o),void 0===e&&(e=new o),this.from=t.clone(),this.to=e.clone(),this.direction=new o,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=ht.ANY,this.result=new K,this.hasHit=!1,this.callback=t=>{}}intersectWorld(t,e){return this.mode=e.mode||ht.ANY,this.result=e.result||new K,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:-1,this.checkCollisionResponse=void 0===e.checkCollisionResponse||e.checkCollisionResponse,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(ct),ut.length=0,t.broadphase.aabbQuery(t,ct,ut),this.intersectBodies(ut),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const i=this.checkCollisionResponse;if(i&&!t.collisionResponse)return;if(0==(this.collisionFilterGroup&t.collisionFilterMask)||0==(t.collisionFilterGroup&this.collisionFilterMask))return;const s=yt,o=vt;for(let e=0,n=t.shapes.length;e<n;e++){const n=t.shapes[e];if((!i||n.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[e],o),t.quaternion.vmult(t.shapeOffsets[e],s),s.vadd(t.position,s),this.intersectShape(n,o,s,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let e=0,i=t.length;!this.result.shouldStop&&e<i;e++)this.intersectBody(t[e])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,i,s){if(function(t,e,i){i.vsub(t,Lt);const s=Lt.dot(e);e.scale(s,jt),jt.vadd(t,jt);return i.distanceTo(jt)}(this.from,this.direction,i)>t.boundingSphereRadius)return;const o=this[t.type];o&&o.call(this,t,e,i,s,t)}_intersectBox(t,e,i,s,o){return this._intersectConvex(t.convexPolyhedronRepresentation,e,i,s,o)}_intersectPlane(t,e,i,s,n){const r=this.from,a=this.to,l=this.direction,h=new o(0,0,1);e.vmult(h,h);const c=new o;r.vsub(i,c);const u=c.dot(h);a.vsub(i,c);if(u*c.dot(h)>0)return;if(r.distanceTo(a)<u)return;const d=h.dot(l);if(Math.abs(d)<this.precision)return;const p=new o,y=new o,v=new o;r.vsub(i,p);const f=-h.dot(p)/d;l.scale(f,y),r.vadd(y,v),this.reportIntersection(h,v,n,s,-1)}getAABB(t){const{lowerBound:e,upperBound:i}=t,s=this.to,o=this.from;e.x=Math.min(s.x,o.x),e.y=Math.min(s.y,o.y),e.z=Math.min(s.z,o.z),i.x=Math.max(s.x,o.x),i.y=Math.max(s.y,o.y),i.z=Math.max(s.z,o.z)}_intersectHeightfield(t,e,i,s,o){t.data,t.elementSize;const n=Et;n.from.copy(this.from),n.to.copy(this.to),m.pointToLocalFrame(i,e,n.from,n.from),m.pointToLocalFrame(i,e,n.to,n.to),n.updateDirection();const r=zt;let a,h,c,u;a=h=0,c=u=t.data.length-1;const d=new l;n.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,r,!0),a=Math.max(a,r[0]),h=Math.max(h,r[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,r,!0),c=Math.min(c,r[0]+1),u=Math.min(u,r[1]+1);for(let r=a;r<c;r++)for(let a=h;a<u;a++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(r,a,d),d.overlapsRay(n)){if(t.getConvexTrianglePillar(r,a,!1),m.pointToWorldFrame(i,e,t.pillarOffset,xt),this._intersectConvex(t.pillarConvex,e,xt,s,o,bt),this.result.shouldStop)return;t.getConvexTrianglePillar(r,a,!0),m.pointToWorldFrame(i,e,t.pillarOffset,xt),this._intersectConvex(t.pillarConvex,e,xt,s,o,bt)}}}_intersectSphere(t,e,i,s,o){const n=this.from,r=this.to,a=t.radius,l=(r.x-n.x)**2+(r.y-n.y)**2+(r.z-n.z)**2,h=2*((r.x-n.x)*(n.x-i.x)+(r.y-n.y)*(n.y-i.y)+(r.z-n.z)*(n.z-i.z)),c=h**2-4*l*((n.x-i.x)**2+(n.y-i.y)**2+(n.z-i.z)**2-a**2),u=At,d=Bt;if(!(c<0))if(0===c)n.lerp(r,c,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,o,s,-1);else{const t=(-h-Math.sqrt(c))/(2*l),e=(-h+Math.sqrt(c))/(2*l);if(t>=0&&t<=1&&(n.lerp(r,t,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,o,s,-1)),this.result.shouldStop)return;e>=0&&e<=1&&(n.lerp(r,e,u),u.vsub(i,d),d.normalize(),this.reportIntersection(d,u,o,s,-1))}}_intersectConvex(t,e,i,s,o,n){const r=St,a=Ft,l=n&&n.faceList||null,h=t.faces,c=t.vertices,u=t.faceNormals,d=this.direction,p=this.from,y=this.to,v=p.distanceTo(y),f=l?l.length:h.length,m=this.result;for(let t=0;!m.shouldStop&&t<f;t++){const n=l?l[t]:t,y=h[n],f=u[n],w=e,g=i;a.copy(c[y[0]]),w.vmult(a,a),a.vadd(g,a),a.vsub(p,a),w.vmult(f,r);const b=d.dot(r);if(Math.abs(b)<this.precision)continue;const x=r.dot(a)/b;if(!(x<0)){d.scale(x,ft),ft.vadd(p,ft),mt.copy(c[y[0]]),w.vmult(mt,mt),g.vadd(mt,mt);for(let t=1;!m.shouldStop&&t<y.length-1;t++){wt.copy(c[y[t]]),gt.copy(c[y[t+1]]),w.vmult(wt,wt),w.vmult(gt,gt),g.vadd(wt,wt),g.vadd(gt,gt);const e=ft.distanceTo(p);!ht.pointInTriangle(ft,mt,wt,gt)&&!ht.pointInTriangle(ft,wt,mt,gt)||e>v||this.reportIntersection(r,ft,o,s,n)}}}}_intersectTrimesh(t,e,i,s,o,n){const r=Mt,a=It,l=Tt,h=Ft,c=Ct,u=Nt,d=qt,p=Rt,y=Pt,v=t.indices;t.vertices;const f=this.from,w=this.to,g=this.direction;l.position.copy(i),l.quaternion.copy(e),m.vectorToLocalFrame(i,e,g,c),m.pointToLocalFrame(i,e,f,u),m.pointToLocalFrame(i,e,w,d),d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,u.x*=t.scale.x,u.y*=t.scale.y,u.z*=t.scale.z,d.vsub(u,c),c.normalize();const b=u.distanceSquared(d);t.tree.rayQuery(this,l,a);for(let n=0,l=a.length;!this.result.shouldStop&&n!==l;n++){const l=a[n];t.getNormal(l,r),t.getVertex(v[3*l],mt),mt.vsub(u,h);const d=c.dot(r),f=r.dot(h)/d;if(f<0)continue;c.scale(f,ft),ft.vadd(u,ft),t.getVertex(v[3*l+1],wt),t.getVertex(v[3*l+2],gt);const w=ft.distanceSquared(u);!ht.pointInTriangle(ft,wt,mt,gt)&&!ht.pointInTriangle(ft,mt,wt,gt)||w>b||(m.vectorToWorldFrame(e,r,y),m.pointToWorldFrame(i,e,ft,p),this.reportIntersection(y,p,o,s,l))}a.length=0}reportIntersection(t,e,i,s,o){const n=this.from,r=this.to,a=n.distanceTo(e),l=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(l.hitFaceIndex=void 0!==o?o:-1,this.mode){case ht.ALL:this.hasHit=!0,l.set(n,r,t,e,i,s,a),l.hasHit=!0,this.callback(l);break;case ht.CLOSEST:(a<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(n,r,t,e,i,s,a));break;case ht.ANY:this.hasHit=!0,l.hasHit=!0,l.set(n,r,t,e,i,s,a),l.shouldStop=!0}}static pointInTriangle(t,e,i,s){s.vsub(e,Lt),i.vsub(e,dt),t.vsub(e,pt);const o=Lt.dot(Lt),n=Lt.dot(dt),r=Lt.dot(pt),a=dt.dot(dt),l=dt.dot(pt);let h,c;return(h=a*r-n*l)>=0&&(c=o*l-n*r)>=0&&h+c<o*a-n*n}}ht.CLOSEST=rt,ht.ANY=at,ht.ALL=lt;const ct=new l,ut=[],dt=new o,pt=new o,yt=new o,vt=new p,ft=new o,mt=new o,wt=new o,gt=new o;new o,new K;const bt={faceList:[0]},xt=new o,Et=new ht,zt=[],At=new o,Bt=new o,St=new o;new o,new o;const Ft=new o,Mt=new o,Ct=new o,Nt=new o,qt=new o,Pt=new o,Rt=new o;new l;const It=[],Tt=new m,Lt=new o,jt=new o;class kt{static defaults(t,e){void 0===t&&(t={});for(let i in e)i in t||(t[i]=e[i]);return t}}class Ot{constructor(t,e,i){void 0===i&&(i={}),i=kt.defaults(i,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Ot.idCounter++,this.collideConnected=i.collideConnected,i.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Ot.idCounter=0;class Vt{constructor(){this.spatial=new o,this.rotational=new o}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Wt{constructor(t,e,i,s){void 0===i&&(i=-1e6),void 0===s&&(s=1e6),this.id=Wt.idCounter++,this.minForce=i,this.maxForce=s,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new Vt,this.jacobianElementB=new Vt,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,i){const s=e,o=t,n=i;this.a=4/(n*(1+4*s)),this.b=4*s/(1+4*s),this.eps=4/(n*n*o*(1+4*s))}computeB(t,e,i){const s=this.computeGW();return-this.computeGq()*t-s*e-this.computeGiMf()*i}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,o=i.position,n=s.position;return t.spatial.dot(o)+e.spatial.dot(n)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,o=i.velocity,n=s.velocity,r=i.angularVelocity,a=s.angularVelocity;return t.multiplyVectors(o,r)+e.multiplyVectors(n,a)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,o=i.vlambda,n=s.vlambda,r=i.wlambda,a=s.wlambda;return t.multiplyVectors(o,r)+e.multiplyVectors(n,a)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,o=i.force,n=i.torque,r=s.force,a=s.torque,l=i.invMassSolve,h=s.invMassSolve;return o.scale(l,_t),r.scale(h,Dt),i.invInertiaWorldSolve.vmult(n,Ht),s.invInertiaWorldSolve.vmult(a,Gt),t.multiplyVectors(_t,Ht)+e.multiplyVectors(Dt,Gt)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,i=this.bi,s=this.bj,o=i.invMassSolve,n=s.invMassSolve,r=i.invInertiaWorldSolve,a=s.invInertiaWorldSolve;let l=o+n;return r.vmult(t.rotational,Ut),l+=Ut.dot(t.rotational),a.vmult(e.rotational,Ut),l+=Ut.dot(e.rotational),l}addToWlambda(t){const e=this.jacobianElementA,i=this.jacobianElementB,s=this.bi,o=this.bj,n=Yt;s.vlambda.addScaledVector(s.invMassSolve*t,e.spatial,s.vlambda),o.vlambda.addScaledVector(o.invMassSolve*t,i.spatial,o.vlambda),s.invInertiaWorldSolve.vmult(e.rotational,n),s.wlambda.addScaledVector(t,n,s.wlambda),o.invInertiaWorldSolve.vmult(i.rotational,n),o.wlambda.addScaledVector(t,n,o.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Wt.idCounter=0;const _t=new o,Dt=new o,Ht=new o,Gt=new o,Ut=new o,Yt=new o;class Xt extends Wt{constructor(t,e,i){void 0===i&&(i=1e6),super(t,e,0,i),this.restitution=0,this.ri=new o,this.rj=new o,this.ni=new o}computeB(t){const e=this.a,i=this.b,s=this.bi,o=this.bj,n=this.ri,r=this.rj,a=$t,l=Qt,h=s.velocity,c=s.angularVelocity;s.force,s.torque;const u=o.velocity,d=o.angularVelocity;o.force,o.torque;const p=Zt,y=this.jacobianElementA,v=this.jacobianElementB,f=this.ni;n.cross(f,a),r.cross(f,l),f.negate(y.spatial),a.negate(y.rotational),v.spatial.copy(f),v.rotational.copy(l),p.copy(o.position),p.vadd(r,p),p.vsub(s.position,p),p.vsub(n,p);const m=f.dot(p),w=this.restitution+1;return-m*e-(w*u.dot(f)-w*h.dot(f)+d.dot(l)-c.dot(a))*i-t*this.computeGiMf()}getImpactVelocityAlongNormal(){const t=Kt,e=Jt,i=te,s=ee,o=ie;return this.bi.position.vadd(this.ri,i),this.bj.position.vadd(this.rj,s),this.bi.getVelocityAtWorldPoint(i,t),this.bj.getVelocityAtWorldPoint(s,e),t.vsub(e,o),this.ni.dot(o)}}const $t=new o,Qt=new o,Zt=new o,Kt=new o,Jt=new o,te=new o,ee=new o,ie=new o;class se extends Ot{constructor(t,e,i,s,n){void 0===e&&(e=new o),void 0===s&&(s=new o),void 0===n&&(n=1e6),super(t,i),this.pivotA=e.clone(),this.pivotB=s.clone();const r=this.equationX=new Xt(t,i),a=this.equationY=new Xt(t,i),l=this.equationZ=new Xt(t,i);this.equations.push(r,a,l),r.minForce=a.minForce=l.minForce=-n,r.maxForce=a.maxForce=l.maxForce=n,r.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,i=this.equationX,s=this.equationY,o=this.equationZ;t.quaternion.vmult(this.pivotA,i.ri),e.quaternion.vmult(this.pivotB,i.rj),s.ri.copy(i.ri),s.rj.copy(i.rj),o.ri.copy(i.ri),o.rj.copy(i.rj)}}new o,new o,new o,new o,new o,new o;class oe extends Ot{constructor(t,e,i,s){void 0===s&&(s=1e6),super(t,e),void 0===i&&(i=t.position.distanceTo(e.position)),this.distance=i;const o=this.distanceEquation=new Xt(t,e);this.equations.push(o),o.minForce=-s,o.maxForce=s}update(){const t=this.bodyA,e=this.bodyB,i=this.distanceEquation,s=.5*this.distance,o=i.ni;e.position.vsub(t.position,o),o.normalize(),o.scale(s,i.ri),o.scale(-s,i.rj)}}new o,new o,new o,new o;class ne extends Wt{constructor(t,e,i){super(t,e,-i,i),this.ri=new o,this.rj=new o,this.t=new o}computeB(t){this.a;const e=this.b;this.bi,this.bj;const i=this.ri,s=this.rj,o=re,n=ae,r=this.t;i.cross(r,o),s.cross(r,n);const a=this.jacobianElementA,l=this.jacobianElementB;r.negate(a.spatial),o.negate(a.rotational),l.spatial.copy(r),l.rotational.copy(n);return-this.computeGW()*e-t*this.computeGiMf()}}const re=new o,ae=new o;class le{constructor(t,e,i){i=kt.defaults(i,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=le.idCounter++,this.materials=[t,e],this.friction=i.friction,this.restitution=i.restitution,this.contactEquationStiffness=i.contactEquationStiffness,this.contactEquationRelaxation=i.contactEquationRelaxation,this.frictionEquationStiffness=i.frictionEquationStiffness,this.frictionEquationRelaxation=i.frictionEquationRelaxation}}le.idCounter=0;class he{constructor(t){void 0===t&&(t={});let e="";"string"==typeof t&&(e=t,t={}),this.name=e,this.id=he.idCounter++,this.friction=void 0!==t.friction?t.friction:-1,this.restitution=void 0!==t.restitution?t.restitution:-1}}he.idCounter=0,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new ht,new o,new o,new o,new o(1,0,0),new o(0,1,0),new o(0,0,1),new o,new o,new o,new o,new o,new o,new o,new o,new o,new o,new o;class ce extends f{constructor(t){if(super({type:f.types.SPHERE}),this.radius=void 0!==t?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){void 0===e&&(e=new o);const i=2*t*this.radius*this.radius/5;return e.x=i,e.y=i,e.z=i,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,i,s){const o=this.radius,n=["x","y","z"];for(let e=0;e<n.length;e++){const r=n[e];i[r]=t[r]-o,s[r]=t[r]+o}}}new o,new o,new o,new o,new o,new o,new o,new o,new o;class ue extends g{constructor(t,e,i,s){if(void 0===t&&(t=1),void 0===e&&(e=1),void 0===i&&(i=1),void 0===s&&(s=8),t<0)throw new Error("The cylinder radiusTop cannot be negative.");if(e<0)throw new Error("The cylinder radiusBottom cannot be negative.");const n=s,r=[],a=[],l=[],h=[],c=[],u=Math.cos,d=Math.sin;r.push(new o(-e*d(0),.5*-i,e*u(0))),h.push(0),r.push(new o(-t*d(0),.5*i,t*u(0))),c.push(1);for(let s=0;s<n;s++){const p=2*Math.PI/n*(s+1),y=2*Math.PI/n*(s+.5);s<n-1?(r.push(new o(-e*d(p),.5*-i,e*u(p))),h.push(2*s+2),r.push(new o(-t*d(p),.5*i,t*u(p))),c.push(2*s+3),l.push([2*s,2*s+1,2*s+3,2*s+2])):l.push([2*s,2*s+1,1,0]),(n%2==1||s<n/2)&&a.push(new o(-d(y),0,u(y)))}l.push(h),a.push(new o(0,1,0));const p=[];for(let t=0;t<c.length;t++)p.push(c[c.length-t-1]);l.push(p),super({vertices:r,faces:l,axes:a}),this.type=f.types.CYLINDER,this.radiusTop=t,this.radiusBottom=e,this.height=i,this.numSegments=s}}class de extends f{constructor(){super({type:f.types.PARTICLE})}calculateLocalInertia(t,e){return void 0===e&&(e=new o),e.set(0,0,0),e}volume(){return 0}updateBoundingSphereRadius(){this.boundingSphereRadius=0}calculateWorldAABB(t,e,i,s){i.copy(t),s.copy(t)}}class pe extends f{constructor(){super({type:f.types.PLANE}),this.worldNormal=new o,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return void 0===e&&(e=new o),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,i,s){ye.set(0,0,1),e.vmult(ye,ye);const o=Number.MAX_VALUE;i.set(-o,-o,-o),s.set(o,o,o),1===ye.x?s.x=t.x:-1===ye.x&&(i.x=t.x),1===ye.y?s.y=t.y:-1===ye.y&&(i.y=t.y),1===ye.z?s.z=t.z:-1===ye.z&&(i.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const ye=new o;new o,new o,new o,new o,new o,new o,new o,new o,new o;class ve{constructor(t){void 0===t&&(t={}),this.root=t.root||null,this.aabb=t.aabb?t.aabb.clone():new l,this.data=[],this.children=[]}reset(){this.children.length=this.data.length=0}insert(t,e,i){void 0===i&&(i=0);const s=this.data;if(!this.aabb.contains(t))return!1;const o=this.children;if(i<(this.maxDepth||this.root.maxDepth)){let s=!1;o.length||(this.subdivide(),s=!0);for(let s=0;8!==s;s++)if(o[s].insert(t,e,i+1))return!0;s&&(o.length=0)}return s.push(e),!0}subdivide(){const t=this.aabb,e=t.lowerBound,i=t.upperBound,s=this.children;s.push(new ve({aabb:new l({lowerBound:new o(0,0,0)})}),new ve({aabb:new l({lowerBound:new o(1,0,0)})}),new ve({aabb:new l({lowerBound:new o(1,1,0)})}),new ve({aabb:new l({lowerBound:new o(1,1,1)})}),new ve({aabb:new l({lowerBound:new o(0,1,1)})}),new ve({aabb:new l({lowerBound:new o(0,0,1)})}),new ve({aabb:new l({lowerBound:new o(1,0,1)})}),new ve({aabb:new l({lowerBound:new o(0,1,0)})})),i.vsub(e,me),me.scale(.5,me);const n=this.root||this;for(let t=0;8!==t;t++){const i=s[t];i.root=n;const o=i.aabb.lowerBound;o.x*=me.x,o.y*=me.y,o.z*=me.z,o.vadd(e,o),o.vadd(me,i.aabb.upperBound)}}aabbQuery(t,e){this.data,this.children;const i=[this];for(;i.length;){const s=i.pop();s.aabb.overlaps(t)&&Array.prototype.push.apply(e,s.data),Array.prototype.push.apply(i,s.children)}return e}rayQuery(t,e,i){return t.getAABB(we),we.toLocalFrame(e,we),this.aabbQuery(we,i),i}removeEmptyNodes(){for(let t=this.children.length-1;t>=0;t--)this.children[t].removeEmptyNodes(),this.children[t].children.length||this.children[t].data.length||this.children.splice(t,1)}}class fe extends ve{constructor(t,e){void 0===e&&(e={}),super({root:null,aabb:t}),this.maxDepth=void 0!==e.maxDepth?e.maxDepth:8}}const me=new o,we=new l;class ge extends f{constructor(t,e){super({type:f.types.TRIMESH}),this.vertices=new Float32Array(t),this.indices=new Int16Array(e),this.normals=new Float32Array(e.length),this.aabb=new l,this.edges=null,this.scale=new o(1,1,1),this.tree=new fe,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}updateTree(){const t=this.tree;t.reset(),t.aabb.copy(this.aabb);const e=this.scale;t.aabb.lowerBound.x*=1/e.x,t.aabb.lowerBound.y*=1/e.y,t.aabb.lowerBound.z*=1/e.z,t.aabb.upperBound.x*=1/e.x,t.aabb.upperBound.y*=1/e.y,t.aabb.upperBound.z*=1/e.z;const i=new l,s=new o,n=new o,r=new o,a=[s,n,r];for(let e=0;e<this.indices.length/3;e++){const o=3*e;this._getUnscaledVertex(this.indices[o],s),this._getUnscaledVertex(this.indices[o+1],n),this._getUnscaledVertex(this.indices[o+2],r),i.setFromPoints(a),t.insert(i,e)}t.removeEmptyNodes()}getTrianglesInAABB(t,e){xe.copy(t);const i=this.scale,s=i.x,o=i.y,n=i.z,r=xe.lowerBound,a=xe.upperBound;return r.x/=s,r.y/=o,r.z/=n,a.x/=s,a.y/=o,a.z/=n,this.tree.aabbQuery(xe,e)}setScale(t){const e=this.scale.x===this.scale.y&&this.scale.y===this.scale.z,i=t.x===t.y&&t.y===t.z;e&&i||this.updateNormals(),this.scale.copy(t),this.updateAABB(),this.updateBoundingSphereRadius()}updateNormals(){const t=be,e=this.normals;for(let i=0;i<this.indices.length/3;i++){const s=3*i,o=this.indices[s],n=this.indices[s+1],r=this.indices[s+2];this.getVertex(o,Se),this.getVertex(n,Fe),this.getVertex(r,Me),ge.computeNormal(Fe,Se,Me,t),e[s]=t.x,e[s+1]=t.y,e[s+2]=t.z}}updateEdges(){const t={},e=(e,i)=>{t[e<i?`${e}_${i}`:`${i}_${e}`]=!0};for(let t=0;t<this.indices.length/3;t++){const i=3*t,s=this.indices[i],o=this.indices[i+1],n=this.indices[i+2];e(s,o),e(o,n),e(n,s)}const i=Object.keys(t);this.edges=new Int16Array(2*i.length);for(let t=0;t<i.length;t++){const e=i[t].split("_");this.edges[2*t]=parseInt(e[0],10),this.edges[2*t+1]=parseInt(e[1],10)}}getEdgeVertex(t,e,i){const s=this.edges[2*t+(e?1:0)];this.getVertex(s,i)}getEdgeVector(t,e){const i=Ee,s=ze;this.getEdgeVertex(t,0,i),this.getEdgeVertex(t,1,s),s.vsub(i,e)}static computeNormal(t,e,i,s){e.vsub(t,Be),i.vsub(e,Ae),Ae.cross(Be,s),s.isZero()||s.normalize()}getVertex(t,e){const i=this.scale;return this._getUnscaledVertex(t,e),e.x*=i.x,e.y*=i.y,e.z*=i.z,e}_getUnscaledVertex(t,e){const i=3*t,s=this.vertices;return e.set(s[i],s[i+1],s[i+2])}getWorldVertex(t,e,i,s){return this.getVertex(t,s),m.pointToWorldFrame(e,i,s,s),s}getTriangleVertices(t,e,i,s){const o=3*t;this.getVertex(this.indices[o],e),this.getVertex(this.indices[o+1],i),this.getVertex(this.indices[o+2],s)}getNormal(t,e){const i=3*t;return e.set(this.normals[i],this.normals[i+1],this.normals[i+2])}calculateLocalInertia(t,e){this.computeLocalAABB(Ce);const i=Ce.upperBound.x-Ce.lowerBound.x,s=Ce.upperBound.y-Ce.lowerBound.y,o=Ce.upperBound.z-Ce.lowerBound.z;return e.set(1/12*t*(2*s*2*s+2*o*2*o),1/12*t*(2*i*2*i+2*o*2*o),1/12*t*(2*s*2*s+2*i*2*i))}computeLocalAABB(t){const e=t.lowerBound,i=t.upperBound,s=this.vertices.length;this.vertices;const o=Ne;this.getVertex(0,o),e.copy(o),i.copy(o);for(let t=0;t!==s;t++)this.getVertex(t,o),o.x<e.x?e.x=o.x:o.x>i.x&&(i.x=o.x),o.y<e.y?e.y=o.y:o.y>i.y&&(i.y=o.y),o.z<e.z?e.z=o.z:o.z>i.z&&(i.z=o.z)}updateAABB(){this.computeLocalAABB(this.aabb)}updateBoundingSphereRadius(){let t=0;const e=this.vertices,i=new o;for(let s=0,o=e.length/3;s!==o;s++){this.getVertex(s,i);const e=i.lengthSquared();e>t&&(t=e)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,i,s){const o=qe,n=Pe;o.position=t,o.quaternion=e,this.aabb.toWorldFrame(o,n),i.copy(n.lowerBound),s.copy(n.upperBound)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}static createTorus(t,e,i,s,o){void 0===t&&(t=1),void 0===e&&(e=.5),void 0===i&&(i=8),void 0===s&&(s=6),void 0===o&&(o=2*Math.PI);const n=[],r=[];for(let r=0;r<=i;r++)for(let a=0;a<=s;a++){const l=a/s*o,h=r/i*Math.PI*2,c=(t+e*Math.cos(h))*Math.cos(l),u=(t+e*Math.cos(h))*Math.sin(l),d=e*Math.sin(h);n.push(c,u,d)}for(let t=1;t<=i;t++)for(let e=1;e<=s;e++){const i=(s+1)*t+e-1,o=(s+1)*(t-1)+e-1,n=(s+1)*(t-1)+e,a=(s+1)*t+e;r.push(i,o,a),r.push(o,n,a)}return new ge(n,r)}}const be=new o,xe=new l,Ee=new o,ze=new o,Ae=new o,Be=new o,Se=new o,Fe=new o,Me=new o,Ce=new l,Ne=new o,qe=new m,Pe=new l;class Re extends class{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){!t.enabled||t.bi.isTrigger||t.bj.isTrigger||this.equations.push(t)}removeEquation(t){const e=this.equations,i=e.indexOf(t);-1!==i&&e.splice(i,1)}removeAllEquations(){this.equations.length=0}}{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let i=0;const s=this.iterations,o=this.tolerance*this.tolerance,n=this.equations,r=n.length,a=e.bodies,l=a.length,h=t;let c,u,d,p,y,v;if(0!==r)for(let t=0;t!==l;t++)a[t].updateSolveMassProperties();const f=Te,m=Le,w=Ie;f.length=r,m.length=r,w.length=r;for(let t=0;t!==r;t++){const e=n[t];w[t]=0,m[t]=e.computeB(h),f[t]=1/e.computeC()}if(0!==r){for(let t=0;t!==l;t++){const e=a[t],i=e.vlambda,s=e.wlambda;i.set(0,0,0),s.set(0,0,0)}for(i=0;i!==s;i++){p=0;for(let t=0;t!==r;t++){const e=n[t];c=m[t],u=f[t],v=w[t],y=e.computeGWlambda(),d=u*(c-y-e.eps*v),v+d<e.minForce?d=e.minForce-v:v+d>e.maxForce&&(d=e.maxForce-v),w[t]+=d,p+=d>0?d:-d,e.addToWlambda(d)}if(p*p<o)break}for(let t=0;t!==l;t++){const e=a[t],i=e.velocity,s=e.angularVelocity;e.vlambda.vmul(e.linearFactor,e.vlambda),i.vadd(e.vlambda,i),e.wlambda.vmul(e.angularFactor,e.wlambda),s.vadd(e.wlambda,s)}let t=n.length;const e=1/h;for(;t--;)n[t].multiplier=w[t]*e}return i}}const Ie=[],Te=[],Le=[];class je extends class{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return 0===this.objects.length?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}{constructor(){super(...arguments),this.type=o}constructObject(){return new o}}const ke=f.types.SPHERE,Oe=f.types.SPHERE|f.types.PLANE,Ve=f.types.BOX|f.types.BOX,We=f.types.SPHERE|f.types.BOX,_e=f.types.PLANE|f.types.BOX,De=f.types.CONVEXPOLYHEDRON,He=f.types.SPHERE|f.types.CONVEXPOLYHEDRON,Ge=f.types.PLANE|f.types.CONVEXPOLYHEDRON,Ue=f.types.BOX|f.types.CONVEXPOLYHEDRON,Ye=f.types.SPHERE|f.types.HEIGHTFIELD,Xe=f.types.BOX|f.types.HEIGHTFIELD,$e=f.types.CONVEXPOLYHEDRON|f.types.HEIGHTFIELD,Qe=f.types.PARTICLE|f.types.SPHERE,Ze=f.types.PLANE|f.types.PARTICLE,Ke=f.types.BOX|f.types.PARTICLE,Je=f.types.PARTICLE|f.types.CONVEXPOLYHEDRON,ti=f.types.CYLINDER,ei=f.types.SPHERE|f.types.CYLINDER,ii=f.types.PLANE|f.types.CYLINDER,si=f.types.BOX|f.types.CYLINDER,oi=f.types.CONVEXPOLYHEDRON|f.types.CYLINDER,ni=f.types.HEIGHTFIELD|f.types.CYLINDER,ri=f.types.PARTICLE|f.types.CYLINDER,ai=f.types.SPHERE|f.types.TRIMESH,li=f.types.PLANE|f.types.TRIMESH;class hi{get[ke](){return this.sphereSphere}get[Oe](){return this.spherePlane}get[Ve](){return this.boxBox}get[We](){return this.sphereBox}get[_e](){return this.planeBox}get[De](){return this.convexConvex}get[He](){return this.sphereConvex}get[Ge](){return this.planeConvex}get[Ue](){return this.boxConvex}get[Ye](){return this.sphereHeightfield}get[Xe](){return this.boxHeightfield}get[$e](){return this.convexHeightfield}get[Qe](){return this.sphereParticle}get[Ze](){return this.planeParticle}get[Ke](){return this.boxParticle}get[Je](){return this.convexParticle}get[ti](){return this.convexConvex}get[ei](){return this.sphereConvex}get[ii](){return this.planeConvex}get[si](){return this.boxConvex}get[oi](){return this.convexConvex}get[ni](){return this.heightfieldCylinder}get[ri](){return this.particleCylinder}get[ai](){return this.sphereTrimesh}get[li](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new je,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,i,s,o,n){let r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new Xt(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&i.collisionResponse&&s.collisionResponse;const a=this.currentContactMaterial;r.restitution=a.restitution,r.setSpookParams(a.contactEquationStiffness,a.contactEquationRelaxation,this.world.dt);const l=i.material||t.material,h=s.material||e.material;return l&&h&&l.restitution>=0&&h.restitution>=0&&(r.restitution=l.restitution*h.restitution),r.si=o||i,r.sj=n||s,r}createFrictionEquationsFromContact(t,e){const i=t.bi,s=t.bj,o=t.si,n=t.sj,r=this.world,a=this.currentContactMaterial;let l=a.friction;const h=o.material||i.material,c=n.material||s.material;if(h&&c&&h.friction>=0&&c.friction>=0&&(l=h.friction*c.friction),l>0){const o=l*(r.frictionGravity||r.gravity).length();let n=i.invMass+s.invMass;n>0&&(n=1/n);const h=this.frictionEquationPool,c=h.length?h.pop():new ne(i,s,o*n),u=h.length?h.pop():new ne(i,s,o*n);return c.bi=u.bi=i,c.bj=u.bj=s,c.minForce=u.minForce=-o*n,c.maxForce=u.maxForce=o*n,c.ri.copy(t.ri),c.rj.copy(t.rj),u.ri.copy(t.ri),u.rj.copy(t.rj),t.ni.tangents(c.t,u.t),c.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),u.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),c.enabled=u.enabled=t.enabled,e.push(c,u),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||1===t)return;const i=this.frictionResult[this.frictionResult.length-2],s=this.frictionResult[this.frictionResult.length-1];ci.setZero(),ui.setZero(),di.setZero();const o=e.bi;e.bj;for(let i=0;i!==t;i++)e=this.result[this.result.length-1-i],e.bi!==o?(ci.vadd(e.ni,ci),ui.vadd(e.ri,ui),di.vadd(e.rj,di)):(ci.vsub(e.ni,ci),ui.vadd(e.rj,ui),di.vadd(e.ri,di));const n=1/t;ui.scale(n,i.ri),di.scale(n,i.rj),s.ri.copy(i.ri),s.rj.copy(i.rj),ci.normalize(),ci.tangents(i.t,s.t)}getContacts(t,e,i,s,o,n,r){this.contactPointPool=o,this.frictionEquationPool=r,this.result=s,this.frictionResult=n;const a=vi,l=fi,h=pi,c=yi;for(let s=0,o=t.length;s!==o;s++){const o=t[s],n=e[s];let r=null;o.material&&n.material&&(r=i.getContactMaterial(o.material,n.material)||null);const u=o.type&R.KINEMATIC&&n.type&R.STATIC||o.type&R.STATIC&&n.type&R.KINEMATIC||o.type&R.KINEMATIC&&n.type&R.KINEMATIC;for(let t=0;t<o.shapes.length;t++){o.quaternion.mult(o.shapeOrientations[t],a),o.quaternion.vmult(o.shapeOffsets[t],h),h.vadd(o.position,h);const e=o.shapes[t];for(let t=0;t<n.shapes.length;t++){n.quaternion.mult(n.shapeOrientations[t],l),n.quaternion.vmult(n.shapeOffsets[t],c),c.vadd(n.position,c);const s=n.shapes[t];if(!(e.collisionFilterMask&s.collisionFilterGroup&&s.collisionFilterMask&e.collisionFilterGroup))continue;if(h.distanceTo(c)>e.boundingSphereRadius+s.boundingSphereRadius)continue;let d=null;e.material&&s.material&&(d=i.getContactMaterial(e.material,s.material)||null),this.currentContactMaterial=d||r||i.defaultContactMaterial;const p=this[e.type|s.type];if(p){let t=!1;t=e.type<s.type?p.call(this,e,s,h,c,a,l,o,n,e,s,u):p.call(this,s,e,c,h,l,a,n,o,e,s,u),t&&u&&(i.shapeOverlapKeeper.set(e.id,s.id),i.bodyOverlapKeeper.set(o.id,n.id))}}}}}sphereSphere(t,e,i,s,o,n,r,a,l,h,c){if(c)return i.distanceSquared(s)<(t.radius+e.radius)**2;const u=this.createContactEquation(r,a,t,e,l,h);s.vsub(i,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.scale(t.radius,u.ri),u.rj.scale(-e.radius,u.rj),u.ri.vadd(i,u.ri),u.ri.vsub(r.position,u.ri),u.rj.vadd(s,u.rj),u.rj.vsub(a.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}spherePlane(t,e,i,s,o,n,r,a,l,h,c){const u=this.createContactEquation(r,a,t,e,l,h);if(u.ni.set(0,0,1),n.vmult(u.ni,u.ni),u.ni.negate(u.ni),u.ni.normalize(),u.ni.scale(t.radius,u.ri),i.vsub(s,Ti),u.ni.scale(u.ni.dot(Ti),Li),Ti.vsub(Li,u.rj),-Ti.dot(u.ni)<=t.radius){if(c)return!0;const t=u.ri,e=u.rj;t.vadd(i,t),t.vsub(r.position,t),e.vadd(s,e),e.vsub(a.position,e),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}}boxBox(t,e,i,s,o,n,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,i,s,o,n,r,a,t,e,c)}sphereBox(t,e,i,s,o,n,r,a,l,h,c){const u=this.v3pool,d=Gi;i.vsub(s,Wi),e.getSideNormals(d,n);const p=t.radius;let y=!1;const v=Yi,f=Xi,m=$i;let w=null,g=0,b=0,x=0,E=null;for(let t=0,e=d.length;t!==e&&!1===y;t++){const e=_i;e.copy(d[t]);const i=e.length();e.normalize();const s=Wi.dot(e);if(s<i+p&&s>0){const o=Di,n=Hi;o.copy(d[(t+1)%3]),n.copy(d[(t+2)%3]);const r=o.length(),a=n.length();o.normalize(),n.normalize();const l=Wi.dot(o),h=Wi.dot(n);if(l<r&&l>-r&&h<a&&h>-a){const t=Math.abs(s-i-p);if((null===E||t<E)&&(E=t,b=l,x=h,w=i,v.copy(e),f.copy(o),m.copy(n),g++,c))return!0}}}if(g){y=!0;const o=this.createContactEquation(r,a,t,e,l,h);v.scale(-p,o.ri),o.ni.copy(v),o.ni.negate(o.ni),v.scale(w,v),f.scale(b,f),v.vadd(f,v),m.scale(x,m),v.vadd(m,o.rj),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),o.rj.vadd(s,o.rj),o.rj.vsub(a.position,o.rj),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}let z=u.get();const A=Ui;for(let o=0;2!==o&&!y;o++)for(let n=0;2!==n&&!y;n++)for(let u=0;2!==u&&!y;u++)if(z.set(0,0,0),o?z.vadd(d[0],z):z.vsub(d[0],z),n?z.vadd(d[1],z):z.vsub(d[1],z),u?z.vadd(d[2],z):z.vsub(d[2],z),s.vadd(z,A),A.vsub(i,A),A.lengthSquared()<p*p){if(c)return!0;y=!0;const o=this.createContactEquation(r,a,t,e,l,h);o.ri.copy(A),o.ri.normalize(),o.ni.copy(o.ri),o.ri.scale(p,o.ri),o.rj.copy(z),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),o.rj.vadd(s,o.rj),o.rj.vsub(a.position,o.rj),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}u.release(z),z=null;const B=u.get(),S=u.get(),F=u.get(),M=u.get(),C=u.get(),N=d.length;for(let o=0;o!==N&&!y;o++)for(let n=0;n!==N&&!y;n++)if(o%3!=n%3){d[n].cross(d[o],B),B.normalize(),d[o].vadd(d[n],S),F.copy(i),F.vsub(S,F),F.vsub(s,F);const u=F.dot(B);B.scale(u,M);let v=0;for(;v===o%3||v===n%3;)v++;C.copy(i),C.vsub(M,C),C.vsub(S,C),C.vsub(s,C);const f=Math.abs(u),m=C.length();if(f<d[v].length()&&m<p){if(c)return!0;y=!0;const o=this.createContactEquation(r,a,t,e,l,h);S.vadd(M,o.rj),o.rj.copy(o.rj),C.negate(o.ni),o.ni.normalize(),o.ri.copy(o.rj),o.ri.vadd(s,o.ri),o.ri.vsub(i,o.ri),o.ri.normalize(),o.ri.scale(p,o.ri),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),o.rj.vadd(s,o.rj),o.rj.vsub(a.position,o.rj),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}}u.release(B,S,F,M,C)}planeBox(t,e,i,s,o,n,r,a,l,h,c){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,i,s,o,n,r,a,t,e,c)}convexConvex(t,e,i,s,o,n,r,a,l,h,c,u,d){const p=cs;if(!(i.distanceTo(s)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,i,o,s,n,p,u,d)){const u=[],d=us;t.clipAgainstHull(i,o,e,s,n,p,-100,100,u);let y=0;for(let o=0;o!==u.length;o++){if(c)return!0;const n=this.createContactEquation(r,a,t,e,l,h),v=n.ri,f=n.rj;p.negate(n.ni),u[o].normal.negate(d),d.scale(u[o].depth,d),u[o].point.vadd(d,v),f.copy(u[o].point),v.vsub(i,v),f.vsub(s,f),v.vadd(i,v),v.vsub(r.position,v),f.vadd(s,f),f.vsub(a.position,f),this.result.push(n),y++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(n,this.frictionResult)}this.enableFrictionReduction&&y&&this.createFrictionFromAverage(y)}}sphereConvex(t,e,i,s,o,n,r,a,l,h,c){const u=this.v3pool;i.vsub(s,Qi);const d=e.faceNormals,p=e.faces,y=e.vertices,v=t.radius;let f=!1;for(let o=0;o!==y.length;o++){const u=y[o],d=ts;n.vmult(u,d),s.vadd(d,d);const p=Ji;if(d.vsub(i,p),p.lengthSquared()<v*v){if(c)return!0;f=!0;const o=this.createContactEquation(r,a,t,e,l,h);return o.ri.copy(p),o.ri.normalize(),o.ni.copy(o.ri),o.ri.scale(v,o.ri),d.vsub(s,o.rj),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),o.rj.vadd(s,o.rj),o.rj.vsub(a.position,o.rj),this.result.push(o),void this.createFrictionEquationsFromContact(o,this.frictionResult)}}for(let o=0,m=p.length;o!==m&&!1===f;o++){const m=d[o],w=p[o],g=es;n.vmult(m,g);const b=is;n.vmult(y[w[0]],b),b.vadd(s,b);const x=ss;g.scale(-v,x),i.vadd(x,x);const E=os;x.vsub(b,E);const z=E.dot(g),A=ns;if(i.vsub(b,A),z<0&&A.dot(g)>0){const o=[];for(let t=0,e=w.length;t!==e;t++){const e=u.get();n.vmult(y[w[t]],e),s.vadd(e,e),o.push(e)}if(Vi(o,g,i)){if(c)return!0;f=!0;const n=this.createContactEquation(r,a,t,e,l,h);g.scale(-v,n.ri),g.negate(n.ni);const d=u.get();g.scale(-z,d);const p=u.get();g.scale(-v,p),i.vsub(s,n.rj),n.rj.vadd(p,n.rj),n.rj.vadd(d,n.rj),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),u.release(d),u.release(p),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult);for(let t=0,e=o.length;t!==e;t++)u.release(o[t]);return}for(let d=0;d!==w.length;d++){const p=u.get(),f=u.get();n.vmult(y[w[(d+1)%w.length]],p),n.vmult(y[w[(d+2)%w.length]],f),s.vadd(p,p),s.vadd(f,f);const m=Zi;f.vsub(p,m);const g=Ki;m.unit(g);const b=u.get(),x=u.get();i.vsub(p,x);const E=x.dot(g);g.scale(E,b),b.vadd(p,b);const z=u.get();if(b.vsub(i,z),E>0&&E*E<m.lengthSquared()&&z.lengthSquared()<v*v){if(c)return!0;const n=this.createContactEquation(r,a,t,e,l,h);b.vsub(s,n.rj),b.vsub(i,n.ni),n.ni.normalize(),n.ni.scale(v,n.ri),n.rj.vadd(s,n.rj),n.rj.vsub(a.position,n.rj),n.ri.vadd(i,n.ri),n.ri.vsub(r.position,n.ri),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult);for(let t=0,e=o.length;t!==e;t++)u.release(o[t]);return u.release(p),u.release(f),u.release(b),u.release(z),void u.release(x)}u.release(p),u.release(f),u.release(b),u.release(z),u.release(x)}for(let t=0,e=o.length;t!==e;t++)u.release(o[t])}}}planeConvex(t,e,i,s,o,n,r,a,l,h,c){const u=rs,d=as;d.set(0,0,1),o.vmult(d,d);let p=0;const y=ls;for(let o=0;o!==e.vertices.length;o++){u.copy(e.vertices[o]),n.vmult(u,u),s.vadd(u,u),u.vsub(i,y);if(d.dot(y)<=0){if(c)return!0;const o=this.createContactEquation(r,a,t,e,l,h),n=hs;d.scale(d.dot(y),n),u.vsub(n,n),n.vsub(i,o.ri),o.ni.copy(d),u.vsub(s,o.rj),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),o.rj.vadd(s,o.rj),o.rj.vsub(a.position,o.rj),this.result.push(o),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(o,this.frictionResult)}}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,i,s,o,n,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,i,s,o,n,r,a,t,e,c)}sphereHeightfield(t,e,i,s,o,n,r,a,l,h,c){const u=e.data,d=t.radius,p=e.elementSize,y=Bs,v=As;m.pointToLocalFrame(s,n,i,v);let f=Math.floor((v.x-d)/p)-1,w=Math.ceil((v.x+d)/p)+1,g=Math.floor((v.y-d)/p)-1,b=Math.ceil((v.y+d)/p)+1;if(w<0||b<0||f>u.length||g>u[0].length)return;f<0&&(f=0),w<0&&(w=0),g<0&&(g=0),b<0&&(b=0),f>=u.length&&(f=u.length-1),w>=u.length&&(w=u.length-1),b>=u[0].length&&(b=u[0].length-1),g>=u[0].length&&(g=u[0].length-1);const x=[];e.getRectMinMax(f,g,w,b,x);const E=x[0],z=x[1];if(v.z-d>z||v.z+d<E)return;const A=this.result;for(let l=f;l<w;l++)for(let h=g;h<b;h++){const u=A.length;let d=!1;if(e.getConvexTrianglePillar(l,h,!1),m.pointToWorldFrame(s,n,e.pillarOffset,y),i.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(d=this.sphereConvex(t,e.pillarConvex,i,y,o,n,r,a,t,e,c)),c&&d)return!0;if(e.getConvexTrianglePillar(l,h,!0),m.pointToWorldFrame(s,n,e.pillarOffset,y),i.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(d=this.sphereConvex(t,e.pillarConvex,i,y,o,n,r,a,t,e,c)),c&&d)return!0;if(A.length-u>2)return}}boxHeightfield(t,e,i,s,o,n,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,i,s,o,n,r,a,t,e,c)}convexHeightfield(t,e,i,s,o,n,r,a,l,h,c){const u=e.data,d=e.elementSize,p=t.boundingSphereRadius,y=Es,v=zs,f=xs;m.pointToLocalFrame(s,n,i,f);let w=Math.floor((f.x-p)/d)-1,g=Math.ceil((f.x+p)/d)+1,b=Math.floor((f.y-p)/d)-1,x=Math.ceil((f.y+p)/d)+1;if(g<0||x<0||w>u.length||b>u[0].length)return;w<0&&(w=0),g<0&&(g=0),b<0&&(b=0),x<0&&(x=0),w>=u.length&&(w=u.length-1),g>=u.length&&(g=u.length-1),x>=u[0].length&&(x=u[0].length-1),b>=u[0].length&&(b=u[0].length-1);const E=[];e.getRectMinMax(w,b,g,x,E);const z=E[0],A=E[1];if(!(f.z-p>A||f.z+p<z))for(let l=w;l<g;l++)for(let h=b;h<x;h++){let u=!1;if(e.getConvexTrianglePillar(l,h,!1),m.pointToWorldFrame(s,n,e.pillarOffset,y),i.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(u=this.convexConvex(t,e.pillarConvex,i,y,o,n,r,a,null,null,c,v,null)),c&&u)return!0;if(e.getConvexTrianglePillar(l,h,!0),m.pointToWorldFrame(s,n,e.pillarOffset,y),i.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(u=this.convexConvex(t,e.pillarConvex,i,y,o,n,r,a,null,null,c,v,null)),c&&u)return!0}}sphereParticle(t,e,i,s,o,n,r,a,l,h,c){const u=vs;u.set(0,0,1),s.vsub(i,u);if(u.lengthSquared()<=t.radius*t.radius){if(c)return!0;const i=this.createContactEquation(a,r,e,t,l,h);u.normalize(),i.rj.copy(u),i.rj.scale(t.radius,i.rj),i.ni.copy(u),i.ni.negate(i.ni),i.ri.set(0,0,0),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}planeParticle(t,e,i,s,o,n,r,a,l,h,c){const u=ds;u.set(0,0,1),r.quaternion.vmult(u,u);const d=ps;s.vsub(r.position,d);if(u.dot(d)<=0){if(c)return!0;const i=this.createContactEquation(a,r,e,t,l,h);i.ni.copy(u),i.ni.negate(i.ni),i.ri.set(0,0,0);const o=ys;u.scale(u.dot(s),o),s.vsub(o,o),i.rj.copy(o),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}boxParticle(t,e,i,s,o,n,r,a,l,h,c){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,i,s,o,n,r,a,t,e,c)}convexParticle(t,e,i,s,o,n,r,a,l,h,c){let u=-1;const d=ws,p=bs;let y=null;const v=ms;if(v.copy(s),v.vsub(i,v),o.conjugate(fs),fs.vmult(v,v),t.pointIsInside(v)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(i,o),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(o);for(let e=0,i=t.faces.length;e!==i;e++){const i=[t.worldVertices[t.faces[e][0]]],o=t.worldFaceNormals[e];s.vsub(i[0],gs);const n=-o.dot(gs);if(null===y||Math.abs(n)<Math.abs(y)){if(c)return!0;y=n,u=e,d.copy(o)}}if(-1!==u){const o=this.createContactEquation(a,r,e,t,l,h);d.scale(y,p),p.vadd(s,p),p.vsub(i,p),o.rj.copy(p),d.negate(o.ni),o.ri.set(0,0,0);const n=o.ri,c=o.rj;n.vadd(s,n),n.vsub(a.position,n),c.vadd(i,c),c.vsub(r.position,c),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,i,s,o,n,r,a,l,h,c){return this.convexHeightfield(e,t,s,i,n,o,a,r,l,h,c)}particleCylinder(t,e,i,s,o,n,r,a,l,h,c){return this.convexParticle(e,t,s,i,n,o,a,r,l,h,c)}sphereTrimesh(t,e,i,s,o,n,r,a,l,h,c){const u=Ai,d=Bi,p=Si,y=Fi,v=Mi,f=Ci,w=Ri,g=zi,b=xi,x=Ii;m.pointToLocalFrame(s,n,i,v);const E=t.radius;w.lowerBound.set(v.x-E,v.y-E,v.z-E),w.upperBound.set(v.x+E,v.y+E,v.z+E),e.getTrianglesInAABB(w,x);const z=Ei,A=t.radius*t.radius;for(let o=0;o<x.length;o++)for(let u=0;u<3;u++)if(e.getVertex(e.indices[3*x[o]+u],z),z.vsub(v,b),b.lengthSquared()<=A){if(g.copy(z),m.pointToWorldFrame(s,n,g,z),z.vsub(i,b),c)return!0;let o=this.createContactEquation(r,a,t,e,l,h);o.ni.copy(b),o.ni.normalize(),o.ri.copy(o.ni),o.ri.scale(t.radius,o.ri),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),o.rj.copy(z),o.rj.vsub(a.position,o.rj),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}for(let o=0;o<x.length;o++)for(let w=0;w<3;w++){e.getVertex(e.indices[3*x[o]+w],u),e.getVertex(e.indices[3*x[o]+(w+1)%3],d),d.vsub(u,p),v.vsub(d,f);const g=f.dot(p);v.vsub(u,f);let b=f.dot(p);if(b>0&&g<0){v.vsub(u,f),y.copy(p),y.normalize(),b=f.dot(y),y.scale(b,f),f.vadd(u,f);if(f.distanceTo(v)<t.radius){if(c)return!0;const o=this.createContactEquation(r,a,t,e,l,h);f.vsub(v,o.ni),o.ni.normalize(),o.ni.scale(t.radius,o.ri),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),m.pointToWorldFrame(s,n,f,f),f.vsub(a.position,o.rj),m.vectorToWorldFrame(n,o.ni,o.ni),m.vectorToWorldFrame(n,o.ri,o.ri),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}}}const B=Ni,S=qi,F=Pi,M=bi;for(let o=0,u=x.length;o!==u;o++){e.getTriangleVertices(x[o],B,S,F),e.getNormal(x[o],M),v.vsub(B,f);let u=f.dot(M);if(M.scale(u,f),v.vsub(f,f),u=f.distanceTo(v),ht.pointInTriangle(f,B,S,F)&&u<t.radius){if(c)return!0;let o=this.createContactEquation(r,a,t,e,l,h);f.vsub(v,o.ni),o.ni.normalize(),o.ni.scale(t.radius,o.ri),o.ri.vadd(i,o.ri),o.ri.vsub(r.position,o.ri),m.pointToWorldFrame(s,n,f,f),f.vsub(a.position,o.rj),m.vectorToWorldFrame(n,o.ni,o.ni),m.vectorToWorldFrame(n,o.ri,o.ri),this.result.push(o),this.createFrictionEquationsFromContact(o,this.frictionResult)}}x.length=0}planeTrimesh(t,e,i,s,n,r,a,l,h,c,u){const d=new o,p=mi;p.set(0,0,1),n.vmult(p,p);for(let n=0;n<e.vertices.length/3;n++){e.getVertex(n,d);const y=new o;y.copy(d),m.pointToWorldFrame(s,r,y,d);const v=wi;d.vsub(i,v);if(p.dot(v)<=0){if(u)return!0;const i=this.createContactEquation(a,l,t,e,h,c);i.ni.copy(p);const s=gi;p.scale(v.dot(p),s),d.vsub(s,s),i.ri.copy(s),i.ri.vsub(a.position,i.ri),i.rj.copy(d),i.rj.vsub(l.position,i.rj),this.result.push(i),this.createFrictionEquationsFromContact(i,this.frictionResult)}}}}const ci=new o,ui=new o,di=new o,pi=new o,yi=new o,vi=new p,fi=new p,mi=new o,wi=new o,gi=new o,bi=new o,xi=new o;new o;const Ei=new o,zi=new o,Ai=new o,Bi=new o,Si=new o,Fi=new o,Mi=new o,Ci=new o,Ni=new o,qi=new o,Pi=new o,Ri=new l,Ii=[],Ti=new o,Li=new o,ji=new o,ki=new o,Oi=new o;function Vi(t,e,i){let s=null;const o=t.length;for(let n=0;n!==o;n++){const r=t[n],a=ji;t[(n+1)%o].vsub(r,a);const l=ki;a.cross(e,l);const h=Oi;i.vsub(r,h);const c=l.dot(h);if(!(null===s||c>0&&!0===s||c<=0&&!1===s))return!1;null===s&&(s=c>0)}return!0}const Wi=new o,_i=new o,Di=new o,Hi=new o,Gi=[new o,new o,new o,new o,new o,new o],Ui=new o,Yi=new o,Xi=new o,$i=new o,Qi=new o,Zi=new o,Ki=new o,Ji=new o,ts=new o,es=new o,is=new o,ss=new o,os=new o,ns=new o;new o,new o;const rs=new o,as=new o,ls=new o,hs=new o,cs=new o,us=new o,ds=new o,ps=new o,ys=new o,vs=new o,fs=new p,ms=new o;new o;const ws=new o,gs=new o,bs=new o,xs=new o,Es=new o,zs=[0],As=new o,Bs=new o;class Ss{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const i=e;e=t,t=i}return t<<16|e}set(t,e){const i=this.getKey(t,e),s=this.current;let o=0;for(;i>s[o];)o++;if(i!==s[o]){for(let t=s.length-1;t>=o;t--)s[t+1]=s[t];s[o]=i}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const i=this.current,s=this.previous,o=i.length,n=s.length;let r=0;for(let e=0;e<o;e++){let o=!1;const n=i[e];for(;n>s[r];)r++;o=n===s[r],o||Fs(t,n)}r=0;for(let t=0;t<n;t++){let o=!1;const n=s[t];for(;n>i[r];)r++;o=i[r]===n,o||Fs(e,n)}}}function Fs(t,e){t.push((4294901760&e)>>16,65535&e)}const Ms=(t,e)=>t<e?`${t}-${e}`:`${e}-${t}`;class Cs{constructor(){this.data={keys:[]}}get(t,e){const i=Ms(t,e);return this.data[i]}set(t,e,i){const s=Ms(t,e);this.get(t,e)||this.data.keys.push(s),this.data[s]=i}delete(t,e){const i=Ms(t,e),s=this.data.keys.indexOf(i);-1!==s&&this.data.keys.splice(s,1),delete this.data[i]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){delete t[e.pop()]}}}class Ns extends d{constructor(t){void 0===t&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=void 0!==t.quatNormalizeSkip?t.quatNormalizeSkip:0,this.quatNormalizeFast=void 0!==t.quatNormalizeFast&&t.quatNormalizeFast,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new o,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new o,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=void 0!==t.broadphase?t.broadphase:new Z,this.bodies=[],this.hasActiveBodies=!1,this.solver=void 0!==t.solver?t.solver:new Re,this.constraints=[],this.narrowphase=new hi(this),this.collisionMatrix=new u,this.collisionMatrixPrevious=new u,this.bodyOverlapKeeper=new Ss,this.shapeOverlapKeeper=new Ss,this.contactmaterials=[],this.contactMaterialTable=new Cs,this.defaultMaterial=new he("default"),this.defaultContactMaterial=new le(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);-1!==e&&this.constraints.splice(e,1)}rayTest(t,e,i){i instanceof K?this.raycastClosest(t,e,{skipBackfaces:!0},i):this.raycastAll(t,e,{skipBackfaces:!0},i)}raycastAll(t,e,i,s){return void 0===i&&(i={}),i.mode=ht.ALL,i.from=t,i.to=e,i.callback=s,qs.intersectWorld(this,i)}raycastAny(t,e,i,s){return void 0===i&&(i={}),i.mode=ht.ANY,i.from=t,i.to=e,i.result=s,qs.intersectWorld(this,i)}raycastClosest(t,e,i,s){return void 0===i&&(i={}),i.mode=ht.CLOSEST,i.from=t,i.to=e,i.result=s,qs.intersectWorld(this,i)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof R&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,i=this.bodies,s=i.indexOf(t);if(-1!==s){i.splice(s,1);for(let t=0;t!==i.length;t++)i[t].index=t;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let i=0;i<e.length;i++){const s=e[i].shapes;for(let e=0;e<s.length;e++){const i=s[e];if(i.id===t)return i}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);-1!==e&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){void 0===t&&(t=1/60),void 0===e&&(e=10);const i=Ps.now()/1e3;if(this.lastCallTime){const s=i-this.lastCallTime;this.step(t,s,e)}else this.step(t,void 0,e);this.lastCallTime=i}step(t,e,i){if(void 0===i&&(i=10),void 0===e)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const s=Ps.now();let o=0;for(;this.accumulator>=t&&o<i&&(this.internalStep(t),this.accumulator-=t,o++,!(Ps.now()-s>1e3*t)););this.accumulator=this.accumulator%t;const n=this.accumulator/t;for(let t=0;t!==this.bodies.length;t++){const e=this.bodies[t];e.previousPosition.lerp(e.position,n,e.interpolatedPosition),e.previousQuaternion.slerp(e.quaternion,n,e.interpolatedQuaternion),e.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,i=ks,s=Os,o=this.bodies.length,n=this.bodies,r=this.solver,a=this.gravity,l=this.doProfiling,h=this.profile,c=R.DYNAMIC;let u=-1/0;const d=this.constraints,p=js;a.length();const y=a.x,v=a.y,f=a.z;let m=0;for(l&&(u=Ps.now()),m=0;m!==o;m++){const t=n[m];if(t.type===c){const e=t.force,i=t.mass;e.x+=i*y,e.y+=i*v,e.z+=i*f}}for(let t=0,e=this.subsystems.length;t!==e;t++)this.subsystems[t].update();l&&(u=Ps.now()),i.length=0,s.length=0,this.broadphase.collisionPairs(this,i,s),l&&(h.broadphase=Ps.now()-u);let w=d.length;for(m=0;m!==w;m++){const t=d[m];if(!t.collideConnected)for(let e=i.length-1;e>=0;e-=1)(t.bodyA===i[e]&&t.bodyB===s[e]||t.bodyB===i[e]&&t.bodyA===s[e])&&(i.splice(e,1),s.splice(e,1))}this.collisionMatrixTick(),l&&(u=Ps.now());const g=Ls,b=e.length;for(m=0;m!==b;m++)g.push(e[m]);e.length=0;const x=this.frictionEquations.length;for(m=0;m!==x;m++)p.push(this.frictionEquations[m]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(i,s,this,e,g,this.frictionEquations,p),l&&(h.narrowphase=Ps.now()-u),l&&(u=Ps.now()),m=0;m<this.frictionEquations.length;m++)r.addEquation(this.frictionEquations[m]);const E=e.length;for(let t=0;t!==E;t++){const i=e[t],s=i.bi,o=i.bj,n=i.si,a=i.sj;let l;if(l=s.material&&o.material&&this.getContactMaterial(s.material,o.material)||this.defaultContactMaterial,l.friction,s.material&&o.material&&(s.material.friction>=0&&o.material.friction>=0&&(s.material.friction,o.material.friction),s.material.restitution>=0&&o.material.restitution>=0&&(i.restitution=s.material.restitution*o.material.restitution)),r.addEquation(i),s.allowSleep&&s.type===R.DYNAMIC&&s.sleepState===R.SLEEPING&&o.sleepState===R.AWAKE&&o.type!==R.STATIC){o.velocity.lengthSquared()+o.angularVelocity.lengthSquared()>=2*o.sleepSpeedLimit**2&&(s.wakeUpAfterNarrowphase=!0)}if(o.allowSleep&&o.type===R.DYNAMIC&&o.sleepState===R.SLEEPING&&s.sleepState===R.AWAKE&&s.type!==R.STATIC){s.velocity.lengthSquared()+s.angularVelocity.lengthSquared()>=2*s.sleepSpeedLimit**2&&(o.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(s,o,!0),this.collisionMatrixPrevious.get(s,o)||(Ts.body=o,Ts.contact=i,s.dispatchEvent(Ts),Ts.body=s,o.dispatchEvent(Ts)),this.bodyOverlapKeeper.set(s.id,o.id),this.shapeOverlapKeeper.set(n.id,a.id)}for(this.emitContactEvents(),l&&(h.makeContactConstraints=Ps.now()-u,u=Ps.now()),m=0;m!==o;m++){const t=n[m];t.wakeUpAfterNarrowphase&&(t.wakeUp(),t.wakeUpAfterNarrowphase=!1)}for(w=d.length,m=0;m!==w;m++){const t=d[m];t.update();for(let e=0,i=t.equations.length;e!==i;e++){const i=t.equations[e];r.addEquation(i)}}r.solve(t,this),l&&(h.solve=Ps.now()-u),r.removeAllEquations();const z=Math.pow;for(m=0;m!==o;m++){const e=n[m];if(e.type&c){const i=z(1-e.linearDamping,t),s=e.velocity;s.scale(i,s);const o=e.angularVelocity;if(o){const i=z(1-e.angularDamping,t);o.scale(i,o)}}}this.dispatchEvent(Is),l&&(u=Ps.now());const A=this.stepnumber%(this.quatNormalizeSkip+1)==0,B=this.quatNormalizeFast;for(m=0;m!==o;m++)n[m].integrate(t,A,B);this.clearForces(),this.broadphase.dirty=!0,l&&(h.integrate=Ps.now()-u),this.stepnumber+=1,this.dispatchEvent(Rs);let S=!0;if(this.allowSleep)for(S=!1,m=0;m!==o;m++){const t=n[m];t.sleepTick(this.time),t.sleepState!==R.SLEEPING&&(S=!0)}this.hasActiveBodies=S}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(Vs,Ws),t){for(let t=0,e=Vs.length;t<e;t+=2)_s.bodyA=this.getBodyById(Vs[t]),_s.bodyB=this.getBodyById(Vs[t+1]),this.dispatchEvent(_s);_s.bodyA=_s.bodyB=null}if(e){for(let t=0,e=Ws.length;t<e;t+=2)Ds.bodyA=this.getBodyById(Ws[t]),Ds.bodyB=this.getBodyById(Ws[t+1]),this.dispatchEvent(Ds);Ds.bodyA=Ds.bodyB=null}Vs.length=Ws.length=0;const i=this.hasAnyEventListener("beginShapeContact"),s=this.hasAnyEventListener("endShapeContact");if((i||s)&&this.shapeOverlapKeeper.getDiff(Vs,Ws),i){for(let t=0,e=Vs.length;t<e;t+=2){const e=this.getShapeById(Vs[t]),i=this.getShapeById(Vs[t+1]);Hs.shapeA=e,Hs.shapeB=i,e&&(Hs.bodyA=e.body),i&&(Hs.bodyB=i.body),this.dispatchEvent(Hs)}Hs.bodyA=Hs.bodyB=Hs.shapeA=Hs.shapeB=null}if(s){for(let t=0,e=Ws.length;t<e;t+=2){const e=this.getShapeById(Ws[t]),i=this.getShapeById(Ws[t+1]);Gs.shapeA=e,Gs.shapeB=i,e&&(Gs.bodyA=e.body),i&&(Gs.bodyB=i.body),this.dispatchEvent(Gs)}Gs.bodyA=Gs.bodyB=Gs.shapeA=Gs.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let i=0;i!==e;i++){const e=t[i];e.force,e.torque,e.force.set(0,0,0),e.torque.set(0,0,0)}}}new l;const qs=new ht,Ps=globalThis.performance||{};if(!Ps.now){let t=Date.now();Ps.timing&&Ps.timing.navigationStart&&(t=Ps.timing.navigationStart),Ps.now=()=>Date.now()-t}new o;const Rs={type:"postStep"},Is={type:"preStep"},Ts={type:R.COLLIDE_EVENT_NAME,body:null,contact:null},Ls=[],js=[],ks=[],Os=[],Vs=[],Ws=[],_s={type:"beginContact",bodyA:null,bodyB:null},Ds={type:"endContact",bodyA:null,bodyB:null},Hs={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Gs={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Us=new Map,Ys={world:null,delta:0,flow:{tmp:[],key:[]},reflow:{ray:[],stat:{fps:0,delta:0}}},Xs={clear:()=>{Us.clear()},byName:t=>Us.has(t)?Us.get(t):null,add:t=>{if("ray"!==t.types&&"contact"!==t.types)switch(t.types){case"joint":Ys.world.addConstraint(t);break;default:Ys.world.addBody(t)}Us.set(t.name,t)},remove:t=>{if("ray"!==t.types&&"contact"!==t.types)switch(t.types){case"joint":Ys.world.removeConstraint(t);break;default:Ys.world.removeBody(t)}Us.delete(t.name)},getVolume:(t,e,i)=>{let s=1;switch(t){case"sphere":s=4*Math.PI*e[0]*e[0]*e[0]/3;break;case"cone":s=Math.PI*e[0]*(.5*e[1])*2;break;case"box":s=.5*e[0]*8*(.5*e[1])*(.5*e[2]);break;case"cylinder":s=Math.PI*e[0]*e[0]*(.5*e[1])*2;break;case"capsule":s=4*Math.PI*e[0]*e[0]*e[0]/3+Math.PI*e[0]*e[0]*(.5*e[1])*2;break;case"convex":case"mesh":s=Xs.getConvexVolume(i)}return s},getConvexVolume:t=>{let e,i=t.length/3,s=[t[0],t[1],t[2]],o=[t[0],t[1],t[2]];for(;i--;)e=3*i,t[e]<s[0]?s[0]=t[e]:t[e]>o[0]&&(o[0]=t[e]),t[e+1]<s[1]?s[1]=t[e+1]:t[e+1]>o[1]&&(o[1]=t[e+1]),t[e+2]<s[2]?s[2]=t[e+2]:t[e+2]>o[2]&&(o[2]=t[e+2]);return(o[0]-s[0])*(o[1]-s[1])*(o[2]-s[2])}},$s=o,Qs=p;$s.prototype.toArray=function(t,e){let i=void 0!==t;if(i||(t=[]),t[e=e||0]=this.x,t[e+1]=this.y,t[e+2]=this.z,!i)return t},$s.prototype.fromArray=function(t,e){return e=e||0,this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},$s.prototype.fromArray=function(t,e){return e=e||0,this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},Qs.prototype.toArray=function(t,e){let i=void 0!==t;if(i||(t=[]),t[e=e||0]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,!i)return t},Qs.prototype.fromArray=function(t,e){return e=e||0,this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this};const Zs=2e3,Ks=100,Js=50,to=100,eo=50,io=50,so=20,oo={bodyFull:14,body:8,joint:16,contact:8,ray:11,character:16,vehicle:72,solver:128};class no{constructor(){this.id=0,this.list=[],this.type="item",this.Utils=null}reset(){let t=this.list.length;for(;t--;)this.dispose(this.list[t]);this.id=0,this.list=[]}byName(t){return this.Utils.byName(t)}setName(t={}){let e=void 0!==t.name?t.name:this.type+this.id++;return t.id=this.remove(e,!0),t.name=e,e}addToWorld(t,e=-1){this.Utils.add(t),-1!==e?this.list[e]=t:this.list.push(t)}remove(t,e){let i=this.byName(t);return i?this.clear(i,e):-1}clear(t,e){let i=this.list.indexOf(t);return-1===i||e?this.list[i]=null:this.list.splice(i,1),this.dispose(t),i}dispose(t){null!==t&&this.Utils.remove(t)}vecZero(t,e,i){for(;i--;)t[e+i]=0}fillArray(t,e,i,s){for(i=i||0,s=s??t.length;s--;)e[i+s]=t[s]}arLength(t){let e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return e<.001&&(e=0),e}multiplyScalar(t,e,i){for(i=i??t.length;i--;)t[i]*=e}divideScalar(t,e,i){this.multiplyScalar(t,1/e,i)}add(t={}){}set(t={}){}step(t,e){}}class ro extends no{constructor(){super(),this.Utils=Xs,this.type="body",this.num=oo[this.type],this.full=!1,this.p=new $s,this.v=new $s,this.q=new Qs}setFull(t){this.num=oo[t?"bodyFull":"body"],this.full=t}step(t,e){let i,s,o=this.list.length;for(;o--;)i=this.list[o],s=e+o*this.num,i?(t[s]=2===i.sleepState?0:1,i.position.toArray(t,s+1),i.quaternion.toArray(t,s+4),this.full&&(this.v.copy(i.velocity),this.v.toArray(t,s+8),t[s]=i.isSleeping()?0:9.8*this.v.length())):t[s]=t[s+1]=t[s+2]=t[s+3]=t[s+4]=t[s+5]=t[s+6]=t[s+7]=0}shape(t={}){let e,i,s,o,n,r=t.type||"box",a=t.size||[1,1,1];switch(r){case"plane":e=new pe,t.quat=[-.7071067811865475,0,0,.7071067811865476];break;case"particle":e=new de;break;case"box":e=new A(this.v.set(.5*a[0],.5*a[1],.5*a[2]));break;case"sphere":e=new ce(a[0]);break;case"cone":e=new ue(.001,a[0],a[1]);break;case"cylinder":e=new ue(a[0],a[0],a[1]);break;case"capsule":e=new ce(a[0]);break;case"convex":for(s=Math.floor(t.v.length/3),n=0,i=[];s--;)o=3*n,i.push(this.v.fromArray(t.v,o).clone()),n++;let r=[];for(s=t.index.length/3,n=0;s--;)o=3*n,r.push([t.index[o],t.index[o+1],t.index[o+2]]),n++;e=new g({vertices:i,faces:r});break;case"mesh":e=new ge(t.v,t.index)}let l=!1;if(void 0!==t.friction&&.5!==t.friction&&(l=!0),void 0!==t.restitution&&0!==t.restitution&&(l=!0),l){const i=new he;i.friction=t.friction||.5,i.restitution=t.restitution||0,e.material=i}return e.volumes=e.volume(),e}add(t={}){let e,i=this.setName(t),s=0;const o=[];switch(t.type){case"null":e=new de,e.localPos=(new $s).fromArray(t.localPos||[0,0,0]),e.localQuat=(new Qs).fromArray(t.localQuat||[0,0,0,1]),o.push(e);break;case"compound":let i;for(var n=0;n<t.shapes.length;n++)i=t.shapes[n],void 0!==t.density&&(i.density=t.density),void 0!==t.friction&&(i.friction=t.friction),void 0!==t.restitution&&(i.restitution=t.restitution),void 0!==t.mask&&(i.collisionMask=t.mask),void 0!==t.group&&(i.collisionGroup=t.group),void 0!==t.margin&&(i.margin=t.margin),e=this.shape(i),e.localPos=(new $s).fromArray(i.pos||[0,0,0]),e.localQuat=(new Qs).fromArray(i.quat||[0,0,0,1]),s+=e.volumes,o.push(e);break;case"capsule":e=this.shape(t),e.localPos=(new $s).fromArray(t.localPos||[0,0,0]),e.localPos.y+=.5*t.size[1],e.localQuat=(new Qs).fromArray(t.localQuat||[0,0,0,1]),o.push(e),e=this.shape(t),e.localPos=(new $s).fromArray(t.localPos||[0,0,0]),e.localPos.y-=.5*t.size[1],e.localQuat=(new Qs).fromArray(t.localQuat||[0,0,0,1]),o.push(e),s+=e.volumes;break;default:e=this.shape(t),e.localPos=(new $s).fromArray(t.localPos||[0,0,0]),e.localQuat=(new Qs).fromArray(t.localQuat||[0,0,0,1]),s+=e.volumes,o.push(e)}let r={mass:(t.density||0)*s},a=new R(r);for(let t in o)a.addShape(o[t],o[t].localPos,o[t].localQuat);a.name=i,a.types=this.type,a.first=!0,this.set(t,a),this.addToWorld(a,t.id)}set(t={},e=null){null===e&&(e=this.byName(t.name)),null!==e&&(t.pos&&e.position.fromArray(t.pos),t.quat&&e.quaternion.fromArray(t.quat),t.sleep&&e.sleep(),(t.activate||t.wake)&&e.wakeUp(),void 0!==t.neverSleep&&(e.allowSleep=!t.neverSleep,t.neverSleep&&e.wakeUp()),t.worldForce&&e.applyForce(this.v.fromArray(t.worldForce),this.v.fromArray(t.worldForce,3)),t.force&&e.applyLocalForce(this.v.fromArray(t.force)),t.torque&&e.applyTorque(this.v.fromArray(t.torque)),t.impulse&&e.applyImpulse(this.v.fromArray(t.impulse),this.v.fromArray(t.impulse,3)),t.localImpulse&&e.applyLocalImpulse(this.v.fromArray(t.localImpulse),this.v.fromArray(t.localImpulse,3)),t.angularFactor&&e.angularFactor.fromArray(t.angularFactor),t.linearFactor&&e.linearFactor.fromArray(t.linearFactor),t.linearVelocity&&e.velocity.fromArray(t.linearVelocity),t.angularVelocity&&e.angularVelocity.fromArray(t.angularVelocity),t.damping&&(e.linearDamping=t.damping[0],e.angularDamping=t.damping[1]),t.reset&&(e.velocity.set(0,0,0),e.angularVelocity.set(0,0,0)))}}class ao extends no{constructor(){super(),this.Utils=Xs,this.type="joint",this.v=new $s,this.q=new Qs,this.v1=new $s,this.v2=new $s}step(t,e){}add(t={}){let e,i=this.setName(t),s=this.byName(t.b1),o=this.byName(t.b2),n=t.mode||"revolute";switch(n){case"fixe":e=new se(s,this.v1,o,this.v2);break;case"hinge":case"revolute":break;case"slider":case"prismatic":case"distance":e=new oe(s,o,distance)}e.name=i,e.types=this.type,e.mode=n,e.visible=void 0===t.visible||t.visible,this.set(t,e),this.addToWorld(e)}set(t={},e=null){null===e&&(e=this.byName(t.name))}}self.onmessage=function(t){To.message(t)};let lo,ho,co,uo,po,yo,vo,fo=!1,mo=!1,wo=!1;const go="undefined"==typeof performance?Date:performance,bo={tmp:0,n:0,dt:0,fps:0};let xo,Eo,zo=1/60,Ao=10,Bo=!0,So=0,Fo=0,Mo=!0,Co=null,No=null,qo=null,Po=[],Ro=[],Io=[];class To{static test(){}static message(t){let e=t.data;e.Ar&&(lo=e.Ar),e.flow&&(Ys.flow=e.flow),To[e.m]||console.log(e.m),e.m&&To[e.m](e.o)}static post(t,e){uo?self.postMessage(t,e):co({data:t})}static init(t={}){uo=!0,wo=t.isBuffer||!1,void 0!==t.fps&&(zo=1/t.fps),void 0!==t.substep&&(Ao=t.substep),t.message&&(co=t.message,uo=!1,wo=!1),To.initItems(),To.post({m:"ready",o:{}})}static initItems(){po=new ro,yo=new Lo,vo=new ao}static set(t={}){ho=t.ArPos||function(t,e=!1){let i={},s={body:Zs*(e?oo.bodyFull:oo.body),joint:Ks*oo.joint,ray:to*oo.ray,contact:Js*oo.contact,character:eo*oo.character};"PHYSX"!==t&&"AMMO"!==t||(s.vehicle=io*oo.vehicle),"PHYSX"===t&&(s.solver=so*oo.solver),"HAVOK"!==t&&"RAPIER"!==t||(oo.joint=0);let o=0;for(let t in s)i[t]=o,o+=s[t];return i.total=o,i}("CANNON",t.full),po.setFull(t.full),mo=t.outsideStep||!1,fo=t.isTimeout||!1,zo=1/(t.fps||60),Ao=t.substep||1,t.broadphase,Bo=void 0===t.fixe||t.fixe,qo=(new $s).fromArray(t.gravity||[0,-9.80665,0]),null===Ys.world&&To.start()}static start(){null===Ys.world&&(lo=new Float32Array(ho.total),To.initWorld()),Mo=!1,xo=!1,Fo=0,Eo=0,mo||(fo?No=setTimeout(To.step,0):Co=setInterval(To.step,1e3*zo))}static initWorld(){const t=new Ns;t.gravity=qo,t.allowSleep=!0,t.defaultContactMaterial.friction=.5,t.defaultContactMaterial.restitution=0,t.defaultContactMaterial.contactEquationStiffness=1e7,t.defaultContactMaterial.contactEquationRelaxation=3,Ys.world=t}static add(t={}){switch(t.type||"box"){case"joint":vo.add(t);break;default:t.density||t.kinematic?po.add(t):yo.add(t)}}static remove(t={}){let e=this.byName(t.name);if(null!==e)switch(e.types){case"joint":e=vo.clear(e);break;case"solid":e=yo.clear(e);break;case"body":e=po.clear(e)}}static change(t={}){let e=this.byName(t.name);if(null!==e)switch(e.types){case"joint":e=vo.set(t,e);break;case"solid":e=yo.set(t,e);break;case"body":e=po.set(t,e)}}static dispatch(){for(Ro=Ys.flow.remove,Po=Ys.flow.add,Io=Ys.flow.tmp;Ro.length>0;)this.remove(Ro.shift());for(;Po.length>0;)this.add(Po.shift());for(;Io.length>0;)this.change(Io.shift());Ys.flow={key:[],add:[],remove:[],tmp:[]}}static poststep(){if(!Mo&&(Eo=1,this.dispatch(),!mo&&fo)){let t=1e3*zo-(go.now()-So);t<0&&(t=0),No=setTimeout(To.step,t)}}static step(t){if(xo&&To.endReset(),Mo||Eo>=2)return;Eo=2,So=t||go.now(),Ys.delta=.001*(So-Fo),Fo=So;let e=Ao;for(;e--;)Bo?Ys.world.step(zo/Ao):Ys.world.step(Ys.delta/Ao);To.stepItems(),So-1e3>bo.tmp&&(bo.tmp=So,Ys.reflow.stat.fps=bo.n,bo.n=0),bo.n++,Ys.reflow.stat.delta=Ys.delta,wo?To.post({m:"step",reflow:Ys.reflow,Ar:lo},[lo.buffer]):To.post({m:"step",reflow:Ys.reflow,Ar:lo})}static stepItems(){po.step(lo,ho.body),vo.step(lo,ho.joint)}static byName(t){return Xs.byName(t)}static reset(){xo=!0}static endReset(){To.stop(),po.reset(),yo.reset(),vo.reset(),Ys.world=null,Xs.clear(),To.post({m:"resetCallback",o:{}})}static stop(){Mo=!0,mo||(No&&clearTimeout(No),Co&&clearInterval(Co),Co=null,No=null)}static pause(t){let e=t.value;e!==Mo&&(e?this.stop():this.start())}}class Lo extends ro{constructor(){super(),this.type="solid"}step(t,e){}}t.engine=To,Object.defineProperty(t,"__esModule",{value:!0})}));
